### YamlMime:UniversalReference
ms.openlocfilehash: 710b634fa6d51baa927cf736564cb3b38a6c36d9
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 08/13/2018
ms.locfileid: "40049494"
items:
- uid: azure-sb.ServiceBusService
  id: azure-sb.ServiceBusService
  name: ServiceBusService
  summary: >-
    ServiceBusServices，可使用 Microsoft Azure 服务总线。

    服务总线提供了这两个队列用于发送和接收消息，以及适用于移动设备的推送通知。


    服务总线队列提供这两个标准消息队列功能以及发布/订阅即。

    有关服务总线队列的详细信息以及任务上使用它们从 Node.js 应用程序有针对性的信息，请参见[如何使用服务总线队列](https://www.windowsazure.com/en-us/develop/nodejs/how-to-guides/service-bus-queues/)和[如何使用服务总线主题/订阅到](https://www.windowsazure.com/en-us/develop/nodejs/how-to-guides/service-bus-topics/).


    服务总线提供了通过通知中心推送通知。

    尽管可以使用 ServiceBusService 来管理通知中心，则必须使用<xref:azure-sb.NotificationHubService>将消息发送到移动设备。
  fullName: azure-sb.ServiceBusService
  type: Class
  children:
  - azure-sb.ServiceBusService.#ctor
  - azure-sb.ServiceBusService#receiveQueueMessage
  - azure-sb.ServiceBusService#receiveSubscriptionMessage
  - azure-sb.ServiceBusService#deleteMessage
  - azure-sb.ServiceBusService#unlockMessage
  - azure-sb.ServiceBusService#renewLockForMessage
  - azure-sb.ServiceBusService#sendQueueMessage
  - azure-sb.ServiceBusService#sendTopicMessage
  - azure-sb.ServiceBusService#createQueue
  - azure-sb.ServiceBusService#createQueueIfNotExists
  - azure-sb.ServiceBusService#deleteQueue
  - azure-sb.ServiceBusService#getQueue
  - azure-sb.ServiceBusService#listQueues
  - azure-sb.ServiceBusService#createTopic
  - azure-sb.ServiceBusService#createTopicIfNotExists
  - azure-sb.ServiceBusService#deleteTopic
  - azure-sb.ServiceBusService#getTopic
  - azure-sb.ServiceBusService#listTopics
  - azure-sb.ServiceBusService#createSubscription
  - azure-sb.ServiceBusService#deleteSubscription
  - azure-sb.ServiceBusService#getSubscription
  - azure-sb.ServiceBusService#listSubscriptions
  - azure-sb.ServiceBusService#createRule
  - azure-sb.ServiceBusService#deleteRule
  - azure-sb.ServiceBusService#getRule
  - azure-sb.ServiceBusService#listRules
  - azure-sb.ServiceBusService#createNotificationHub
  - azure-sb.ServiceBusService#getNotificationHub
  - azure-sb.ServiceBusService#listNotificationHubs
  - azure-sb.ServiceBusService#deleteNotificationHub
  langs:
  - js
- id: azure-sb.ServiceBusService.#ctor
  uid: azure-sb.ServiceBusService.#ctor
  parent: azure-sb.ServiceBusService
  name: ServiceBusService(configOrNamespaceOrConnectionString, accessKey, issuer, acsNamespace, host, authenticationProvider)
  fullName: azure-sb.ServiceBusService.ServiceBusService(configOrNamespaceOrConnectionString, accessKey, issuer, acsNamespace, host, authenticationProvider)
  summary: >-
    创建新的 ServiceBusService 对象。


    Azure 模块将读取环境变量 AZURE_SERVICEBUS_NAMESPACE 和 AZURE_SERVICEBUS_ACCESS_KEY 以连接到你的 Microsoft Azure 服务总线所需的信息。

    如果未设置这些环境变量，您必须创建 ServiceBusService 对象时指定帐户信息。
  type: Constructor
  syntax:
    parameters:
    - id: configOrNamespaceOrConnectionString
      type:
      - string
      description: 服务总线命名空间或连接字符串。
      optional: true
    - id: accessKey
      type:
      - string
      description: 密码。 仅必要时如果没有连接字符串传递。
      optional: true
    - id: issuer
      type:
      - string
      description: 颁发者。
      optional: true
    - id: acsNamespace
      type:
      - string
      description: Acs 命名空间。 使用 sb 命名空间通常相同"-sb"后缀。
      optional: true
    - id: host
      type:
      - string
      description: 中的主机地址。
      optional: true
    - id: authenticationProvider
      type:
      - object
      description: 身份验证提供程序。
      optional: true
    content: new ServiceBusService(configOrNamespaceOrConnectionString, accessKey, issuer, acsNamespace, host, authenticationProvider)
  langs:
  - js
- uid: azure-sb.ServiceBusService#receiveQueueMessage
  id: azure-sb.ServiceBusService#receiveQueueMessage
  parent: azure-sb.ServiceBusService
  name: receiveQueueMessage(queuePath, options, callback)
  summary: 接收队列消息。
  fullName: azure-sb.ServiceBusService.receiveQueueMessage(queuePath, options, callback)
  type: Function
  syntax:
    parameters:
    - id: queuePath
      type:
      - string
      description: 表示将向其发送消息的队列的名称的字符串对象。
    - id: options
      type:
      - object
      description: 在请求选项。
      optional: true
    - id: options.isPeekLock
      type:
      - azure-sb.bool
      description: 布尔值，该值指示是否应查看或接收消息。
      optional: true
    - id: options.timeoutIntervalInS
      type:
      - azure-sb.int
      description: 超时间隔，以秒为单位，要用于该请求。
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` 如果出现错误; 将包含的信息否则为`receivequeuemessageresult`将包含消息结果信息。
                                                                                        `response` 将包含与此操作相关的信息。
    return:
      type:
      - undefined
      description: ''
    content: function receiveQueueMessage(queuePath, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#receiveSubscriptionMessage
  id: azure-sb.ServiceBusService#receiveSubscriptionMessage
  parent: azure-sb.ServiceBusService
  name: receiveSubscriptionMessage(topicPath, subscriptionPath, options, callback)
  summary: 接收订阅的消息。
  fullName: azure-sb.ServiceBusService.receiveSubscriptionMessage(topicPath, subscriptionPath, options, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: 表示要接收的主题的名称的字符串对象。
    - id: subscriptionPath
      type:
      - string
      description: 将收到一个表示从消息的订阅的名称的字符串对象。
    - id: options
      type:
      - object
      description: 在请求选项。
      optional: true
    - id: options.isPeekLock
      type:
      - azure-sb.bool
      description: 布尔值，该值指示是否应查看或接收消息。
      optional: true
    - id: options.timeoutIntervalInS
      type:
      - azure-sb.int
      description: 超时间隔，以秒为单位，要用于该请求。
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` 如果出现错误; 将包含的信息否则为`receivetopicmessageresult`将包含消息结果信息。
                                                                                        `response` 将包含与此操作相关的信息。
    return:
      type:
      - undefined
      description: ''
    content: function receiveSubscriptionMessage(topicPath, subscriptionPath, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#deleteMessage
  id: azure-sb.ServiceBusService#deleteMessage
  parent: azure-sb.ServiceBusService
  name: deleteMessage(message, callback)
  summary: 删除一条消息。
  fullName: azure-sb.ServiceBusService.deleteMessage(message, callback)
  type: Function
  syntax:
    parameters:
    - id: message
      type:
      - object
      - string
      description: 消息对象或消息位置的字符串。
    - id: callback
      type:
      - function
      description: '`error` 如果出现错误; 将包含的信息否则为`response`将包含与此操作相关的信息。'
    return:
      type:
      - undefined
      description: ''
    content: function deleteMessage(message, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#unlockMessage
  id: azure-sb.ServiceBusService#unlockMessage
  parent: azure-sb.ServiceBusService
  name: unlockMessage(message, callback)
  summary: 解锁的消息。
  fullName: azure-sb.ServiceBusService.unlockMessage(message, callback)
  type: Function
  syntax:
    parameters:
    - id: message
      type:
      - object
      - string
      description: 消息对象或消息位置的字符串。
    - id: callback
      type:
      - function
      description: '`error` 如果出现错误; 将包含的信息否则为`response`将包含与此操作相关的信息。'
    return:
      type:
      - undefined
      description: ''
    content: function unlockMessage(message, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#renewLockForMessage
  id: azure-sb.ServiceBusService#renewLockForMessage
  parent: azure-sb.ServiceBusService
  name: renewLockForMessage(message, callback)
  summary: 续订锁定的消息。
  fullName: azure-sb.ServiceBusService.renewLockForMessage(message, callback)
  type: Function
  syntax:
    parameters:
    - id: message
      type:
      - object
      - string
      description: 消息对象或消息位置的字符串。
    - id: callback
      type:
      - function
      description: '`error` 如果出现错误; 将包含的信息否则为`response`将包含与此操作相关的信息。'
    return:
      type:
      - undefined
      description: ''
    content: function renewLockForMessage(message, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#sendQueueMessage
  id: azure-sb.ServiceBusService#sendQueueMessage
  parent: azure-sb.ServiceBusService
  name: sendQueueMessage(queuePath, message, callback)
  summary: 发送队列消息。
  fullName: azure-sb.ServiceBusService.sendQueueMessage(queuePath, message, callback)
  type: Function
  syntax:
    parameters:
    - id: queuePath
      type:
      - string
      description: 表示将向其发送消息的队列的名称的字符串对象。
    - id: message
      type:
      - object
      - string
      description: 表示要发送的消息的消息对象。
    - id: message.body
      type:
      - string
      description: 消息的文本。
      optional: true
    - id: message.customProperties
      type:
      - object
      description: 消息的自定义属性。
      optional: true
    - id: message.brokerProperties.CorrelationId
      type:
      - string
      description: 消息的相关标识符。
      optional: true
    - id: message.brokerProperties.SessionId
      type:
      - string
      description: 会话标识符。
      optional: true
    - id: message.brokerProperties.MessageId
      type:
      - string
      description: 消息的标识符。
      optional: true
    - id: message.brokerProperties.Label
      type:
      - string
      description: 消息的标签。
      optional: true
    - id: message.brokerProperties.ReplyTo
      type:
      - string
      description: 消息的回复。
      optional: true
    - id: message.brokerProperties.TimeToLive
      type:
      - string
      description: 消息的生存时间。
      optional: true
    - id: message.brokerProperties.To
      type:
      - string
      description: 消息的 to。
      optional: true
    - id: message.brokerProperties.ScheduledEnqueueTimeUtc
      type:
      - string
      description: Utc 格式的消息的计划的排队时间。
      optional: true
    - id: message.brokerProperties.ReplyToSessionId
      type:
      - string
      description: 为会话标识符的消息的答复。
      optional: true
    - id: callback
      type:
      - function
      description: '`error` 如果出现错误; 将包含的信息否则为`response`将包含与此操作相关的信息。'
    return:
      type:
      - undefined
      description: ''
    content: function sendQueueMessage(queuePath, message, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#sendTopicMessage
  id: azure-sb.ServiceBusService#sendTopicMessage
  parent: azure-sb.ServiceBusService
  name: sendTopicMessage(topicPath, message, callback)
  summary: 将发送主题消息。
  fullName: azure-sb.ServiceBusService.sendTopicMessage(topicPath, message, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: 表示消息将发送到主题的名称的字符串对象。
    - id: message
      type:
      - object
      - string
      description: 表示要发送的消息的消息对象。
    - id: message.body
      type:
      - string
      description: 消息的文本。
      optional: true
    - id: message.customProperties
      type:
      - object
      description: 消息的自定义属性。
      optional: true
    - id: message.brokerProperties.CorrelationId
      type:
      - string
      description: 消息的相关标识符。
      optional: true
    - id: message.brokerProperties.SessionId
      type:
      - string
      description: 会话标识符。
      optional: true
    - id: message.brokerProperties.MessageId
      type:
      - string
      description: 消息的标识符。
      optional: true
    - id: message.brokerProperties.Label
      type:
      - string
      description: 消息的标签。
      optional: true
    - id: message.brokerProperties.ReplyTo
      type:
      - string
      description: 消息的回复。
      optional: true
    - id: message.brokerProperties.TimeToLive
      type:
      - string
      description: 消息的生存时间。
      optional: true
    - id: message.brokerProperties.To
      type:
      - string
      description: 消息的 to。
      optional: true
    - id: message.brokerProperties.ScheduledEnqueueTimeUtc
      type:
      - string
      description: Utc 格式的消息的计划的排队时间。
      optional: true
    - id: message.brokerProperties.ReplyToSessionId
      type:
      - string
      description: 为会话标识符的消息的答复。
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` 如果出现错误; 将包含的信息否则为`receivetopicmessageresult`将包含消息结果信息。
                                                                                          `response` 将包含与此操作相关的信息。
    return:
      type:
      - undefined
      description: ''
    content: function sendTopicMessage(topicPath, message, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#createQueue
  id: azure-sb.ServiceBusService#createQueue
  parent: azure-sb.ServiceBusService
  name: createQueue(queuePath, options, callback)
  summary: 创建一个队列。
  fullName: azure-sb.ServiceBusService.createQueue(queuePath, options, callback)
  type: Function
  syntax:
    parameters:
    - id: queuePath
      type:
      - string
      description: 表示要创建的队列的名称的字符串对象。
    - id: options
      type:
      - object
      description: 在请求选项。
      optional: true
    - id: options.MaxSizeInMegaBytes
      type:
      - azure-sb.int
      description: 指定最大队列大小以兆字节为单位。 排入队列的消息会导致队列超出此值的任何尝试将失败。
      optional: true
    - id: options.DefaultMessageTimeToLive
      type:
      - azure-sb.PTnHnMnS
      description: 具体取决于是否已启用死信，一条消息自动移动到 DeadLetterQueue 或删除存储在队列中的时间比指定的时间。 当且仅当消息 TTL 小于队列上设置 TTL，消息上指定的 ttl 会覆盖此值。 创建队列之后，此值是不可变。
      optional: true
    - id: options.LockDuration
      type:
      - azure-sb.PTnHnMnS
      description: 确定时间 （秒） 应在其中锁定一条消息由接收方的处理的量。 超过此时段，消息由下一步的接收方将解锁并可供使用。 只可以在创建队列时设置。
      optional: true
    - id: options.RequiresSession
      type:
      - azure-sb.bool
      description: 只可以在创建队列时设置。 如果设置为 true，队列将是会话感知和唯一 SessionReceiver 将受支持。 不通过 REST 支持会话感知队列。
      optional: true
    - id: options.RequiresDuplicateDetection
      type:
      - azure-sb.bool
      description: 只可以在创建队列时设置。
      optional: true
    - id: options.DeadLetteringOnMessageExpiration
      type:
      - azure-sb.bool
      description: 此字段控制服务总线如何处理 TTL 已过期的消息。 如果已启用且消息已过期，服务总线将消息从队列移动到队列的死信子队列。 如果禁用了，消息将永久删除从队列。 只可以在创建队列时设置。
      optional: true
    - id: options.DuplicateDetectionHistoryTimeWindow
      type:
      - azure-sb.bool
      description: 指定在此期间服务总线检测到重复消息的时间跨度。
      optional: true
    - id: options.EnablePartitioning
      type:
      - azure-sb.bool
      description: 指定队列是否应进行分区。
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` 如果出现错误; 将包含的信息否则为`createqueueresult`将包含新的队列信息。
                                                                                          `response` 将包含与此操作相关的信息。
    return:
      type:
      - undefined
      description: ''
    content: function createQueue(queuePath, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#createQueueIfNotExists
  id: azure-sb.ServiceBusService#createQueueIfNotExists
  parent: azure-sb.ServiceBusService
  name: createQueueIfNotExists(queuePath, options, callback)
  summary: 如果它已不存在，请创建一个队列。
  fullName: azure-sb.ServiceBusService.createQueueIfNotExists(queuePath, options, callback)
  type: Function
  syntax:
    parameters:
    - id: queuePath
      type:
      - string
      description: 表示要删除的队列的名称的字符串对象。
    - id: options
      type:
      - object
      description: 在请求选项。
      optional: true
    - id: options.MaxSizeInMegaBytes
      type:
      - azure-sb.int
      description: 指定最大队列大小以兆字节为单位。 排入队列的消息会导致队列超出此值的任何尝试将失败。
      optional: true
    - id: options.DefaultMessageTimeToLive
      type:
      - azure-sb.PTnHnMnS
      description: 具体取决于是否已启用死信，一条消息自动移动到 DeadLetterQueue 或删除存储在队列中的时间比指定的时间。 当且仅当消息 TTL 小于队列上设置 TTL，消息上指定的 ttl 会覆盖此值。 创建队列之后，此值是不可变。
      optional: true
    - id: options.LockDuration
      type:
      - azure-sb.PTnHnMnS
      description: 确定时间 （秒） 应在其中锁定一条消息由接收方的处理的量。 超过此时段，消息由下一步的接收方将解锁并可供使用。 只可以在创建队列时设置。
      optional: true
    - id: options.RequiresSession
      type:
      - azure-sb.bool
      description: 只可以在创建队列时设置。 如果设置为 true，队列将是会话感知和唯一 SessionReceiver 将受支持。 不通过 REST 支持会话感知队列。
      optional: true
    - id: options.RequiresDuplicateDetection
      type:
      - azure-sb.bool
      description: 只可以在创建队列时设置。
      optional: true
    - id: options.DeadLetteringOnMessageExpiration
      type:
      - azure-sb.bool
      description: 此字段控制服务总线如何处理 TTL 已过期的消息。 如果已启用且消息已过期，服务总线将消息从队列移动到队列的死信子队列。 如果禁用了，消息将永久删除从队列。 只可以在创建队列时设置。
      optional: true
    - id: options.DuplicateDetectionHistoryTimeWindow
      type:
      - azure-sb.bool
      description: 指定在此期间服务总线检测到重复消息的时间跨度。
      optional: true
    - id: options.EnablePartitioning
      type:
      - azure-sb.bool
      description: 指定队列是否应进行分区。
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` 如果出现错误; 将包含的信息否则为`queueCreated`将包含新的队列信息。
                                                                                          `response` 将包含与此操作相关的信息。
    return:
      type:
      - undefined
      description: ''
    content: function createQueueIfNotExists(queuePath, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#deleteQueue
  id: azure-sb.ServiceBusService#deleteQueue
  parent: azure-sb.ServiceBusService
  name: deleteQueue(queuePath, callback)
  summary: 删除队列。
  fullName: azure-sb.ServiceBusService.deleteQueue(queuePath, callback)
  type: Function
  syntax:
    parameters:
    - id: queuePath
      type:
      - string
      description: 表示要删除的队列的名称的字符串对象。
    - id: callback
      type:
      - function
      description: '`error` 如果出现错误; 将包含的信息否则为`response`将包含与此操作相关的信息。'
    return:
      type:
      - undefined
      description: ''
    content: function deleteQueue(queuePath, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#getQueue
  id: azure-sb.ServiceBusService#getQueue
  parent: azure-sb.ServiceBusService
  name: getQueue(queuePath, callback)
  summary: 检索队列。
  fullName: azure-sb.ServiceBusService.getQueue(queuePath, callback)
  type: Function
  syntax:
    parameters:
    - id: queuePath
      type:
      - string
      description: 表示要检索的队列的名称的字符串对象。
    - id: callback
      type:
      - function
      description: >-
        `error` 如果出现错误; 将包含的信息否则为`queueresult`将包含队列的信息。
                                                                                          `response` 将包含与此操作相关的信息。
    return:
      type:
      - undefined
      description: ''
    content: function getQueue(queuePath, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#listQueues
  id: azure-sb.ServiceBusService#listQueues
  parent: azure-sb.ServiceBusService
  name: listQueues(options, callback)
  summary: 返回队列的列表。
  fullName: azure-sb.ServiceBusService.listQueues(options, callback)
  type: Function
  syntax:
    parameters:
    - id: options
      type:
      - object
      description: 在请求选项。
      optional: true
    - id: options.top
      type:
      - azure-sb.int
      description: 用于列出队列 top 子句。
      optional: true
    - id: options.skip
      type:
      - azure-sb.int
      description: Skip 子句用于列出队列。
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` 如果出现错误; 将包含的信息否则为`listqueueresult`将包含队列的列表。
                                                                              `response` 将包含与此操作相关的信息。
    return:
      type:
      - undefined
      description: ''
    content: function listQueues(options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#createTopic
  id: azure-sb.ServiceBusService#createTopic
  parent: azure-sb.ServiceBusService
  name: createTopic(topic, options, callback)
  summary: 创建主题。
  fullName: azure-sb.ServiceBusService.createTopic(topic, options, callback)
  type: Function
  syntax:
    parameters:
    - id: topic
      type:
      - azure-sb.TopicInfo
      description: 表示要创建的主题的主题对象。
    - id: options
      type:
      - object
      description: 在请求选项。
      optional: true
    - id: options.MaxSizeInMegabytes
      type:
      - azure-sb.int
      description: 指定最大主题大小以兆字节为单位。 排入队列的消息会导致主题超出此值的任何尝试将失败。 存储在主题或任何其订阅会计入此值中的所有消息。 多个消息的副本驻留在一个或多个订阅数为一条消息。 例如，如果在订阅 s1 和 s2 订阅中两次，一次存在消息 m，m 被计为一条消息。
      optional: true
    - id: options.DefaultMessageTimeToLive
      type:
      - azure-sb.PTnHnMnS
      description: 确定多长时间消息相关联的订阅中。 订阅从主题继承 TTL，除非它们使用较小的 TTL 显式创建。 根据是否启用死信，TTL 过期的消息将移动到订阅的相关 DeadLtterQueue，或将被永久删除。
      optional: true
    - id: options.RequiresDuplicateDetection
      type:
      - azure-sb.bool
      description: 如果启用，本主题将检测重复消息的 DuplicateDetectionHistoryTimeWindow 属性所指定的时间跨度。 只可以在创建主题时设置。
      optional: true
    - id: options.DuplicateDetectionHistoryTimeWindow
      type:
      - azure-sb.PTnHnMnS
      description: 指定在此期间，服务总线将检测重复消息的时间跨度。
      optional: true
    - id: options.EnableBatchedOperations
      type:
      - azure-sb.bool
      description: 指定是否应允许批处理的操作。
      optional: true
    - id: options.SizeInBytes
      type:
      - azure-sb.int
      description: 以字节为单位指定主题大小。
      optional: true
    - id: options.SupportOrdering
      type:
      - azure-sb.bool
      description: 指定主题是否支持排序消息。
      optional: true
    - id: options.EnablePartitioning
      type:
      - azure-sb.bool
      description: 指定是否应分区主题
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` 如果出现错误; 将包含的信息否则为`createtopicresult`将包含新的主题信息。
                                                                                                `response` 将包含与此操作相关的信息。
    return:
      type:
      - undefined
      description: ''
    content: function createTopic(topic, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#createTopicIfNotExists
  id: azure-sb.ServiceBusService#createTopicIfNotExists
  parent: azure-sb.ServiceBusService
  name: createTopicIfNotExists(topic, options, callback)
  summary: 如果不存在，请创建一个主题。
  fullName: azure-sb.ServiceBusService.createTopicIfNotExists(topic, options, callback)
  type: Function
  syntax:
    parameters:
    - id: topic
      type:
      - azure-sb.TopicInfo
      description: 表示要创建的主题的主题对象。
    - id: options
      type:
      - object
      description: 在请求选项。
      optional: true
    - id: options.MaxSizeInMegabytes
      type:
      - azure-sb.int
      description: 指定最大主题大小以兆字节为单位。 排入队列的消息会导致主题超出此值的任何尝试将失败。 存储在主题或任何其订阅会计入此值中的所有消息。 多个消息的副本驻留在一个或多个订阅数为一条消息。 例如，如果在订阅 s1 和 s2 订阅中两次，一次存在消息 m，m 被计为一条消息。
      optional: true
    - id: options.DefaultMessageTimeToLive
      type:
      - azure-sb.PTnHnMnS
      description: 确定多长时间消息相关联的订阅中。 订阅从主题继承 TTL，除非它们使用较小的 TTL 显式创建。 根据是否启用死信，TTL 过期的消息将移动到订阅的相关 DeadLtterQueue，或将被永久删除。
      optional: true
    - id: options.RequiresDuplicateDetection
      type:
      - azure-sb.bool
      description: 如果启用，本主题将检测重复消息的 DuplicateDetectionHistoryTimeWindow 属性所指定的时间跨度。 只可以在创建主题时设置。
      optional: true
    - id: options.DuplicateDetectionHistoryTimeWindow
      type:
      - azure-sb.PTnHnMnS
      description: 指定在此期间，服务总线将检测重复消息的时间跨度。
      optional: true
    - id: options.MaxSubscriptionsPerTopic
      type:
      - azure-sb.int
      description: 指定可以与主题相关联的订阅的最大数目。
      optional: true
    - id: options.MaxSqlFiltersPerTopic
      type:
      - azure-sb.int
      description: 指定的最大 SQL 筛选器中的表达式 （总计），可以添加到与主题关联的订阅数。
      optional: true
    - id: options.MaxCorrelationFiltersPerTopic
      type:
      - azure-sb.int
      description: 指定的最大相关筛选器中的表达式 （总计），可以添加到与主题关联的订阅数。
      optional: true
    - id: options.EnableDeadLetteringOnMessageExpiration
      type:
      - azure-sb.bool
      description: 只可以在创建主题时设置。
      optional: true
    - id: options.EnableDeadLetteringOnFilterEvaluationExceptions
      type:
      - azure-sb.bool
      description: 只可以在创建主题时设置。
      optional: true
    - id: options.SupportOrdering
      type:
      - azure-sb.bool
      description: 指定主题是否支持排序消息。
      optional: true
    - id: options.EnablePartitioning
      type:
      - azure-sb.bool
      description: 指定是否应分区主题
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` 如果出现错误; 将包含的信息否则为`topicCreated`将包含新的主题信息。
                                                                                                `response` 将包含与此操作相关的信息。
    return:
      type:
      - undefined
      description: ''
    content: function createTopicIfNotExists(topic, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#deleteTopic
  id: azure-sb.ServiceBusService#deleteTopic
  parent: azure-sb.ServiceBusService
  name: deleteTopic(topicPath, callback)
  summary: 删除某个主题。
  fullName: azure-sb.ServiceBusService.deleteTopic(topicPath, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: 一个<code>String</code>对象，表示要删除的队列的名称。
    - id: callback
      type:
      - function
      description: '`error` 如果出现错误; 将包含的信息否则为`response`将包含与此操作相关的信息。'
    return:
      type:
      - undefined
      description: ''
    content: function deleteTopic(topicPath, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#getTopic
  id: azure-sb.ServiceBusService#getTopic
  parent: azure-sb.ServiceBusService
  name: getTopic(topicPath, callback)
  summary: 检索一个主题。
  fullName: azure-sb.ServiceBusService.getTopic(topicPath, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: 一个<code>String</code>对象，表示要检索的主题的名称。
    - id: callback
      type:
      - function
      description: >-
        `error` 如果出现错误; 将包含的信息否则为`gettopicresult`将包含的主题信息。
                                                                         `response` 将包含与此操作相关的信息。
    return:
      type:
      - undefined
      description: ''
    content: function getTopic(topicPath, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#listTopics
  id: azure-sb.ServiceBusService#listTopics
  parent: azure-sb.ServiceBusService
  name: listTopics(options, callback)
  summary: 返回主题的列表。
  fullName: azure-sb.ServiceBusService.listTopics(options, callback)
  type: Function
  syntax:
    parameters:
    - id: options
      type:
      - object
      description: 在请求选项。
      optional: true
    - id: options.top
      type:
      - azure-sb.int
      description: 要提取的主题的数量。
      optional: true
    - id: options.skip
      type:
      - azure-sb.int
      description: 要跳过的主题的数量。
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` 如果出现错误; 将包含的信息否则为`listtopicsresult`将包含的主题列表。
                                                                              `response` 将包含与此操作相关的信息。
    return:
      type:
      - undefined
      description: ''
    content: function listTopics(options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#createSubscription
  id: azure-sb.ServiceBusService#createSubscription
  parent: azure-sb.ServiceBusService
  name: createSubscription(topicPath, subscriptionPath, options, callback)
  summary: 创建的订阅。
  fullName: azure-sb.ServiceBusService.createSubscription(topicPath, subscriptionPath, options, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: 表示订阅的主题的名称的字符串对象。
    - id: subscriptionPath
      type:
      - string
      description: 表示订阅的名称的字符串对象。
    - id: options
      type:
      - object
      description: 在请求选项。
      optional: true
    - id: options.LockDuration
      type:
      - azure-sb.PTnHnMnS
      description: 默认锁定持续时间会应用到未定义锁定持续时间的订阅。 只可以在创建订阅时设置。
      optional: true
    - id: options.RequiresSession
      type:
      - azure-sb.bool
      description: 只可以在创建订阅时设置。 如果设置为 true，订阅将会支持会话感知，并且只 SessionReceiver。 无法通过 REST 支持会话感知订阅。
      optional: true
    - id: options.DefaultMessageTimeToLive
      type:
      - azure-sb.PTnHnMnS
      description: 确定多长时间消息都存在于订阅。 根据是否启用死信，TTL 过期的消息将是移动到订阅的相关 DeadLtterQueue 或永久删除。
      optional: true
    - id: options.EnableDeadLetteringOnMessageExpiration
      type:
      - azure-sb.bool
      description: 此字段控制服务总线如何处理 TTL 已过期的消息。 如果已启用且消息已过期，服务总线将消息从队列移动到订阅的死信子队列。 如果禁用了，消息将永久删除从订阅的主队列。 只可以在创建订阅时设置。
      optional: true
    - id: options.EnableDeadLetteringOnFilterEvaluationExceptions
      type:
      - azure-sb.bool
      description: 确定服务总线如何处理订阅的筛选器评估期间导致异常的消息。 如果值设置为 true，导致异常的消息将移动到订阅的死信队列。 否则，它将被放弃。 默认情况下设置此参数为 true，允许用户有机会调查异常的原因。 它可以从消息格式不正确或某些错误的假设进行有关格式的消息筛选器中会出现。 只可以在创建主题时设置。
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` 如果出现错误; 将包含的信息否则为`createsubscriptionresult`将包含新的订阅信息。
                                                                                          `response` 将包含与此操作相关的信息。
    return:
      type:
      - undefined
      description: ''
    content: function createSubscription(topicPath, subscriptionPath, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#deleteSubscription
  id: azure-sb.ServiceBusService#deleteSubscription
  parent: azure-sb.ServiceBusService
  name: deleteSubscription(topicPath, subscriptionPath, callback)
  summary: 删除的订阅。
  fullName: azure-sb.ServiceBusService.deleteSubscription(topicPath, subscriptionPath, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: 表示订阅的主题的名称的字符串对象。
    - id: subscriptionPath
      type:
      - string
      description: 表示要删除的订阅的名称的字符串对象。
    - id: callback
      type:
      - function
      description: '`error` 如果出现错误; 将包含的信息否则为`response`将包含与此操作相关的信息。'
    return:
      type:
      - undefined
      description: ''
    content: function deleteSubscription(topicPath, subscriptionPath, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#getSubscription
  id: azure-sb.ServiceBusService#getSubscription
  parent: azure-sb.ServiceBusService
  name: getSubscription(topicPath, subscriptionPath, callback)
  summary: 检索订阅。
  fullName: azure-sb.ServiceBusService.getSubscription(topicPath, subscriptionPath, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: 表示订阅的主题的名称的字符串对象。
    - id: subscriptionPath
      type:
      - string
      description: 表示要检索的订阅的名称的字符串对象。
    - id: callback
      type:
      - function
      description: >-
        `error` 如果出现错误; 将包含的信息否则为`getsubscriptionresult`将包含订阅信息。
                                                                                        `response` 将包含与此操作相关的信息。
    return:
      type:
      - undefined
      description: ''
    content: function getSubscription(topicPath, subscriptionPath, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#listSubscriptions
  id: azure-sb.ServiceBusService#listSubscriptions
  parent: azure-sb.ServiceBusService
  name: listSubscriptions(topicPath, options, callback)
  summary: 返回订阅的列表。
  fullName: azure-sb.ServiceBusService.listSubscriptions(topicPath, options, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: 表示要检索的订阅的主题名称的字符串对象。
    - id: options
      type:
      - object
      description: 在请求选项。
      optional: true
    - id: options.top
      type:
      - azure-sb.int
      description: 要提取的主题的数量。
      optional: true
    - id: options.skip
      type:
      - azure-sb.int
      description: 要跳过的主题的数量。
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` 如果出现错误; 将包含的信息否则为`listsubscriptionresult`将包含订阅的列表。
                                                                              `response` 将包含与此操作相关的信息。
    return:
      type:
      - undefined
      description: ''
    content: function listSubscriptions(topicPath, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#createRule
  id: azure-sb.ServiceBusService#createRule
  parent: azure-sb.ServiceBusService
  name: createRule(topicPath, subscriptionPath, rulePath, options, callback)
  summary: 创建一个规则。
  fullName: azure-sb.ServiceBusService.createRule(topicPath, subscriptionPath, rulePath, options, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: 表示订阅的主题的名称的字符串对象。
    - id: subscriptionPath
      type:
      - string
      description: 表示将为其创建规则的订阅的名称的字符串对象。
    - id: rulePath
      type:
      - string
      description: 表示要创建的规则的名称的字符串对象。
    - id: options
      type:
      - object
      description: 在请求选项。
      optional: true
    - id: options.trueFilter
      type:
      - string
      description: 定义规则的计算结果的表达式为 true 的筛选器。
      optional: true
    - id: options.falseFilter
      type:
      - string
      description: 定义规则的计算结果的表达式为 false 的筛选器。
      optional: true
    - id: options.sqlExpressionFilter
      type:
      - string
      description: 定义规则的计算结果的表达式。 表达式字符串解释为一个 SQL92 表达式的计算结果必须为 True 或 False。 可以定义一个相关和 sql 表达式之间只有一个。
      optional: true
    - id: options.correlationIdFilter
      type:
      - string
      description: 定义规则的计算结果的表达式。 允许仅将其 CorrelationId 匹配筛选器表达式中设置的 CorrelationId 的消息。 可以定义一个相关和 sql 表达式之间只有一个。
      optional: true
    - id: options.sqlRuleAction
      type:
      - string
      description: 定义规则的计算结果的表达式。 如果规则的类型为 SQL，则表达式字符串被解释为一个 SQL92 表达式的计算结果必须为 True 或 False。 如果规则为的类型 CorrelationFilterExpression，则允许仅将其 CorrelationId 匹配筛选器表达式中设置的 CorrelationId 的消息。
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` 如果出现错误; 将包含的信息否则为`createruleresults`将包含新的规则信息。
                                                                                    `response` 将包含与此操作相关的信息。
    return:
      type:
      - undefined
      description: ''
    content: function createRule(topicPath, subscriptionPath, rulePath, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#deleteRule
  id: azure-sb.ServiceBusService#deleteRule
  parent: azure-sb.ServiceBusService
  name: deleteRule(topicPath, subscriptionPath, rulePath, callback)
  summary: 删除规则。
  fullName: azure-sb.ServiceBusService.deleteRule(topicPath, subscriptionPath, rulePath, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: 表示订阅的主题的名称的字符串对象。
    - id: subscriptionPath
      type:
      - string
      description: 表示该规则将为其删除的订阅的名称的字符串对象。
    - id: rulePath
      type:
      - string
      description: 表示要删除的规则的名称的字符串对象。
    - id: callback
      type:
      - function
      description: '`error` 如果出现错误; 将包含的信息否则为`response`将包含与此操作相关的信息。'
    return:
      type:
      - undefined
      description: ''
    content: function deleteRule(topicPath, subscriptionPath, rulePath, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#getRule
  id: azure-sb.ServiceBusService#getRule
  parent: azure-sb.ServiceBusService
  name: getRule(topicPath, subscriptionPath, rulePath, callback)
  summary: 检索规则。
  fullName: azure-sb.ServiceBusService.getRule(topicPath, subscriptionPath, rulePath, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: 表示订阅的主题的名称的字符串对象。
    - id: subscriptionPath
      type:
      - string
      description: 表示为其检索规则的订阅的名称的字符串对象。
    - id: rulePath
      type:
      - string
      description: 表示要检索的规则的名称的字符串对象。
    - id: callback
      type:
      - function
      description: >-
        `error` 如果出现错误; 将包含的信息否则为`getruleresult`将包含的规则信息。
                                                                                        `response` 将包含与此操作相关的信息。
    return:
      type:
      - undefined
      description: ''
    content: function getRule(topicPath, subscriptionPath, rulePath, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#listRules
  id: azure-sb.ServiceBusService#listRules
  parent: azure-sb.ServiceBusService
  name: listRules(topicPath, subscriptionPath, options, callback)
  summary: 返回规则的列表。
  fullName: azure-sb.ServiceBusService.listRules(topicPath, subscriptionPath, options, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: 表示订阅的主题的名称的字符串对象。
    - id: subscriptionPath
      type:
      - string
      description: 表示正在检索其规则的订阅的名称的字符串对象。
    - id: options
      type:
      - object
      description: 在请求选项。
      optional: true
    - id: options.top
      type:
      - azure-sb.int
      description: 要提取的主题的数量。
      optional: true
    - id: options.skip
      type:
      - azure-sb.int
      description: 要跳过的主题的数量。
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` 如果出现错误; 将包含的信息否则为`listrulesresult`将包含规则的列表。
                                                                              `response` 将包含与此操作相关的信息。
    return:
      type:
      - undefined
      description: ''
    content: function listRules(topicPath, subscriptionPath, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#createNotificationHub
  id: azure-sb.ServiceBusService#createNotificationHub
  parent: azure-sb.ServiceBusService
  name: createNotificationHub(hubPath, options, callback)
  summary: 创建通知中心。
  fullName: azure-sb.ServiceBusService.createNotificationHub(hubPath, options, callback)
  type: Function
  syntax:
    parameters:
    - id: hubPath
      type:
      - string
      description: 表示通知中心的名称的字符串对象。
    - id: options
      type:
      - object
      description: 请求选项或回调函数。
      optional: true
    - id: options.wns
      type:
      - object
      description: 具有 WNS 凭据键/值对的对象。
      optional: true
    - id: options.apns
      type:
      - object
      description: 具有 APNS 凭据键/值对的对象。
      optional: true
    - id: options.gcm
      type:
      - object
      description: 具有 GCM 凭据键/值对的对象。
      optional: true
    - id: options.mpns
      type:
      - object
      description: 具有 MPNS 凭据键/值对的对象。
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` 如果出现错误; 将包含的信息否则为`result`将包含新的通知中心信息。
                                                              `response` 将包含与此操作相关的信息。
    return:
      type:
      - undefined
      description: ''
    content: function createNotificationHub(hubPath, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#getNotificationHub
  id: azure-sb.ServiceBusService#getNotificationHub
  parent: azure-sb.ServiceBusService
  name: getNotificationHub(hubPath, callback)
  summary: 获取通知中心。
  fullName: azure-sb.ServiceBusService.getNotificationHub(hubPath, callback)
  type: Function
  syntax:
    parameters:
    - id: hubPath
      type:
      - string
      description: 表示通知中心的名称的字符串对象。
    - id: callback
      type:
      - function
      description: >-
        `error` 如果出现错误; 将包含的信息否则为`result`将包含通知中心信息。
                                                                                    `response` 将包含与此操作相关的信息。
    return:
      type:
      - undefined
      description: ''
    content: function getNotificationHub(hubPath, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#listNotificationHubs
  id: azure-sb.ServiceBusService#listNotificationHubs
  parent: azure-sb.ServiceBusService
  name: listNotificationHubs(options, callback)
  summary: 返回通知中心的列表。
  fullName: azure-sb.ServiceBusService.listNotificationHubs(options, callback)
  type: Function
  syntax:
    parameters:
    - id: options
      type:
      - object
      description: 请求选项或回调函数。
      optional: true
    - id: options.top
      type:
      - azure-sb.int
      description: 要提取的主题的数量。
      optional: true
    - id: options.skip
      type:
      - azure-sb.int
      description: 要跳过的主题的数量。
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` 如果出现错误; 将包含的信息否则为`result`将包含通知中心的列表。
                                                              `response` 将包含与此操作相关的信息。
    return:
      type:
      - undefined
      description: ''
    content: function listNotificationHubs(options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#deleteNotificationHub
  id: azure-sb.ServiceBusService#deleteNotificationHub
  parent: azure-sb.ServiceBusService
  name: deleteNotificationHub(hubPath, callback)
  summary: 删除通知中心。
  fullName: azure-sb.ServiceBusService.deleteNotificationHub(hubPath, callback)
  type: Function
  syntax:
    parameters:
    - id: hubPath
      type:
      - string
      description: 表示通知中心的名称的字符串对象。
    - id: callback
      type:
      - function
      description: '`error` 如果出现错误; 将包含的信息否则为`response`将包含与此操作相关的信息。'
    return:
      type:
      - undefined
      description: ''
    content: function deleteNotificationHub(hubPath, callback)
  langs:
  - js
