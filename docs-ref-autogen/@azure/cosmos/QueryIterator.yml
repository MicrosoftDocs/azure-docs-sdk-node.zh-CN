### YamlMime:UniversalReference
ms.openlocfilehash: 191cfc4fa4e9d81715994e7d0270373adb0a73b0
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 08/22/2018
ms.locfileid: "41701695"
items:
- uid: '@azure/cosmos.QueryIterator'
  name: QueryIterator
  fullName: QueryIterator<T>
  children:
  - '@azure/cosmos.QueryIterator.current'
  - '@azure/cosmos.QueryIterator.executeNext'
  - '@azure/cosmos.QueryIterator.forEach'
  - '@azure/cosmos.QueryIterator.getAsyncIterator'
  - '@azure/cosmos.QueryIterator.hasMoreResults'
  - '@azure/cosmos.QueryIterator.nextItem'
  - '@azure/cosmos.QueryIterator.reset'
  - '@azure/cosmos.QueryIterator.toArray'
  langs:
  - typeScript
  type: class
  summary: <span data-ttu-id="28ec4-101">表示 QueryIterator 对象 implmenetation 源或查询的响应，遍历和循环访问在 Azure Cosmos DB 数据库服务的响应。</span><span class="sxs-lookup"><span data-stu-id="28ec4-101">Represents a QueryIterator Object, an implmenetation of feed or query response that enables traversal and iterating over the response in the Azure Cosmos DB database service.</span></span>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.QueryIterator.current'
  name: current
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28ec4-102">检索在 QueryIterator 上的当前元素。</span><span class="sxs-lookup"><span data-stu-id="28ec4-102">Retrieve the current element on the QueryIterator.</span></span>
  syntax:
    content: function current()
    parameters: []
    return:
      type:
      - Promise<@azure/cosmos.Response<T>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.QueryIterator.executeNext'
  name: executeNext
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28ec4-103">检索下一批的源，并将它们作为数组传递给函数</span><span class="sxs-lookup"><span data-stu-id="28ec4-103">Retrieve the next batch of the feed and pass them as an array to a function</span></span>
  syntax:
    content: function executeNext()
    parameters: []
    return:
      type:
      - Promise<@azure/cosmos.Response<T>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.QueryIterator.forEach'
  name: forEach
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28ec4-104">为从查询返回每个项调用指定的回调。</span><span class="sxs-lookup"><span data-stu-id="28ec4-104">Calls a specified callback for each item returned from the query.</span></span>

    <span data-ttu-id="28ec4-105">按顺序; 运行每个回调阻止下一步。</span><span class="sxs-lookup"><span data-stu-id="28ec4-105">Runs serially; each callback blocks the next.</span></span>
  syntax:
    content: 'function forEach(callback: (result: T, headers?: IHeaders, index?: number) => boolean | void)'
    parameters:
    - id: callback
      type:
      - '(result: T, headers?: IHeaders, index?: number) => boolean | void'
      description: >
        <span data-ttu-id="28ec4-106">指定的回调。</span><span class="sxs-lookup"><span data-stu-id="28ec4-106">Specified callback.</span></span>

        <span data-ttu-id="28ec4-107">第一个参数是结果，第二个参数 （可选） 是当前标头对象状态，第三个参数 （可选） 是当前索引。</span><span class="sxs-lookup"><span data-stu-id="28ec4-107">First param is the result, second param (optional) is the current headers object state, third param (optional) is current index.</span></span>

        <span data-ttu-id="28ec4-108">如果其中一个结果 false，则将调用不再使用回调。</span><span class="sxs-lookup"><span data-stu-id="28ec4-108">No more callbacks will be called if one of them results false.</span></span>
    return:
      type:
      - Promise<void>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.QueryIterator.getAsyncIterator'
  name: getAsyncIterator
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="28ec4-109">获取异步迭代器，将产生的结果，直至完成为止。</span><span class="sxs-lookup"><span data-stu-id="28ec4-109">Gets an async iterator that will yield results until completion.</span></span>

    <span data-ttu-id="28ec4-110">注意： AsyncIterators 是非常新功能，可能需要以在代码中使用它们将使用 polyfils/等。</span><span class="sxs-lookup"><span data-stu-id="28ec4-110">NOTE: AsyncIterators are a very new feature and you might need to use polyfils/etc. in order to use them in your code.</span></span>


    <span data-ttu-id="28ec4-111">如果您使用的 TypeScript，还可以使用以下提供填充代码，作为目标 ES6 长或更高版本，并且节点 6 或更高版本运行。</span><span class="sxs-lookup"><span data-stu-id="28ec4-111">If you're using TypeScript, you can use the following polyfill as long as you target ES6 or higher and are running on Node 6 or higher.</span></span>


    ```typescript

    if (!Symbol || !Symbol.asyncIterator) {
      (Symbol as any).asyncIterator = Symbol.for("Symbol.asyncIterator");
    }

    ```
  syntax:
    content: function getAsyncIterator()
    parameters: []
    return:
      type:
      - AsyncIterable<@azure/cosmos.Response<T>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.QueryIterator.hasMoreResults'
  name: hasMoreResults
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: function hasMoreResults()
    parameters: []
    return:
      type:
      - boolean
  package: '@azure/cosmos'
  deprecated:
    content: >-
      Instead check if nextItem() or current() returns undefined.


      Determine if there are still remaining resources to processs based on the value of the continuation token or the\

      elements remaining on the current batch in the QueryIterator.
- uid: '@azure/cosmos.QueryIterator.nextItem'
  name: nextItem
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28ec4-112">QueryIterator 中的下一个元素上执行提供的函数。</span><span class="sxs-lookup"><span data-stu-id="28ec4-112">Execute a provided function on the next element in the QueryIterator.</span></span>
  syntax:
    content: function nextItem()
    parameters: []
    return:
      type:
      - Promise<@azure/cosmos.Response<T>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.QueryIterator.reset'
  name: reset
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28ec4-113">重置到开头的 QueryIterator 并清除其内部的所有资源</span><span class="sxs-lookup"><span data-stu-id="28ec4-113">Reset the QueryIterator to the beginning and clear all the resources inside it</span></span>
  syntax:
    content: function reset()
    parameters: []
  package: '@azure/cosmos'
- uid: '@azure/cosmos.QueryIterator.toArray'
  name: toArray
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28ec4-114">检索的源的所有元素，并将它们作为数组传递给函数</span><span class="sxs-lookup"><span data-stu-id="28ec4-114">Retrieve all the elements of the feed and pass them as an array to a function</span></span>
  syntax:
    content: function toArray()
    parameters: []
    return:
      type:
      - Promise<@azure/cosmos.Response<T[]>>
  package: '@azure/cosmos'
references:
- uid: Promise<@azure/cosmos.Response<T>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Response
    fullName: Response
    uid: '@azure/cosmos.Response'
  - name: <T>>
    fullName: <T>>
- uid: AsyncIterable<@azure/cosmos.Response<T>>
  spec.typeScript:
  - name: AsyncIterable<
    fullName: AsyncIterable<
  - name: Response
    fullName: Response
    uid: '@azure/cosmos.Response'
  - name: <T>>
    fullName: <T>>
- uid: Promise<@azure/cosmos.Response<T[]>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Response
    fullName: Response
    uid: '@azure/cosmos.Response'
  - name: <T[]>>
    fullName: <T[]>>
