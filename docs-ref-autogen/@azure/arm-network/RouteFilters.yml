### YamlMime:UniversalReference
ms.openlocfilehash: d5a329bbb4e2772cfe2d68174d2560e857a4f3a8
ms.sourcegitcommit: ce76ec3eda83746ef9a765165173b5c00b5b7df6
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 12/20/2018
ms.locfileid: "53693413"
items:
- uid: '@azure/arm-network.RouteFilters'
  name: RouteFilters
  fullName: RouteFilters
  children:
  - '@azure/arm-network.RouteFilters.beginCreateOrUpdate'
  - '@azure/arm-network.RouteFilters.beginDeleteMethod'
  - '@azure/arm-network.RouteFilters.beginUpdate'
  - '@azure/arm-network.RouteFilters.createOrUpdate'
  - '@azure/arm-network.RouteFilters.deleteMethod'
  - '@azure/arm-network.RouteFilters.get'
  - '@azure/arm-network.RouteFilters.get_2'
  - '@azure/arm-network.RouteFilters.get_1'
  - '@azure/arm-network.RouteFilters.list'
  - '@azure/arm-network.RouteFilters.list_2'
  - '@azure/arm-network.RouteFilters.list_1'
  - '@azure/arm-network.RouteFilters.listByResourceGroup'
  - '@azure/arm-network.RouteFilters.listByResourceGroup_2'
  - '@azure/arm-network.RouteFilters.listByResourceGroup_1'
  - '@azure/arm-network.RouteFilters.listByResourceGroupNext'
  - '@azure/arm-network.RouteFilters.listByResourceGroupNext_2'
  - '@azure/arm-network.RouteFilters.listByResourceGroupNext_1'
  - '@azure/arm-network.RouteFilters.listNext'
  - '@azure/arm-network.RouteFilters.listNext_2'
  - '@azure/arm-network.RouteFilters.listNext_1'
  - '@azure/arm-network.RouteFilters.constructor'
  - '@azure/arm-network.RouteFilters.update'
  langs:
  - typeScript
  type: class
  summary: 表示 RouteFilters 类。
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.beginCreateOrUpdate'
  name: beginCreateOrUpdate(string, string, RouteFilter, msRest.RequestOptionsBase)
  children: []
  type: method
  langs:
  - typeScript
  summary: 创建或更新路由筛选器指定的资源组中。
  syntax:
    content: 'function beginCreateOrUpdate(resourceGroupName: string, routeFilterName: string, routeFilterParameters: RouteFilter, options?: msRest.RequestOptionsBase)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: 资源组的名称。
    - id: routeFilterName
      type:
      - string
      description: 路由筛选器的名称。
    - id: routeFilterParameters
      type:
      - '@azure/arm-network.RouteFilter'
      description: 提供给创建或更新路由筛选器操作的参数。
    - id: options
      type:
      - msRest.RequestOptionsBase
      description: ''
      optional: true
    return:
      type:
      - Promise<LROPoller>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.beginDeleteMethod'
  name: beginDeleteMethod(string, string, msRest.RequestOptionsBase)
  children: []
  type: method
  langs:
  - typeScript
  summary: 删除指定的路由筛选器。
  syntax:
    content: 'function beginDeleteMethod(resourceGroupName: string, routeFilterName: string, options?: msRest.RequestOptionsBase)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: 资源组的名称。
    - id: routeFilterName
      type:
      - string
      description: 路由筛选器的名称。
    - id: options
      type:
      - msRest.RequestOptionsBase
      description: ''
      optional: true
    return:
      type:
      - Promise<LROPoller>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.beginUpdate'
  name: beginUpdate(string, string, PatchRouteFilter, msRest.RequestOptionsBase)
  children: []
  type: method
  langs:
  - typeScript
  summary: 更新指定的资源组中的路由筛选器。
  syntax:
    content: 'function beginUpdate(resourceGroupName: string, routeFilterName: string, routeFilterParameters: PatchRouteFilter, options?: msRest.RequestOptionsBase)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: 资源组的名称。
    - id: routeFilterName
      type:
      - string
      description: 路由筛选器的名称。
    - id: routeFilterParameters
      type:
      - '@azure/arm-network.PatchRouteFilter'
      description: 提供给更新路由筛选器操作的参数。
    - id: options
      type:
      - msRest.RequestOptionsBase
      description: ''
      optional: true
    return:
      type:
      - Promise<LROPoller>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.createOrUpdate'
  name: createOrUpdate(string, string, RouteFilter, msRest.RequestOptionsBase)
  children: []
  type: method
  langs:
  - typeScript
  summary: 创建或更新路由筛选器指定的资源组中。
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, routeFilterName: string, routeFilterParameters: RouteFilter, options?: msRest.RequestOptionsBase)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: 资源组的名称。
    - id: routeFilterName
      type:
      - string
      description: 路由筛选器的名称。
    - id: routeFilterParameters
      type:
      - '@azure/arm-network.RouteFilter'
      description: 提供给创建或更新路由筛选器操作的参数。
    - id: options
      type:
      - msRest.RequestOptionsBase
      description: ''
      optional: true
    return:
      type:
      - Promise<Models.RouteFiltersCreateOrUpdateResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.deleteMethod'
  name: deleteMethod(string, string, msRest.RequestOptionsBase)
  children: []
  type: method
  langs:
  - typeScript
  summary: 删除指定的路由筛选器。
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, routeFilterName: string, options?: msRest.RequestOptionsBase)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: 资源组的名称。
    - id: routeFilterName
      type:
      - string
      description: 路由筛选器的名称。
    - id: options
      type:
      - msRest.RequestOptionsBase
      description: ''
      optional: true
    return:
      type:
      - Promise<RestResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.get'
  name: get(string, string, Models.RouteFiltersGetOptionalParams)
  children: []
  type: method
  langs:
  - typeScript
  summary: 获取指定的路由筛选器。
  syntax:
    content: 'function get(resourceGroupName: string, routeFilterName: string, options?: Models.RouteFiltersGetOptionalParams)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: 资源组的名称。
    - id: routeFilterName
      type:
      - string
      description: 路由筛选器的名称。
    - id: options
      type:
      - Models.RouteFiltersGetOptionalParams
      description: ''
      optional: true
    return:
      type:
      - Promise<Models.RouteFiltersGetResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.get_2'
  name: get(string, string, RouteFiltersGetOptionalParams, ServiceCallback<RouteFilter>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function get(resourceGroupName: string, routeFilterName: string, options: RouteFiltersGetOptionalParams, callback: ServiceCallback<RouteFilter>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: 资源组的名称。
    - id: routeFilterName
      type:
      - string
      description: 路由筛选器的名称。
    - id: options
      type:
      - '@azure/arm-network.RouteFiltersGetOptionalParams'
      description: 可选参数
    - id: callback
      type:
      - ServiceCallback<@azure/arm-network.RouteFilter>
      description: >
        回调
    return:
      type:
      - Promise<Models.RouteFiltersGetResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.get_1'
  name: get(string, string, ServiceCallback<RouteFilter>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function get(resourceGroupName: string, routeFilterName: string, callback: ServiceCallback<RouteFilter>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: 资源组的名称。
    - id: routeFilterName
      type:
      - string
      description: 路由筛选器的名称。
    - id: callback
      type:
      - ServiceCallback<@azure/arm-network.RouteFilter>
      description: >
        回调
    return:
      type:
      - Promise<Models.RouteFiltersGetResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.list'
  name: list(msRest.RequestOptionsBase)
  children: []
  type: method
  langs:
  - typeScript
  summary: 获取订阅中的所有路由筛选器。
  syntax:
    content: 'function list(options?: msRest.RequestOptionsBase)'
    parameters:
    - id: options
      type:
      - msRest.RequestOptionsBase
      description: ''
      optional: true
    return:
      type:
      - Promise<Models.RouteFiltersListResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.list_2'
  name: list(RequestOptionsBase, ServiceCallback<RouteFilterListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function list(options: RequestOptionsBase, callback: ServiceCallback<RouteFilterListResult>)'
    parameters:
    - id: options
      type:
      - RequestOptionsBase
      description: 可选参数
    - id: callback
      type:
      - ServiceCallback<@azure/arm-network.RouteFilterListResult>
      description: >
        回调
    return:
      type:
      - Promise<Models.RouteFiltersListResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.list_1'
  name: list(ServiceCallback<RouteFilterListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function list(callback: ServiceCallback<RouteFilterListResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<@azure/arm-network.RouteFilterListResult>
      description: >
        回调
    return:
      type:
      - Promise<Models.RouteFiltersListResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.listByResourceGroup'
  name: listByResourceGroup(string, msRest.RequestOptionsBase)
  children: []
  type: method
  langs:
  - typeScript
  summary: 获取资源组中的所有路由筛选器。
  syntax:
    content: 'function listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: 资源组的名称。
    - id: options
      type:
      - msRest.RequestOptionsBase
      description: ''
      optional: true
    return:
      type:
      - Promise<Models.RouteFiltersListByResourceGroupResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.listByResourceGroup_2'
  name: listByResourceGroup(string, RequestOptionsBase, ServiceCallback<RouteFilterListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listByResourceGroup(resourceGroupName: string, options: RequestOptionsBase, callback: ServiceCallback<RouteFilterListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: 资源组的名称。
    - id: options
      type:
      - RequestOptionsBase
      description: 可选参数
    - id: callback
      type:
      - ServiceCallback<@azure/arm-network.RouteFilterListResult>
      description: >
        回调
    return:
      type:
      - Promise<Models.RouteFiltersListByResourceGroupResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.listByResourceGroup_1'
  name: listByResourceGroup(string, ServiceCallback<RouteFilterListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<RouteFilterListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: 资源组的名称。
    - id: callback
      type:
      - ServiceCallback<@azure/arm-network.RouteFilterListResult>
      description: >
        回调
    return:
      type:
      - Promise<Models.RouteFiltersListByResourceGroupResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.listByResourceGroupNext'
  name: listByResourceGroupNext(string, msRest.RequestOptionsBase)
  children: []
  type: method
  langs:
  - typeScript
  summary: 获取资源组中的所有路由筛选器。
  syntax:
    content: 'function listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: 从上一个成功调用 List 操作 NextLink。
    - id: options
      type:
      - msRest.RequestOptionsBase
      description: ''
      optional: true
    return:
      type:
      - Promise<Models.RouteFiltersListByResourceGroupNextResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.listByResourceGroupNext_2'
  name: listByResourceGroupNext(string, RequestOptionsBase, ServiceCallback<RouteFilterListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listByResourceGroupNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<RouteFilterListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: 从上一个成功调用 List 操作 NextLink。
    - id: options
      type:
      - RequestOptionsBase
      description: 可选参数
    - id: callback
      type:
      - ServiceCallback<@azure/arm-network.RouteFilterListResult>
      description: >
        回调
    return:
      type:
      - Promise<Models.RouteFiltersListByResourceGroupNextResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.listByResourceGroupNext_1'
  name: listByResourceGroupNext(string, ServiceCallback<RouteFilterListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<RouteFilterListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: 从上一个成功调用 List 操作 NextLink。
    - id: callback
      type:
      - ServiceCallback<@azure/arm-network.RouteFilterListResult>
      description: >
        回调
    return:
      type:
      - Promise<Models.RouteFiltersListByResourceGroupNextResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.listNext'
  name: listNext(string, msRest.RequestOptionsBase)
  children: []
  type: method
  langs:
  - typeScript
  summary: 获取订阅中的所有路由筛选器。
  syntax:
    content: 'function listNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: 从上一个成功调用 List 操作 NextLink。
    - id: options
      type:
      - msRest.RequestOptionsBase
      description: ''
      optional: true
    return:
      type:
      - Promise<Models.RouteFiltersListNextResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.listNext_2'
  name: listNext(string, RequestOptionsBase, ServiceCallback<RouteFilterListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<RouteFilterListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: 从上一个成功调用 List 操作 NextLink。
    - id: options
      type:
      - RequestOptionsBase
      description: 可选参数
    - id: callback
      type:
      - ServiceCallback<@azure/arm-network.RouteFilterListResult>
      description: >
        回调
    return:
      type:
      - Promise<Models.RouteFiltersListNextResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.listNext_1'
  name: listNext(string, ServiceCallback<RouteFilterListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listNext(nextPageLink: string, callback: ServiceCallback<RouteFilterListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: 从上一个成功调用 List 操作 NextLink。
    - id: callback
      type:
      - ServiceCallback<@azure/arm-network.RouteFilterListResult>
      description: >
        回调
    return:
      type:
      - Promise<Models.RouteFiltersListNextResponse>
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.constructor'
  name: RouteFilters(NetworkManagementClientContext)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: 创建 RouteFilters。
  syntax:
    content: 'new RouteFilters(client: NetworkManagementClientContext)'
    parameters:
    - id: client
      type:
      - '@azure/arm-network.NetworkManagementClientContext'
      description: >
        对服务客户端的引用。
  package: '@azure/arm-network'
- uid: '@azure/arm-network.RouteFilters.update'
  name: update(string, string, PatchRouteFilter, msRest.RequestOptionsBase)
  children: []
  type: method
  langs:
  - typeScript
  summary: 更新指定的资源组中的路由筛选器。
  syntax:
    content: 'function update(resourceGroupName: string, routeFilterName: string, routeFilterParameters: PatchRouteFilter, options?: msRest.RequestOptionsBase)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: 资源组的名称。
    - id: routeFilterName
      type:
      - string
      description: 路由筛选器的名称。
    - id: routeFilterParameters
      type:
      - '@azure/arm-network.PatchRouteFilter'
      description: 提供给更新路由筛选器操作的参数。
    - id: options
      type:
      - msRest.RequestOptionsBase
      description: ''
      optional: true
    return:
      type:
      - Promise<Models.RouteFiltersUpdateResponse>
  package: '@azure/arm-network'
references:
- uid: '@azure/arm-network.NetworkManagementClientContext'
  name: NetworkManagementClientContext
  spec.typeScript:
  - name: NetworkManagementClientContext
    fullName: NetworkManagementClientContext
    uid: '@azure/arm-network.NetworkManagementClientContext'
- uid: '@azure/arm-network.RouteFilter'
  name: RouteFilter
  spec.typeScript:
  - name: RouteFilter
    fullName: RouteFilter
    uid: '@azure/arm-network.RouteFilter'
- uid: '@azure/arm-network.PatchRouteFilter'
  name: PatchRouteFilter
  spec.typeScript:
  - name: PatchRouteFilter
    fullName: PatchRouteFilter
    uid: '@azure/arm-network.PatchRouteFilter'
- uid: ServiceCallback<@azure/arm-network.RouteFilter>
  name: RouteFilter>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: RouteFilter
    fullName: RouteFilter
    uid: '@azure/arm-network.RouteFilter'
  - name: '>'
    fullName: '>'
- uid: '@azure/arm-network.RouteFiltersGetOptionalParams'
  name: RouteFiltersGetOptionalParams
  spec.typeScript:
  - name: RouteFiltersGetOptionalParams
    fullName: RouteFiltersGetOptionalParams
    uid: '@azure/arm-network.RouteFiltersGetOptionalParams'
- uid: ServiceCallback<@azure/arm-network.RouteFilterListResult>
  name: RouteFilterListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: RouteFilterListResult
    fullName: RouteFilterListResult
    uid: '@azure/arm-network.RouteFilterListResult'
  - name: '>'
    fullName: '>'
