### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.Cache'
    name: Cache
    fullName: Cache
    children:
      - '@azure/arm-apimanagement.Cache.constructor'
      - '@azure/arm-apimanagement.Cache.createOrUpdate_2'
      - '@azure/arm-apimanagement.Cache.createOrUpdate'
      - '@azure/arm-apimanagement.Cache.createOrUpdate_1'
      - '@azure/arm-apimanagement.Cache.deleteMethod'
      - '@azure/arm-apimanagement.Cache.deleteMethod_2'
      - '@azure/arm-apimanagement.Cache.deleteMethod_1'
      - '@azure/arm-apimanagement.Cache.get'
      - '@azure/arm-apimanagement.Cache.get_2'
      - '@azure/arm-apimanagement.Cache.get_1'
      - '@azure/arm-apimanagement.Cache.getEntityTag'
      - '@azure/arm-apimanagement.Cache.getEntityTag_2'
      - '@azure/arm-apimanagement.Cache.getEntityTag_1'
      - '@azure/arm-apimanagement.Cache.listByService_2'
      - '@azure/arm-apimanagement.Cache.listByService'
      - '@azure/arm-apimanagement.Cache.listByService_1'
      - '@azure/arm-apimanagement.Cache.listByServiceNext'
      - '@azure/arm-apimanagement.Cache.listByServiceNext_2'
      - '@azure/arm-apimanagement.Cache.listByServiceNext_1'
      - '@azure/arm-apimanagement.Cache.update'
      - '@azure/arm-apimanagement.Cache.update_2'
      - '@azure/arm-apimanagement.Cache.update_1'
    langs:
      - typeScript
    type: class
    summary: 表示缓存的类。
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.constructor'
    name: Cache(ApiManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: 创建缓存。
    syntax:
      content: 'new Cache(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-apimanagement.ApiManagementClientContext'
          description: |
            对服务客户端的引用。
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.createOrUpdate_2'
    name: 'createOrUpdate(string, string, string, CacheContract, CacheCreateOrUpdateOptionalParams, ServiceCallback<CacheContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, cacheId: string, parameters: CacheContract, options: CacheCreateOrUpdateOptionalParams, callback: ServiceCallback<CacheContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: cacheId
          type:
            - string
          description: 缓存实体的标识符。 缓存 （应为 default 或有效的 Azure 区域标识符） 的标识符。
        - id: parameters
          type:
            - '@azure/arm-apimanagement.CacheContract'
          description: 创建或更新参数。
        - id: options
          type:
            - '@azure/arm-apimanagement.CacheCreateOrUpdateOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.CacheContract>
          description: |
            回调
      return:
        type:
          - Promise<Models.CacheCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.createOrUpdate'
    name: 'createOrUpdate(string, string, string, CacheContract, Models.CacheCreateOrUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 创建或更新要在 API 管理实例中使用的外部缓存。
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, cacheId: string, parameters: CacheContract, options?: Models.CacheCreateOrUpdateOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: cacheId
          type:
            - string
          description: 缓存实体的标识符。 缓存 （应为 default 或有效的 Azure 区域标识符） 的标识符。
        - id: parameters
          type:
            - '@azure/arm-apimanagement.CacheContract'
          description: 创建或更新参数。
        - id: options
          type:
            - Models.CacheCreateOrUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CacheCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.createOrUpdate_1'
    name: 'createOrUpdate(string, string, string, CacheContract, ServiceCallback<CacheContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, cacheId: string, parameters: CacheContract, callback: ServiceCallback<CacheContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: cacheId
          type:
            - string
          description: 缓存实体的标识符。 缓存 （应为 default 或有效的 Azure 区域标识符） 的标识符。
        - id: parameters
          type:
            - '@azure/arm-apimanagement.CacheContract'
          description: 创建或更新参数。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.CacheContract>
          description: |
            回调
      return:
        type:
          - Promise<Models.CacheCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.deleteMethod'
    name: 'deleteMethod(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 删除特定的缓存。
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, cacheId: string, ifMatch: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: cacheId
          type:
            - string
          description: 缓存实体的标识符。 缓存 （应为 default 或有效的 Azure 区域标识符） 的标识符。
        - id: ifMatch
          type:
            - string
          description: 实体的 ETag。 ETag 应与 GET 请求标头响应中的当前实体状态匹配，或者它是 * 无条件更新。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.deleteMethod_2'
    name: 'deleteMethod(string, string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, cacheId: string, ifMatch: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: cacheId
          type:
            - string
          description: 缓存实体的标识符。 缓存 （应为 default 或有效的 Azure 区域标识符） 的标识符。
        - id: ifMatch
          type:
            - string
          description: 实体的 ETag。 ETag 应与 GET 请求标头响应中的当前实体状态匹配，或者它是 * 无条件更新。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.deleteMethod_1'
    name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, cacheId: string, ifMatch: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: cacheId
          type:
            - string
          description: 缓存实体的标识符。 缓存 （应为 default 或有效的 Azure 区域标识符） 的标识符。
        - id: ifMatch
          type:
            - string
          description: 实体的 ETag。 ETag 应与 GET 请求标头响应中的当前实体状态匹配，或者它是 * 无条件更新。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 获取按标识符指定缓存的详细信息。
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, cacheId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: cacheId
          type:
            - string
          description: 缓存实体的标识符。 缓存 （应为 default 或有效的 Azure 区域标识符） 的标识符。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CacheGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.get_2'
    name: 'get(string, string, string, RequestOptionsBase, ServiceCallback<CacheContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, cacheId: string, options: RequestOptionsBase, callback: ServiceCallback<CacheContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: cacheId
          type:
            - string
          description: 缓存实体的标识符。 缓存 （应为 default 或有效的 Azure 区域标识符） 的标识符。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.CacheContract>
          description: |
            回调
      return:
        type:
          - Promise<Models.CacheGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.get_1'
    name: 'get(string, string, string, ServiceCallback<CacheContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, cacheId: string, callback: ServiceCallback<CacheContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: cacheId
          type:
            - string
          description: 缓存实体的标识符。 缓存 （应为 default 或有效的 Azure 区域标识符） 的标识符。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.CacheContract>
          description: |
            回调
      return:
        type:
          - Promise<Models.CacheGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.getEntityTag'
    name: 'getEntityTag(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 获取缓存按标识符指定的实体状态 (Etag) 版本。
    syntax:
      content: 'function getEntityTag(resourceGroupName: string, serviceName: string, cacheId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: cacheId
          type:
            - string
          description: 缓存实体的标识符。 缓存 （应为 default 或有效的 Azure 区域标识符） 的标识符。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CacheGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.getEntityTag_2'
    name: 'getEntityTag(string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getEntityTag(resourceGroupName: string, serviceName: string, cacheId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: cacheId
          type:
            - string
          description: 缓存实体的标识符。 缓存 （应为 default 或有效的 Azure 区域标识符） 的标识符。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<Models.CacheGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.getEntityTag_1'
    name: 'getEntityTag(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getEntityTag(resourceGroupName: string, serviceName: string, cacheId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: cacheId
          type:
            - string
          description: 缓存实体的标识符。 缓存 （应为 default 或有效的 Azure 区域标识符） 的标识符。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<Models.CacheGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.listByService_2'
    name: 'listByService(string, string, CacheListByServiceOptionalParams, ServiceCallback<CacheCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, options: CacheListByServiceOptionalParams, callback: ServiceCallback<CacheCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: options
          type:
            - '@azure/arm-apimanagement.CacheListByServiceOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.CacheCollection>
          description: |
            回调
      return:
        type:
          - Promise<Models.CacheListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.listByService'
    name: 'listByService(string, string, Models.CacheListByServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 列出指定服务实例中所有外部缓存的集合。
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, options?: Models.CacheListByServiceOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: options
          type:
            - Models.CacheListByServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CacheListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.listByService_1'
    name: 'listByService(string, string, ServiceCallback<CacheCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, callback: ServiceCallback<CacheCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.CacheCollection>
          description: |
            回调
      return:
        type:
          - Promise<Models.CacheListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.listByServiceNext'
    name: 'listByServiceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 列出指定服务实例中所有外部缓存的集合。
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 从上一个成功调用 List 操作 NextLink。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.CacheListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.listByServiceNext_2'
    name: 'listByServiceNext(string, RequestOptionsBase, ServiceCallback<CacheCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<CacheCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 从上一个成功调用 List 操作 NextLink。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.CacheCollection>
          description: |
            回调
      return:
        type:
          - Promise<Models.CacheListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.listByServiceNext_1'
    name: 'listByServiceNext(string, ServiceCallback<CacheCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, callback: ServiceCallback<CacheCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 从上一个成功调用 List 操作 NextLink。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.CacheCollection>
          description: |
            回调
      return:
        type:
          - Promise<Models.CacheListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.update'
    name: 'update(string, string, string, CacheUpdateParameters, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 将更新按标识符指定缓存的详细信息。
    syntax:
      content: 'function update(resourceGroupName: string, serviceName: string, cacheId: string, parameters: CacheUpdateParameters, ifMatch: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: cacheId
          type:
            - string
          description: 缓存实体的标识符。 缓存 （应为 default 或有效的 Azure 区域标识符） 的标识符。
        - id: parameters
          type:
            - '@azure/arm-apimanagement.CacheUpdateParameters'
          description: 更新参数。
        - id: ifMatch
          type:
            - string
          description: 实体的 ETag。 ETag 应与 GET 请求标头响应中的当前实体状态匹配，或者它是 * 无条件更新。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.update_2'
    name: 'update(string, string, string, CacheUpdateParameters, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, serviceName: string, cacheId: string, parameters: CacheUpdateParameters, ifMatch: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: cacheId
          type:
            - string
          description: 缓存实体的标识符。 缓存 （应为 default 或有效的 Azure 区域标识符） 的标识符。
        - id: parameters
          type:
            - '@azure/arm-apimanagement.CacheUpdateParameters'
          description: 更新参数。
        - id: ifMatch
          type:
            - string
          description: 实体的 ETag。 ETag 应与 GET 请求标头响应中的当前实体状态匹配，或者它是 * 无条件更新。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Cache.update_1'
    name: 'update(string, string, string, CacheUpdateParameters, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, serviceName: string, cacheId: string, parameters: CacheUpdateParameters, ifMatch: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: cacheId
          type:
            - string
          description: 缓存实体的标识符。 缓存 （应为 default 或有效的 Azure 区域标识符） 的标识符。
        - id: parameters
          type:
            - '@azure/arm-apimanagement.CacheUpdateParameters'
          description: 更新参数。
        - id: ifMatch
          type:
            - string
          description: 实体的 ETag。 ETag 应与 GET 请求标头响应中的当前实体状态匹配，或者它是 * 无条件更新。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.ApiManagementClientContext'
    name: ApiManagementClientContext
    spec.typeScript:
      - name: ApiManagementClientContext
        fullName: ApiManagementClientContext
        uid: '@azure/arm-apimanagement.ApiManagementClientContext'
  - uid: '@azure/arm-apimanagement.CacheContract'
    name: CacheContract
    spec.typeScript:
      - name: CacheContract
        fullName: CacheContract
        uid: '@azure/arm-apimanagement.CacheContract'
  - uid: ServiceCallback<@azure/arm-apimanagement.CacheContract>
    name: CacheContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CacheContract
        fullName: CacheContract
        uid: '@azure/arm-apimanagement.CacheContract'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.CacheCreateOrUpdateOptionalParams'
    name: CacheCreateOrUpdateOptionalParams
    spec.typeScript:
      - name: CacheCreateOrUpdateOptionalParams
        fullName: CacheCreateOrUpdateOptionalParams
        uid: '@azure/arm-apimanagement.CacheCreateOrUpdateOptionalParams'
  - uid: ServiceCallback<@azure/arm-apimanagement.CacheCollection>
    name: CacheCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CacheCollection
        fullName: CacheCollection
        uid: '@azure/arm-apimanagement.CacheCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.CacheListByServiceOptionalParams'
    name: CacheListByServiceOptionalParams
    spec.typeScript:
      - name: CacheListByServiceOptionalParams
        fullName: CacheListByServiceOptionalParams
        uid: '@azure/arm-apimanagement.CacheListByServiceOptionalParams'
  - uid: '@azure/arm-apimanagement.CacheUpdateParameters'
    name: CacheUpdateParameters
    spec.typeScript:
      - name: CacheUpdateParameters
        fullName: CacheUpdateParameters
        uid: '@azure/arm-apimanagement.CacheUpdateParameters'