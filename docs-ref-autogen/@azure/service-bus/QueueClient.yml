### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.QueueClient'
    name: QueueClient
    fullName: QueueClient
    children:
      - '@azure/service-bus.QueueClient.close'
      - '@azure/service-bus.QueueClient.createReceiver'
      - '@azure/service-bus.QueueClient.createReceiver_1'
      - '@azure/service-bus.QueueClient.createSender'
      - '@azure/service-bus.QueueClient.entityPath'
      - '@azure/service-bus.QueueClient.getDeadLetterQueuePath'
      - '@azure/service-bus.QueueClient.id'
      - '@azure/service-bus.QueueClient.peek'
      - '@azure/service-bus.QueueClient.peekBySequenceNumber'
    langs:
      - typeScript
    type: class
    summary: |-
      描述允许与服务总线队列进行交互的客户端。
      使用`createQueueClient`ServiceBusClient 对象来实例化 QueueClient 函数
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      创建此客户端的发送方/接收方将关闭所有 AMQP 链接。
      关闭之后，QueueClient 和其发送方/接收方都不可以用于任何进一步的操作。
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.createReceiver'
    name: createReceiver(ReceiveMode)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      创建用于接收来自不会启用会话的队列消息接收方。
      - 如果打开的接收方已存在此 QueueClient，将引发错误。
      - 将引发`InvalidOperationError`队列是否已启用的会话 (在这种情况下，使用采用此方法的重载`sessionOptions`参数)
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |
            一个枚举，指示应在其中接收消息的模式。 可能的值包括：
            - `ReceiveMode.peekLock`：一旦在此模式下收到一条消息，接收方具有对锁定消息的特定持续时间。 如果消息不处置此时间，它进入返回下一步要提取的服务总线接收操作。
            - `ReceiveMode.receiveAndDelete`：从服务总线会自动删除在此模式下收到的消息。
      return:
        type:
          - '@azure/service-bus.Receiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.createReceiver_1'
    name: 'createReceiver(ReceiveMode, SessionReceiverOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      创建接收方在会话中接收消息启用队列。 当给定没有会话 Id 时，使用可用的会话之间的随机会话。
      - 如果打开的接收方已存在为给定的会话 Id，将引发错误。
      - 将引发`SessionCannotBeLockedError`如果队列不会启用会话 (在这种情况下不传递`sessionOptions`参数) 或服务总线不是能够在会话 （在哪些情况下则重试一段时间后） 上获取锁
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode, sessionOptions: SessionReceiverOptions)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |-
            一个枚举，指示应在其中接收消息的模式。 可能的值包括：
            - `ReceiveMode.peekLock`：一旦在此模式下收到一条消息，接收方具有对锁定消息的特定持续时间。 如果消息不处置此时间，它进入返回下一步要提取的服务总线接收操作。
            - `ReceiveMode.receiveAndDelete`：从服务总线会自动删除在此模式下收到的消息。
        - id: sessionOptions
          type:
            - '@azure/service-bus.SessionReceiverOptions'
          description: |
            若要为会话接收程序提供 sessionId 和自动锁定续订的持续时间的选项。
      return:
        type:
          - '@azure/service-bus.SessionReceiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.createSender'
    name: createSender()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      创建要用于发送消息，计划要在更高版本时发送的消息和取消此类计划的消息发件人。
      - 如果打开的发件人已存在此 QueueClient，将引发错误。
    syntax:
      content: function createSender()
      parameters: []
      return:
        type:
          - '@azure/service-bus.Sender'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.entityPath'
    name: entityPath
    fullName: entityPath
    children: []
    langs:
      - typeScript
    type: property
    summary: 为其创建此客户端与服务总线队列的路径。
    syntax:
      content: 'entityPath: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.getDeadLetterQueuePath'
    name: getDeadLetterQueuePath(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      返回具有给定名称的队列的相应死信队列名称。
      使用在此`createQueueClient`函数在`ServiceBusClient`实例从死信队列接收消息。
    syntax:
      content: 'static function getDeadLetterQueuePath(queueName: string)'
      parameters:
        - id: queueName
          type:
            - string
          description: |
            正在提取其死信对应的名称的队列的名称
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: 此客户端唯一标识符。
    syntax:
      content: 'id: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.peek'
    name: peek(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      提取下一批的活动消息 （包括但不是死信消息延迟）。
      - 首次调用`peek()`提取第一个活动消息。 每个后续调用中获取的后续消息。
      - 与不同`received`消息，`peeked`消息是消息的只读版本。
      它不能为`Completed/Abandoned/Deferred/Deadlettered`。 无法续订锁。
    syntax:
      content: 'function peek(maxMessageCount?: undefined | number)'
      parameters:
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.QueueClient.peekBySequenceNumber'
    name: 'peekBySequenceNumber(Long, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      查看所需的活动消息数 （包括但不是死信消息延迟） 从指定的序列号。
      - 与不同`received`消息，`peeked`消息是消息的只读版本。
      它不能为`Completed/Abandoned/Deferred/Deadlettered`。 无法续订锁。
    syntax:
      content: 'function peekBySequenceNumber(fromSequenceNumber: Long, maxMessageCount?: undefined | number)'
      parameters:
        - id: fromSequenceNumber
          type:
            - Long
          description: 从中读取消息序列号。
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.ReceiveMode'
    name: ReceiveMode
    spec.typeScript:
      - name: ReceiveMode
        fullName: ReceiveMode
        uid: '@azure/service-bus.ReceiveMode'
  - uid: '@azure/service-bus.Receiver'
    name: Receiver
    spec.typeScript:
      - name: Receiver
        fullName: Receiver
        uid: '@azure/service-bus.Receiver'
  - uid: '@azure/service-bus.SessionReceiverOptions'
    name: SessionReceiverOptions
    spec.typeScript:
      - name: SessionReceiverOptions
        fullName: SessionReceiverOptions
        uid: '@azure/service-bus.SessionReceiverOptions'
  - uid: '@azure/service-bus.SessionReceiver'
    name: SessionReceiver
    spec.typeScript:
      - name: SessionReceiver
        fullName: SessionReceiver
        uid: '@azure/service-bus.SessionReceiver'
  - uid: '@azure/service-bus.Sender'
    name: Sender
    spec.typeScript:
      - name: Sender
        fullName: Sender
        uid: '@azure/service-bus.Sender'
  - uid: 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    name: 'ReceivedMessageInfo[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReceivedMessageInfo
        fullName: ReceivedMessageInfo
        uid: '@azure/service-bus.ReceivedMessageInfo'
      - name: '[]>'
        fullName: '[]>'