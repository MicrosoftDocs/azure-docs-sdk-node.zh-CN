### YamlMime:UniversalReference
ms.openlocfilehash: 4e858f4b2ca5615a468b64d2e2270f9d2cb1f94c
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 08/12/2018
ms.locfileid: "40049887"
items:
- uid: azure-iot-device.Client
  name: Client
  fullName: Client
  children:
  - azure-iot-device.Client.constructor
  - azure-iot-device.Client.close
  - azure-iot-device.Client.fromAuthenticationProvider
  - azure-iot-device.Client.fromConnectionString
  - azure-iot-device.Client.fromSharedAccessSignature
  - azure-iot-device.Client.onDeviceMethod
  - azure-iot-device.Client.uploadToBlob
  langs:
  - typeScript
  type: class
  summary: >
    IoT 中心设备客户端用来与 Azure IoT 中心连接设备。

    SDK 的用户应在调用工厂方法之一[fromConnectionString](xref:azure-iot-device.Client.fromConnectionString)或[fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature)创建 IoT 中心设备客户端。
  extends:
    name: InternalClient
  package: azure-iot-device
- uid: azure-iot-device.Client.constructor
  name: Client
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new Client(transport: DeviceTransport, connStr?: string, blobUploadClient?: BlobUploadClient)'
    parameters:
    - id: transport
      type:
      - azure-iot-device.DeviceTransport
      description: 一个对象，实现接口的传输对象，例如，预期[Http](xref:azure-iot-device-http.Http)。
    - id: connStr
      type:
      - string
      description: 连接字符串 (可选： 如果未提供，必须调用 updateSharedAccessSignature 来直接设置 SharedAccessSignature 令牌)。
      optional: true
    - id: blobUploadClient
      type:
      - BlobUploadClient
      description: >
        一个对象，它能够将流上载到 blob。
      optional: true
  package: azure-iot-device
- uid: azure-iot-device.Client.close
  name: close
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    关闭传输连接并销毁的客户端资源。

    *注意： 客户端调用此方法后，对象不能重复使用。*
  syntax:
    content: 'function close(closeCallback?: (err?: Error, result?: Disconnected) => void)'
    parameters:
    - id: closeCallback
      type:
      - '(err?: Error, result?: Disconnected) => void'
      description: >
        传输已断开连接后调用的函数和客户端已关闭。
      optional: true
  package: azure-iot-device
- uid: azure-iot-device.Client.fromAuthenticationProvider
  name: fromAuthenticationProvider
  children: []
  type: method
  langs:
  - typeScript
  summary: 从给定的身份验证方法，并使用给定的传输类型创建 IoT 中心设备客户端。
  syntax:
    content: 'static function fromAuthenticationProvider(authenticationProvider: AuthenticationProvider, transportCtor: any)'
    parameters:
    - id: authenticationProvider
      type:
      - AuthenticationProvider
      description: 用于获取 IoT 中心的身份验证参数的对象。
    - id: transportCtor
      type:
      - any
      description: >
        传输协议用于连接到 IoT 中心。
    return:
      type:
      - any
  package: azure-iot-device
- uid: azure-iot-device.Client.fromConnectionString
  name: fromConnectionString
  children: []
  type: method
  langs:
  - typeScript
  summary: 从给定的连接字符串使用给定的传输类型创建 IoT 中心设备客户端。
  syntax:
    content: 'static function fromConnectionString(connStr: string, transportCtor: any)'
    parameters:
    - id: connStr
      type:
      - string
      description: 连接字符串，其中封装一个 IoT 中心的"设备连接"权限。
    - id: transportCtor
      type:
      - any
      description: >
        传输的构造函数。
    return:
      type:
      - any
  package: azure-iot-device
- uid: azure-iot-device.Client.fromSharedAccessSignature
  name: fromSharedAccessSignature
  children: []
  type: method
  langs:
  - typeScript
  summary: 从给定的共享的访问签名使用给定的传输类型创建 IoT 中心设备客户端。
  syntax:
    content: 'static function fromSharedAccessSignature(sharedAccessSignature: string, transportCtor: any)'
    parameters:
    - id: sharedAccessSignature
      type:
      - string
      description: 共享的访问签名，其中封装一个 IoT 中心的"设备连接"权限。
    - id: transportCtor
      type:
      - any
      description: ''
    return:
      type:
      - any
  package: azure-iot-device
- uid: azure-iot-device.Client.onDeviceMethod
  name: onDeviceMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: 注册一个名为方法的回调`methodName`。
  syntax:
    content: 'function onDeviceMethod(methodName: string, callback: (request: DeviceMethodRequest, response: DeviceMethodResponse) => void)'
    parameters:
    - id: methodName
      type:
      - string
      description: 将处理由回调的方法名称
    - id: callback
      type:
      - '(request: DeviceMethodRequest, response: DeviceMethodResponse) => void'
      description: >
        每次调用该方法的方法请求时应被调用的函数`methodName`收到。
  package: azure-iot-device
- uid: azure-iot-device.Client.uploadToBlob
  name: uploadToBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: '`uploadToBlob`方法将流上载到 blob。'
  syntax:
    content: 'function uploadToBlob(blobName: string, stream: Stream, streamLength: number, done: (err?: Error) => void)'
    parameters:
    - id: blobName
      type:
      - string
      description: 要用于将使用流的内容创建的 blob 的名称。
    - id: stream
      type:
      - Stream
      description: 应将数据与数据上载到 blob。
    - id: streamLength
      type:
      - number
      description: 数据的大小应上载到 blob。
    - id: done
      type:
      - '(err?: Error) => void'
      description: >
        要上传完成后调用的回调。
  package: azure-iot-device
references:
- uid: azure-iot-device.DeviceTransport
  spec.typeScript:
  - name: DeviceTransport
    fullName: DeviceTransport
    uid: azure-iot-device.DeviceTransport
