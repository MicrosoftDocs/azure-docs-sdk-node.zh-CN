### YamlMime:UniversalReference
ms.openlocfilehash: 76b5fc35171b1f148eb1e97caafb1901c5a2bc43
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 08/13/2018
ms.locfileid: "40049575"
items:
- uid: documentdb.HashPartitionResolver
  id: documentdb.HashPartitionResolver
  name: HashPartitionResolver
  summary: <span data-ttu-id="7c71a-101">HashPartitionResolver 实现分区基于值的哈希函数，从而可以在多个 Azure Cosmos DB 数据库服务的分区均匀分配请求和数据。</span><span class="sxs-lookup"><span data-stu-id="7c71a-101">HashPartitionResolver implements partitioning based on the value of a hash function, allowing you to evenly distribute requests and data across a number of partitions for the Azure Cosmos DB database service.</span></span>
  fullName: documentdb.HashPartitionResolver
  type: Class
  children:
  - documentdb.HashPartitionResolver.#ctor
  - documentdb.HashPartitionResolver#getPartitionKey
  - documentdb.HashPartitionResolver#resolveForRead
  - documentdb.HashPartitionResolver#resolveForCreate
  langs:
  - js
- id: documentdb.HashPartitionResolver.#ctor
  uid: documentdb.HashPartitionResolver.#ctor
  parent: documentdb.HashPartitionResolver
  name: HashPartitionResolver(partitionKeyExtractor)
  fullName: documentdb.HashPartitionResolver.HashPartitionResolver(partitionKeyExtractor)
  summary: <span data-ttu-id="7c71a-102">HashPartitionResolver 实现分区基于值的哈希函数，从而可以在多个 Azure Cosmos DB 数据库服务的分区均匀分配请求和数据。</span><span class="sxs-lookup"><span data-stu-id="7c71a-102">HashPartitionResolver implements partitioning based on the value of a hash function, allowing you to evenly distribute requests and data across a number of partitions for the Azure Cosmos DB database service.</span></span>
  type: Constructor
  syntax:
    parameters:
    - id: partitionKeyExtractor
      type:
      - string
      - function
      description: >-
        <span data-ttu-id="7c71a-103">如果 partitionKeyExtractor 是一个字符串，则应在要执行哈希处理的文档属性的名称。</span><span class="sxs-lookup"><span data-stu-id="7c71a-103">If partitionKeyExtractor is a string, it should be the name of the property in the document to execute the hashing on.</span></span>

        <span data-ttu-id="7c71a-104">如果 partitionKeyExtractor 是函数，则应从对象提取分区键的函数。</span><span class="sxs-lookup"><span data-stu-id="7c71a-104">If partitionKeyExtractor is a function, it should be a function to extract the partition key from an object.</span></span>
    content: new HashPartitionResolver(partitionKeyExtractor)
  langs:
  - js
- uid: documentdb.HashPartitionResolver#getPartitionKey
  id: documentdb.HashPartitionResolver#getPartitionKey
  parent: documentdb.HashPartitionResolver
  name: getPartitionKey(document)
  summary: <span data-ttu-id="7c71a-105">从指定的文档使用 partitionKeyExtractor 提取分区键</span><span class="sxs-lookup"><span data-stu-id="7c71a-105">Extracts the partition key from the specified document using the partitionKeyExtractor</span></span>
  fullName: documentdb.HashPartitionResolver.getPartitionKey(document)
  type: Function
  syntax:
    parameters:
    - id: document
      type:
      - object
      description: <span data-ttu-id="7c71a-106">要从中提取分区键文档。</span><span class="sxs-lookup"><span data-stu-id="7c71a-106">The document from which to extract the partition key.</span></span>
    return:
      type:
      - object
      description: ''
    content: function getPartitionKey(document)
  langs:
  - js
- uid: documentdb.HashPartitionResolver#resolveForRead
  id: documentdb.HashPartitionResolver#resolveForRead
  parent: documentdb.HashPartitionResolver
  name: resolveForRead(partitionKey)
  summary: <span data-ttu-id="7c71a-107">给定的分区键，返回集合的链接可从阅读的列表。</span><span class="sxs-lookup"><span data-stu-id="7c71a-107">Given a partition key, returns a list of collection links to read from.</span></span>
  fullName: documentdb.HashPartitionResolver.resolveForRead(partitionKey)
  type: Function
  syntax:
    parameters:
    - id: partitionKey
      type:
      - documentdb.any
      description: <span data-ttu-id="7c71a-108">用于确定查询的目标集合的分区键</span><span class="sxs-lookup"><span data-stu-id="7c71a-108">The partition key used to determine the target collection for query</span></span>
    content: function resolveForRead(partitionKey)
  langs:
  - js
- uid: documentdb.HashPartitionResolver#resolveForCreate
  id: documentdb.HashPartitionResolver#resolveForCreate
  parent: documentdb.HashPartitionResolver
  name: resolveForCreate(partitionKey)
  summary: <span data-ttu-id="7c71a-109">提供用于创建文档的分区键，返回正确的集合链接。</span><span class="sxs-lookup"><span data-stu-id="7c71a-109">Given a partition key, returns the correct collection link for creating a document.</span></span>
  fullName: documentdb.HashPartitionResolver.resolveForCreate(partitionKey)
  type: Function
  syntax:
    parameters:
    - id: partitionKey
      type:
      - documentdb.any
      description: <span data-ttu-id="7c71a-110">用于确定创建的目标集合的分区键</span><span class="sxs-lookup"><span data-stu-id="7c71a-110">The partition key used to determine the target collection for create</span></span>
    return:
      type:
      - string
      description: '- <span data-ttu-id="7c71a-111">将用于创建文档的目标集合链接。</span><span class="sxs-lookup"><span data-stu-id="7c71a-111">The target collection link that will be used for document creation.</span></span>'
    content: function resolveForCreate(partitionKey)
  langs:
  - js
