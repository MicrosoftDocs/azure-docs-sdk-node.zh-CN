### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-security.SecurityCenterContext'
    name: SecurityCenterContext
    fullName: SecurityCenterContext
    children:
      - '@azure/arm-security.SecurityCenterContext.acceptLanguage'
      - '@azure/arm-security.SecurityCenterContext.ascLocation'
      - '@azure/arm-security.SecurityCenterContext.beginLongRunningRequest'
      - '@azure/arm-security.SecurityCenterContext.credentials'
      - '@azure/arm-security.SecurityCenterContext.longRunningOperationRetryTimeout'
      - '@azure/arm-security.SecurityCenterContext.restoreLROPoller'
      - '@azure/arm-security.SecurityCenterContext.constructor'
      - '@azure/arm-security.SecurityCenterContext.sendLongRunningRequest'
      - '@azure/arm-security.SecurityCenterContext.sendLRORequest'
      - '@azure/arm-security.SecurityCenterContext.sendOperationRequest'
      - '@azure/arm-security.SecurityCenterContext.sendRequest'
      - '@azure/arm-security.SecurityCenterContext.subscriptionId'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: AzureServiceClient
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SecurityCenterContext.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SecurityCenterContext.ascLocation'
    name: ascLocation
    fullName: ascLocation
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'ascLocation: string'
      return:
        type:
          - string
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SecurityCenterContext.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="c968e-101">发送 （长时间运行的操作） 进行 lro 操作的初始请求并取回 HttpLongRunningOperationResponse 轮询进行 lro 操作和检查是否完成进行 lro 操作提供的方法。</span><span class="sxs-lookup"><span data-stu-id="c968e-101">Send the initial request of a LRO (long running operation) and get back an HttpLongRunningOperationResponse that provides methods for polling the LRO and checking if the LRO is finished.</span></span>
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="c968e-102">请求对象</span><span class="sxs-lookup"><span data-stu-id="c968e-102">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SecurityCenterContext.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SecurityCenterContext.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="c968e-103">重试超时秒数的长时间运行操作。</span><span class="sxs-lookup"><span data-stu-id="c968e-103">The retry timeout in seconds for Long Running Operations.</span></span> <span data-ttu-id="c968e-104">默认值为 30。</span><span class="sxs-lookup"><span data-stu-id="c968e-104">Default value is 30.</span></span>
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SecurityCenterContext.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="c968e-105">从提供 LROPollState 还原 LROPoller。</span><span class="sxs-lookup"><span data-stu-id="c968e-105">Restore an LROPoller from the provided LROPollState.</span></span> <span data-ttu-id="c968e-106">此方法可用于重新创建不同的进程或计算机上 LROPoller。</span><span class="sxs-lookup"><span data-stu-id="c968e-106">This method can be used to recreate an LROPoller on a different process or machine.</span></span>
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SecurityCenterContext.constructor'
    name: 'SecurityCenterContext(ServiceClientCredentials, string, string, Models.SecurityCenterOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="c968e-107">初始化 SecurityCenter 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c968e-107">Initializes a new instance of the SecurityCenter class.</span></span>
    syntax:
      content: 'new SecurityCenterContext(credentials: ServiceClientCredentials, subscriptionId: string, ascLocation: string, options?: Models.SecurityCenterOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: <span data-ttu-id="c968e-108">客户端连接到 Azure 所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="c968e-108">Credentials needed for the client to connect to Azure.</span></span>
        - id: subscriptionId
          type:
            - string
          description: <span data-ttu-id="c968e-109">Azure 订阅 ID</span><span class="sxs-lookup"><span data-stu-id="c968e-109">Azure subscription ID</span></span>
        - id: ascLocation
          type:
            - string
          description: <span data-ttu-id="c968e-110">ASC 存储订阅的数据的位置。</span><span class="sxs-lookup"><span data-stu-id="c968e-110">The location where ASC stores the data of the subscription.</span></span> <span data-ttu-id="c968e-111">可以从获取位置检索</span><span class="sxs-lookup"><span data-stu-id="c968e-111">can be retrieved from Get locations</span></span>
        - id: options
          type:
            - Models.SecurityCenterOptions
          description: ''
          optional: true
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SecurityCenterContext.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="c968e-112">提供了一种机制来发出请求，将轮询，并提供最终的结果。</span><span class="sxs-lookup"><span data-stu-id="c968e-112">Provides a mechanism to make a request that will poll and provide the final result.</span></span>
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="c968e-113">请求对象</span><span class="sxs-lookup"><span data-stu-id="c968e-113">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SecurityCenterContext.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="c968e-114">发送 （长时间运行的操作） 进行 lro 操作的初始请求并取回 LROPoller 轮询进行 lro 操作和检查是否完成进行 lro 操作提供的方法。</span><span class="sxs-lookup"><span data-stu-id="c968e-114">Send the initial request of a LRO (long running operation) and get back an LROPoller that provides methods for polling the LRO and checking if the LRO is finished.</span></span>
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="c968e-115">操作的参数。</span><span class="sxs-lookup"><span data-stu-id="c968e-115">The arguments to the operation.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="c968e-116">操作规范。</span><span class="sxs-lookup"><span data-stu-id="c968e-116">The specification for the operation.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="c968e-117">发出请求时发送的其他选项。</span><span class="sxs-lookup"><span data-stu-id="c968e-117">Additional options to be sent while making the request.</span></span>
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SecurityCenterContext.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="c968e-118">发送 HTTP 请求提供的 OperationSpec 填充。</span><span class="sxs-lookup"><span data-stu-id="c968e-118">Send an HTTP request that is populated using the provided OperationSpec.</span></span>
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="c968e-119">HTTP 请求的模板化值将填充从自变量。</span><span class="sxs-lookup"><span data-stu-id="c968e-119">The arguments that the HTTP request's templated values will be populated from.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="c968e-120">用于填充 httpRequest OperationSpec。</span><span class="sxs-lookup"><span data-stu-id="c968e-120">The OperationSpec to use to populate the httpRequest.</span></span>
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="c968e-121">要接收到响应时调用的回调。</span><span class="sxs-lookup"><span data-stu-id="c968e-121">The callback to call when the response is received.</span></span>
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SecurityCenterContext.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="c968e-122">发送提供的 httpRequest。</span><span class="sxs-lookup"><span data-stu-id="c968e-122">Send the provided httpRequest.</span></span>
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-security'
  - uid: '@azure/arm-security.SecurityCenterContext.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
    package: '@azure/arm-security'