### YamlMime:UniversalReference
ms.openlocfilehash: c83ab766af88665c57989bea2d8246f7f3b79c5b
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 12/13/2018
ms.locfileid: "52062483"
items:
- uid: '@azure/cosmos.Database'
  name: Database
  fullName: Database
  children:
  - '@azure/cosmos.Database.client'
  - '@azure/cosmos.Database.container'
  - '@azure/cosmos.Database.containers'
  - '@azure/cosmos.Database.constructor'
  - '@azure/cosmos.Database.delete'
  - '@azure/cosmos.Database.id'
  - '@azure/cosmos.Database.read'
  - '@azure/cosmos.Database.url'
  - '@azure/cosmos.Database.user'
  - '@azure/cosmos.Database.users'
  langs:
  - typeScript
  type: class
  summary: 用于读取或删除现有数据库的操作。
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.client'
  name: client
  fullName: client
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'client: CosmosClient'
    return:
      type:
      - '@azure/cosmos.CosmosClient'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.container'
  name: container(string)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    用于读取、 替换或删除特定的现有<xref:Database>按 id。使用`.containers`创建新的容器，或查询/读取所有容器。
  syntax:
    content: 'function container(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: ''
    return:
      type:
      - '@azure/cosmos.Container'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.containers'
  name: containers
  fullName: containers
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    用于创建新的容器，或查询/读取所有容器。

    使用`.container(id)`来读取、 替换或删除特定的现有<xref:Database>按 id。
  syntax:
    content: 'containers: Containers'
    return:
      type:
      - '@azure/cosmos.Containers'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.constructor'
  name: Database(CosmosClient, string, ClientContext)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: >
    返回一个新<xref:Database>实例。

    注意： 的目的是为了获取此对象从<xref:CosmosClient>通过`client.databsae(id)`，不适用于实例化它自己。
  syntax:
    content: 'new Database(client: CosmosClient, id: string, clientContext: ClientContext)'
    parameters:
    - id: client
      type:
      - '@azure/cosmos.CosmosClient'
      description: ''
    - id: id
      type:
      - string
      description: ''
    - id: clientContext
      type:
      - ClientContext
      description: ''
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.delete'
  name: delete(RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: 删除给定的数据库。
  syntax:
    content: 'function delete(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.DatabaseResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.id'
  name: id
  fullName: id
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'id: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.read'
  name: read(RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: 读取给定数据库的定义。
  syntax:
    content: 'function read(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.DatabaseResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.url'
  name: url
  fullName: url
  children: []
  langs:
  - typeScript
  type: property
  summary: 返回资源的引用 URL。 用于在权限链接。
  syntax:
    content: 'url: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.user'
  name: user(string)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    用于读取、 替换或删除特定的现有<xref:User>按 id。使用`.users`用于创建新用户，或查询/读取所有用户。
  syntax:
    content: 'function user(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: ''
    return:
      type:
      - '@azure/cosmos.User'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Database.users'
  name: users
  fullName: users
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    用于创建新用户，或查询/读取所有用户。

    使用`.user(id)`来读取、 替换或删除特定的现有<xref:User>按 id。
  syntax:
    content: 'users: Users'
    return:
      type:
      - '@azure/cosmos.Users'
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.CosmosClient'
  name: CosmosClient
  spec.typeScript:
  - name: CosmosClient
    fullName: CosmosClient
    uid: '@azure/cosmos.CosmosClient'
- uid: '@azure/cosmos.Containers'
  name: Containers
  spec.typeScript:
  - name: Containers
    fullName: Containers
    uid: '@azure/cosmos.Containers'
- uid: '@azure/cosmos.Users'
  name: Users
  spec.typeScript:
  - name: Users
    fullName: Users
    uid: '@azure/cosmos.Users'
- uid: '@azure/cosmos.Container'
  name: Container
  spec.typeScript:
  - name: Container
    fullName: Container
    uid: '@azure/cosmos.Container'
- uid: '@azure/cosmos.RequestOptions'
  name: RequestOptions
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.DatabaseResponse>
  name: DatabaseResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DatabaseResponse
    fullName: DatabaseResponse
    uid: '@azure/cosmos.DatabaseResponse'
  - name: '>'
    fullName: '>'
- uid: '@azure/cosmos.User'
  name: User
  spec.typeScript:
  - name: User
    fullName: User
    uid: '@azure/cosmos.User'
