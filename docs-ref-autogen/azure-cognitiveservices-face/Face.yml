### YamlMime:UniversalReference
ms.openlocfilehash: 5b2dcbac70d3d42b4477c37100171c12991de94f
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 12/13/2018
ms.locfileid: "52150922"
items:
- uid: azure-cognitiveservices-face.Face
  name: Face
  fullName: Face
  children:
  - azure-cognitiveservices-face.Face.detectWithStream
  - azure-cognitiveservices-face.Face.detectWithStream_2
  - azure-cognitiveservices-face.Face.detectWithStream_1
  - azure-cognitiveservices-face.Face.detectWithStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.Face.detectWithUrl
  - azure-cognitiveservices-face.Face.detectWithUrl_2
  - azure-cognitiveservices-face.Face.detectWithUrl_1
  - azure-cognitiveservices-face.Face.detectWithUrlWithHttpOperationResponse
  - azure-cognitiveservices-face.Face.findSimilar
  - azure-cognitiveservices-face.Face.findSimilar_2
  - azure-cognitiveservices-face.Face.findSimilar_1
  - azure-cognitiveservices-face.Face.findSimilarWithHttpOperationResponse
  - azure-cognitiveservices-face.Face.group
  - azure-cognitiveservices-face.Face.group_2
  - azure-cognitiveservices-face.Face.group_1
  - azure-cognitiveservices-face.Face.groupWithHttpOperationResponse
  - azure-cognitiveservices-face.Face.identify
  - azure-cognitiveservices-face.Face.identify_2
  - azure-cognitiveservices-face.Face.identify_1
  - azure-cognitiveservices-face.Face.identifyWithHttpOperationResponse
  - azure-cognitiveservices-face.Face.verifyFaceToFace
  - azure-cognitiveservices-face.Face.verifyFaceToFace_2
  - azure-cognitiveservices-face.Face.verifyFaceToFace_1
  - azure-cognitiveservices-face.Face.verifyFaceToFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.Face.verifyFaceToPerson
  - azure-cognitiveservices-face.Face.verifyFaceToPerson_2
  - azure-cognitiveservices-face.Face.verifyFaceToPerson_1
  - azure-cognitiveservices-face.Face.verifyFaceToPersonWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detectWithStream
  name: detectWithStream(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-101">检测人脸在图像并返回的人脸位置，和 （可选） 使用 faceIds、 界标、 和属性。</span><span class="sxs-lookup"><span data-stu-id="71780-101">Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</span></span>
  syntax:
    content: 'function detectWithStream(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="71780-102">图像流。</span><span class="sxs-lookup"><span data-stu-id="71780-102">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.DetectedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detectWithStream_2
  name: detectWithStream(stream.Readable, Object, ServiceCallback<DetectedFace[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-103">检测人脸在图像并返回的人脸位置，和 （可选） 使用 faceIds、 界标、 和属性。</span><span class="sxs-lookup"><span data-stu-id="71780-103">Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</span></span>
  syntax:
    content: 'function detectWithStream(image: stream.Readable, options: Object, callback: ServiceCallback<DetectedFace[]>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.DetectedFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.DetectedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detectWithStream_1
  name: detectWithStream(stream.Readable, ServiceCallback<DetectedFace[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-104">检测人脸在图像并返回的人脸位置，和 （可选） 使用 faceIds、 界标、 和属性。</span><span class="sxs-lookup"><span data-stu-id="71780-104">Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</span></span>
  syntax:
    content: 'function detectWithStream(image: stream.Readable, callback: ServiceCallback<DetectedFace[]>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.DetectedFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.DetectedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detectWithStreamWithHttpOperationResponse
  name: detectWithStreamWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-105">检测人脸在图像并返回的人脸位置，和 （可选） 使用 faceIds、 界标、 和属性。</span><span class="sxs-lookup"><span data-stu-id="71780-105">Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</span></span>
  syntax:
    content: 'function detectWithStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="71780-106">图像流。</span><span class="sxs-lookup"><span data-stu-id="71780-106">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.DetectedFace[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detectWithUrl
  name: detectWithUrl(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-107">检测人脸在图像并返回的人脸位置，和 （可选） 使用 faceIds、 界标、 和属性。</span><span class="sxs-lookup"><span data-stu-id="71780-107">Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</span></span>
  syntax:
    content: 'function detectWithUrl(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="71780-108">可公开访问的图像的 URL</span><span class="sxs-lookup"><span data-stu-id="71780-108">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.DetectedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detectWithUrl_2
  name: detectWithUrl(string, Object, ServiceCallback<DetectedFace[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-109">检测人脸在图像并返回的人脸位置，和 （可选） 使用 faceIds、 界标、 和属性。</span><span class="sxs-lookup"><span data-stu-id="71780-109">Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</span></span>
  syntax:
    content: 'function detectWithUrl(url: string, options: Object, callback: ServiceCallback<DetectedFace[]>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.DetectedFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.DetectedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detectWithUrl_1
  name: detectWithUrl(string, ServiceCallback<DetectedFace[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-110">检测人脸在图像并返回的人脸位置，和 （可选） 使用 faceIds、 界标、 和属性。</span><span class="sxs-lookup"><span data-stu-id="71780-110">Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</span></span>
  syntax:
    content: 'function detectWithUrl(url: string, callback: ServiceCallback<DetectedFace[]>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.DetectedFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.DetectedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.detectWithUrlWithHttpOperationResponse
  name: detectWithUrlWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-111">检测人脸在图像并返回的人脸位置，和 （可选） 使用 faceIds、 界标、 和属性。</span><span class="sxs-lookup"><span data-stu-id="71780-111">Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</span></span>
  syntax:
    content: 'function detectWithUrlWithHttpOperationResponse(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="71780-112">可公开访问的图像的 URL</span><span class="sxs-lookup"><span data-stu-id="71780-112">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.DetectedFace[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.findSimilar
  name: findSimilar(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-113">给定查询人脸的 faceId，查找相似人脸 faceId 数组、 人脸列表或大型人脸列表。</span><span class="sxs-lookup"><span data-stu-id="71780-113">Given query face's faceId, find the similar-looking faces from a faceId array, a face list or a large face list.</span></span>
  syntax:
    content: 'function findSimilar(faceId: string, options?: Object)'
    parameters:
    - id: faceId
      type:
      - string
      description: >
        <span data-ttu-id="71780-114">其 FaceId 的查询人脸。</span><span class="sxs-lookup"><span data-stu-id="71780-114">FaceId of the query face.</span></span> <span data-ttu-id="71780-115">用户需要调用人脸-检测第一个要获取有效 faceId。</span><span class="sxs-lookup"><span data-stu-id="71780-115">User needs to call Face - Detect first to get a valid faceId.</span></span> <span data-ttu-id="71780-116">请注意，此 faceId 不会持久保留，并将在过期之后检测调用 24 小时</span><span class="sxs-lookup"><span data-stu-id="71780-116">Note that this faceId is not persisted and will expire 24 hours after the detection call</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.SimilarFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.findSimilar_2
  name: findSimilar(string, Object, ServiceCallback<SimilarFace[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-117">给定查询人脸的 faceId，查找相似人脸 faceId 数组、 人脸列表或大型人脸列表。</span><span class="sxs-lookup"><span data-stu-id="71780-117">Given query face's faceId, find the similar-looking faces from a faceId array, a face list or a large face list.</span></span>
  syntax:
    content: 'function findSimilar(faceId: string, options: Object, callback: ServiceCallback<SimilarFace[]>)'
    parameters:
    - id: faceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.SimilarFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.SimilarFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.findSimilar_1
  name: findSimilar(string, ServiceCallback<SimilarFace[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-118">给定查询人脸的 faceId，查找相似人脸 faceId 数组、 人脸列表或大型人脸列表。</span><span class="sxs-lookup"><span data-stu-id="71780-118">Given query face's faceId, find the similar-looking faces from a faceId array, a face list or a large face list.</span></span>
  syntax:
    content: 'function findSimilar(faceId: string, callback: ServiceCallback<SimilarFace[]>)'
    parameters:
    - id: faceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.SimilarFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.SimilarFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.findSimilarWithHttpOperationResponse
  name: findSimilarWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-119">给定查询人脸的 faceId，查找相似人脸 faceId 数组、 人脸列表或大型人脸列表。</span><span class="sxs-lookup"><span data-stu-id="71780-119">Given query face's faceId, find the similar-looking faces from a faceId array, a face list or a large face list.</span></span>
  syntax:
    content: 'function findSimilarWithHttpOperationResponse(faceId: string, options?: Object)'
    parameters:
    - id: faceId
      type:
      - string
      description: >
        <span data-ttu-id="71780-120">其 FaceId 的查询人脸。</span><span class="sxs-lookup"><span data-stu-id="71780-120">FaceId of the query face.</span></span> <span data-ttu-id="71780-121">用户需要调用人脸-检测第一个要获取有效 faceId。</span><span class="sxs-lookup"><span data-stu-id="71780-121">User needs to call Face - Detect first to get a valid faceId.</span></span> <span data-ttu-id="71780-122">请注意，此 faceId 不会持久保留，并将在过期之后检测调用 24 小时</span><span class="sxs-lookup"><span data-stu-id="71780-122">Note that this faceId is not persisted and will expire 24 hours after the detection call</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.SimilarFace[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.group
  name: group(string[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-123">将候选人脸划分为组根据人脸的相似性。</span><span class="sxs-lookup"><span data-stu-id="71780-123">Divide candidate faces into groups based on face similarity.</span></span>
  syntax:
    content: 'function group(faceIds: string[], options?: Object)'
    parameters:
    - id: faceIds
      type:
      - string[]
      description: >
        <span data-ttu-id="71780-124">候选 faceId 的数组创建的人脸-检测。</span><span class="sxs-lookup"><span data-stu-id="71780-124">Array of candidate faceId created by Face - Detect.</span></span>

        <span data-ttu-id="71780-125">最大值是 1000年张人脸</span><span class="sxs-lookup"><span data-stu-id="71780-125">The maximum is 1000 faces</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.GroupResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.group_2
  name: group(string[], Object, ServiceCallback<GroupResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-126">将候选人脸划分为组根据人脸的相似性。</span><span class="sxs-lookup"><span data-stu-id="71780-126">Divide candidate faces into groups based on face similarity.</span></span>
  syntax:
    content: 'function group(faceIds: string[], options: Object, callback: ServiceCallback<GroupResult>)'
    parameters:
    - id: faceIds
      type:
      - string[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GroupResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GroupResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.group_1
  name: group(string[], ServiceCallback<GroupResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-127">将候选人脸划分为组根据人脸的相似性。</span><span class="sxs-lookup"><span data-stu-id="71780-127">Divide candidate faces into groups based on face similarity.</span></span>
  syntax:
    content: 'function group(faceIds: string[], callback: ServiceCallback<GroupResult>)'
    parameters:
    - id: faceIds
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GroupResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GroupResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.groupWithHttpOperationResponse
  name: groupWithHttpOperationResponse(string[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-128">将候选人脸划分为组根据人脸的相似性。</span><span class="sxs-lookup"><span data-stu-id="71780-128">Divide candidate faces into groups based on face similarity.</span></span>
  syntax:
    content: 'function groupWithHttpOperationResponse(faceIds: string[], options?: Object)'
    parameters:
    - id: faceIds
      type:
      - string[]
      description: >
        <span data-ttu-id="71780-129">候选 faceId 的数组创建的人脸-检测。</span><span class="sxs-lookup"><span data-stu-id="71780-129">Array of candidate faceId created by Face - Detect.</span></span>

        <span data-ttu-id="71780-130">最大值是 1000年张人脸</span><span class="sxs-lookup"><span data-stu-id="71780-130">The maximum is 1000 faces</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.GroupResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.identify
  name: identify(string[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-131">若要查找最接近的匹配特定查询人脸的人员组或大型用户组的 1 对多标识。</span><span class="sxs-lookup"><span data-stu-id="71780-131">1-to-many identification to find the closest matches of the specific query person face from a person group or large person group.</span></span>
  syntax:
    content: 'function identify(faceIds: string[], options?: Object)'
    parameters:
    - id: faceIds
      type:
      - string[]
      description: >
        <span data-ttu-id="71780-132">查询的数组的人脸 faceIds，创建的人脸-检测。</span><span class="sxs-lookup"><span data-stu-id="71780-132">Array of query faces faceIds, created by the Face - Detect.</span></span> <span data-ttu-id="71780-133">人脸的每个单独进行标识。</span><span class="sxs-lookup"><span data-stu-id="71780-133">Each of the faces are identified independently.</span></span> <span data-ttu-id="71780-134">有效的 faceIds 数之间是 [1，10]。</span><span class="sxs-lookup"><span data-stu-id="71780-134">The valid number of faceIds is between [1, 10].</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.IdentifyResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.identify_2
  name: identify(string[], Object, ServiceCallback<IdentifyResult[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-135">若要查找最接近的匹配特定查询人脸的人员组或大型用户组的 1 对多标识。</span><span class="sxs-lookup"><span data-stu-id="71780-135">1-to-many identification to find the closest matches of the specific query person face from a person group or large person group.</span></span>
  syntax:
    content: 'function identify(faceIds: string[], options: Object, callback: ServiceCallback<IdentifyResult[]>)'
    parameters:
    - id: faceIds
      type:
      - string[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.IdentifyResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.IdentifyResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.identify_1
  name: identify(string[], ServiceCallback<IdentifyResult[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-136">若要查找最接近的匹配特定查询人脸的人员组或大型用户组的 1 对多标识。</span><span class="sxs-lookup"><span data-stu-id="71780-136">1-to-many identification to find the closest matches of the specific query person face from a person group or large person group.</span></span>
  syntax:
    content: 'function identify(faceIds: string[], callback: ServiceCallback<IdentifyResult[]>)'
    parameters:
    - id: faceIds
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.IdentifyResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.IdentifyResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.identifyWithHttpOperationResponse
  name: identifyWithHttpOperationResponse(string[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-137">若要查找最接近的匹配特定查询人脸的人员组或大型用户组的 1 对多标识。</span><span class="sxs-lookup"><span data-stu-id="71780-137">1-to-many identification to find the closest matches of the specific query person face from a person group or large person group.</span></span>
  syntax:
    content: 'function identifyWithHttpOperationResponse(faceIds: string[], options?: Object)'
    parameters:
    - id: faceIds
      type:
      - string[]
      description: >
        <span data-ttu-id="71780-138">查询的数组的人脸 faceIds，创建的人脸-检测。</span><span class="sxs-lookup"><span data-stu-id="71780-138">Array of query faces faceIds, created by the Face - Detect.</span></span> <span data-ttu-id="71780-139">人脸的每个单独进行标识。</span><span class="sxs-lookup"><span data-stu-id="71780-139">Each of the faces are identified independently.</span></span> <span data-ttu-id="71780-140">有效的 faceIds 数之间是 [1，10]。</span><span class="sxs-lookup"><span data-stu-id="71780-140">The valid number of faceIds is between [1, 10].</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.IdentifyResult[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verifyFaceToFace
  name: verifyFaceToFace(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-141">验证是否两张脸属于同一个人或一个人脸是否属于某个人。</span><span class="sxs-lookup"><span data-stu-id="71780-141">Verify whether two faces belong to a same person or whether one face belongs to a person.</span></span>
  syntax:
    content: 'function verifyFaceToFace(faceId1: string, faceId2: string, options?: Object)'
    parameters:
    - id: faceId1
      type:
      - string
      description: >
        <span data-ttu-id="71780-142">第一个人脸，faceId 来自人脸-检测</span><span class="sxs-lookup"><span data-stu-id="71780-142">FaceId of the first face, comes from Face - Detect</span></span>
    - id: faceId2
      type:
      - string
      description: >
        <span data-ttu-id="71780-143">第二个人脸，faceId 来自人脸-检测</span><span class="sxs-lookup"><span data-stu-id="71780-143">FaceId of the second face, comes from Face - Detect</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.VerifyResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verifyFaceToFace_2
  name: verifyFaceToFace(string, string, Object, ServiceCallback<VerifyResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-144">验证是否两张脸属于同一个人或一个人脸是否属于某个人。</span><span class="sxs-lookup"><span data-stu-id="71780-144">Verify whether two faces belong to a same person or whether one face belongs to a person.</span></span>
  syntax:
    content: 'function verifyFaceToFace(faceId1: string, faceId2: string, options: Object, callback: ServiceCallback<VerifyResult>)'
    parameters:
    - id: faceId1
      type:
      - string
      description: ''
    - id: faceId2
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.VerifyResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.VerifyResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verifyFaceToFace_1
  name: verifyFaceToFace(string, string, ServiceCallback<VerifyResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-145">验证是否两张脸属于同一个人或一个人脸是否属于某个人。</span><span class="sxs-lookup"><span data-stu-id="71780-145">Verify whether two faces belong to a same person or whether one face belongs to a person.</span></span>
  syntax:
    content: 'function verifyFaceToFace(faceId1: string, faceId2: string, callback: ServiceCallback<VerifyResult>)'
    parameters:
    - id: faceId1
      type:
      - string
      description: ''
    - id: faceId2
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.VerifyResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.VerifyResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verifyFaceToFaceWithHttpOperationResponse
  name: verifyFaceToFaceWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-146">验证是否两张脸属于同一个人或一个人脸是否属于某个人。</span><span class="sxs-lookup"><span data-stu-id="71780-146">Verify whether two faces belong to a same person or whether one face belongs to a person.</span></span>
  syntax:
    content: 'function verifyFaceToFaceWithHttpOperationResponse(faceId1: string, faceId2: string, options?: Object)'
    parameters:
    - id: faceId1
      type:
      - string
      description: >
        <span data-ttu-id="71780-147">第一个人脸，faceId 来自人脸-检测</span><span class="sxs-lookup"><span data-stu-id="71780-147">FaceId of the first face, comes from Face - Detect</span></span>
    - id: faceId2
      type:
      - string
      description: >
        <span data-ttu-id="71780-148">第二个人脸，faceId 来自人脸-检测</span><span class="sxs-lookup"><span data-stu-id="71780-148">FaceId of the second face, comes from Face - Detect</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.VerifyResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verifyFaceToPerson
  name: verifyFaceToPerson(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-149">验证两张脸是否属于同一个人。</span><span class="sxs-lookup"><span data-stu-id="71780-149">Verify whether two faces belong to a same person.</span></span> <span data-ttu-id="71780-150">将人脸 Id 人员 Id 进行比较</span><span class="sxs-lookup"><span data-stu-id="71780-150">Compares a face Id with a Person Id</span></span>
  syntax:
    content: 'function verifyFaceToPerson(faceId: string, personId: string, options?: Object)'
    parameters:
    - id: faceId
      type:
      - string
      description: >
        <span data-ttu-id="71780-151">人脸，FaceId 来自人脸-检测</span><span class="sxs-lookup"><span data-stu-id="71780-151">FaceId of the face, comes from Face - Detect</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="71780-152">人员组或大型用户组中指定了某个人。</span><span class="sxs-lookup"><span data-stu-id="71780-152">Specify a certain person in a person group or a large person group.</span></span> <span data-ttu-id="71780-153">personId 创建亲自 person Group-创建或大型人物组人员-创建。</span><span class="sxs-lookup"><span data-stu-id="71780-153">personId is created in PersonGroup Person - Create or LargePersonGroup Person - Create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.VerifyResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verifyFaceToPerson_2
  name: verifyFaceToPerson(string, string, Object, ServiceCallback<VerifyResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-154">验证两张脸是否属于同一个人。</span><span class="sxs-lookup"><span data-stu-id="71780-154">Verify whether two faces belong to a same person.</span></span> <span data-ttu-id="71780-155">将人脸 Id 人员 Id 进行比较</span><span class="sxs-lookup"><span data-stu-id="71780-155">Compares a face Id with a Person Id</span></span>
  syntax:
    content: 'function verifyFaceToPerson(faceId: string, personId: string, options: Object, callback: ServiceCallback<VerifyResult>)'
    parameters:
    - id: faceId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.VerifyResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.VerifyResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verifyFaceToPerson_1
  name: verifyFaceToPerson(string, string, ServiceCallback<VerifyResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-156">验证两张脸是否属于同一个人。</span><span class="sxs-lookup"><span data-stu-id="71780-156">Verify whether two faces belong to a same person.</span></span> <span data-ttu-id="71780-157">将人脸 Id 人员 Id 进行比较</span><span class="sxs-lookup"><span data-stu-id="71780-157">Compares a face Id with a Person Id</span></span>
  syntax:
    content: 'function verifyFaceToPerson(faceId: string, personId: string, callback: ServiceCallback<VerifyResult>)'
    parameters:
    - id: faceId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.VerifyResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.VerifyResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.Face.verifyFaceToPersonWithHttpOperationResponse
  name: verifyFaceToPersonWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="71780-158">验证两张脸是否属于同一个人。</span><span class="sxs-lookup"><span data-stu-id="71780-158">Verify whether two faces belong to a same person.</span></span> <span data-ttu-id="71780-159">将人脸 Id 人员 Id 进行比较</span><span class="sxs-lookup"><span data-stu-id="71780-159">Compares a face Id with a Person Id</span></span>
  syntax:
    content: 'function verifyFaceToPersonWithHttpOperationResponse(faceId: string, personId: string, options?: Object)'
    parameters:
    - id: faceId
      type:
      - string
      description: >
        <span data-ttu-id="71780-160">人脸，FaceId 来自人脸-检测</span><span class="sxs-lookup"><span data-stu-id="71780-160">FaceId of the face, comes from Face - Detect</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="71780-161">人员组或大型用户组中指定了某个人。</span><span class="sxs-lookup"><span data-stu-id="71780-161">Specify a certain person in a person group or a large person group.</span></span> <span data-ttu-id="71780-162">personId 创建亲自 person Group-创建或大型人物组人员-创建。</span><span class="sxs-lookup"><span data-stu-id="71780-162">personId is created in PersonGroup Person - Create or LargePersonGroup Person - Create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.VerifyResult>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.DetectedFace[]>
  name: DetectedFace[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DetectedFace
    fullName: DetectedFace
    uid: azure-cognitiveservices-face.DetectedFace
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.DetectedFace[]>
  name: DetectedFace[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DetectedFace
    fullName: DetectedFace
    uid: azure-cognitiveservices-face.DetectedFace
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.DetectedFace[]>>
  name: DetectedFace[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DetectedFace
    fullName: DetectedFace
    uid: azure-cognitiveservices-face.DetectedFace
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<azure-cognitiveservices-face.SimilarFace[]>
  name: SimilarFace[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: SimilarFace
    fullName: SimilarFace
    uid: azure-cognitiveservices-face.SimilarFace
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.SimilarFace[]>
  name: SimilarFace[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: SimilarFace
    fullName: SimilarFace
    uid: azure-cognitiveservices-face.SimilarFace
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.SimilarFace[]>>
  name: SimilarFace[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: SimilarFace
    fullName: SimilarFace
    uid: azure-cognitiveservices-face.SimilarFace
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<azure-cognitiveservices-face.GroupResult>
  name: GroupResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: GroupResult
    fullName: GroupResult
    uid: azure-cognitiveservices-face.GroupResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.GroupResult>
  name: GroupResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: GroupResult
    fullName: GroupResult
    uid: azure-cognitiveservices-face.GroupResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.GroupResult>>
  name: GroupResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: GroupResult
    fullName: GroupResult
    uid: azure-cognitiveservices-face.GroupResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.IdentifyResult[]>
  name: IdentifyResult[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: IdentifyResult
    fullName: IdentifyResult
    uid: azure-cognitiveservices-face.IdentifyResult
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.IdentifyResult[]>
  name: IdentifyResult[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: IdentifyResult
    fullName: IdentifyResult
    uid: azure-cognitiveservices-face.IdentifyResult
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.IdentifyResult[]>>
  name: IdentifyResult[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: IdentifyResult
    fullName: IdentifyResult
    uid: azure-cognitiveservices-face.IdentifyResult
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<azure-cognitiveservices-face.VerifyResult>
  name: VerifyResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: VerifyResult
    fullName: VerifyResult
    uid: azure-cognitiveservices-face.VerifyResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.VerifyResult>
  name: VerifyResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: VerifyResult
    fullName: VerifyResult
    uid: azure-cognitiveservices-face.VerifyResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.VerifyResult>>
  name: VerifyResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: VerifyResult
    fullName: VerifyResult
    uid: azure-cognitiveservices-face.VerifyResult
  - name: '>>'
    fullName: '>>'
