### YamlMime:UniversalReference
ms.openlocfilehash: 70f7fdced044f28d0c42ea199dc464034747e39c
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 08/22/2018
ms.locfileid: "41476668"
items:
- uid: azure-iot-device.ModuleClient
  name: ModuleClient
  fullName: ModuleClient
  children:
  - azure-iot-device.ModuleClient.close
  - azure-iot-device.ModuleClient.fromAuthenticationProvider
  - azure-iot-device.ModuleClient.fromConnectionString
  - azure-iot-device.ModuleClient.fromEnvironment
  - azure-iot-device.ModuleClient.fromSharedAccessSignature
  - azure-iot-device.ModuleClient.invokeMethod
  - azure-iot-device.ModuleClient.invokeMethod_1
  - azure-iot-device.ModuleClient.onMethod
  - azure-iot-device.ModuleClient.sendOutputEvent
  - azure-iot-device.ModuleClient.sendOutputEventBatch
  - azure-iot-device.ModuleClient.setOptions
  langs:
  - typeScript
  type: class
  summary: >
    <span data-ttu-id="74760-101">IoT 中心设备客户端用来与 Azure IoT 中心连接设备。</span><span class="sxs-lookup"><span data-stu-id="74760-101">IoT Hub device client used to connect a device with an Azure IoT hub.</span></span>

    <span data-ttu-id="74760-102">SDK 的用户应在调用工厂方法之一[fromConnectionString](xref:azure-iot-device.Client.fromConnectionString)或[fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature)创建 IoT 中心设备客户端。</span><span class="sxs-lookup"><span data-stu-id="74760-102">Users of the SDK should call one of the factory methods, [fromConnectionString](xref:azure-iot-device.Client.fromConnectionString) or [fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature) to create an IoT Hub device client.</span></span>
  extends:
    name: InternalClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.close
  name: close
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="74760-103">关闭传输连接并销毁的客户端资源。</span><span class="sxs-lookup"><span data-stu-id="74760-103">Closes the transport connection and destroys the client resources.</span></span>

    <span data-ttu-id="74760-104">*注意： 调用此方法 ModuleClient 后对象不能重复使用。*</span><span class="sxs-lookup"><span data-stu-id="74760-104">*Note: After calling this method the ModuleClient object cannot be reused.*</span></span>
  syntax:
    content: 'function close(closeCallback?: (err?: Error, result?: Disconnected) => void)'
    parameters:
    - id: closeCallback
      type:
      - '(err?: Error, result?: Disconnected) => void'
      description: >
        <span data-ttu-id="74760-105">传输已断开连接后调用的函数和客户端已关闭。</span><span class="sxs-lookup"><span data-stu-id="74760-105">Function to call once the transport is disconnected and the client closed.</span></span>
      optional: true
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromAuthenticationProvider
  name: fromAuthenticationProvider
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="74760-106">从给定的身份验证方法，并使用给定的传输类型创建的 IoT 中心模块客户端。</span><span class="sxs-lookup"><span data-stu-id="74760-106">Creates an IoT Hub module client from the given authentication method and using the given transport type.</span></span>
  syntax:
    content: 'static function fromAuthenticationProvider(authenticationProvider: AuthenticationProvider, transportCtor: any)'
    parameters:
    - id: authenticationProvider
      type:
      - AuthenticationProvider
      description: <span data-ttu-id="74760-107">用于获取 IoT 中心的身份验证参数的对象。</span><span class="sxs-lookup"><span data-stu-id="74760-107">Object used to obtain the authentication parameters for the IoT hub.</span></span>
    - id: transportCtor
      type:
      - any
      description: >
        <span data-ttu-id="74760-108">传输协议用于连接到 IoT 中心。</span><span class="sxs-lookup"><span data-stu-id="74760-108">Transport protocol used to connect to IoT hub.</span></span>
    return:
      type:
      - any
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromConnectionString
  name: fromConnectionString
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="74760-109">从给定的连接字符串使用给定的传输类型创建 IoT 中心设备客户端。</span><span class="sxs-lookup"><span data-stu-id="74760-109">Creates an IoT Hub device client from the given connection string using the given transport type.</span></span>
  syntax:
    content: 'static function fromConnectionString(connStr: string, transportCtor: any)'
    parameters:
    - id: connStr
      type:
      - string
      description: <span data-ttu-id="74760-110">连接字符串，其中封装一个 IoT 中心的"设备连接"权限。</span><span class="sxs-lookup"><span data-stu-id="74760-110">A connection string which encapsulates "device connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - any
      description: >
        <span data-ttu-id="74760-111">传输的构造函数。</span><span class="sxs-lookup"><span data-stu-id="74760-111">A transport constructor.</span></span>
    return:
      type:
      - azure-iot-device.ModuleClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromEnvironment
  name: fromEnvironment
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="74760-112">通过在环境中的配置信息来创建 IoT 中心模块客户端。</span><span class="sxs-lookup"><span data-stu-id="74760-112">Creates an IoT Hub module client by using configuration information from the environment.</span></span>

    <span data-ttu-id="74760-113">如果环境变量调用`EdgeHubConnectionString`或`IotHubConnectionString`存在，则使用该值和行为等同于调用`fromConnectionString`传递的中。</span><span class="sxs-lookup"><span data-stu-id="74760-113">If an environment variable called `EdgeHubConnectionString` or `IotHubConnectionString` exists, then that value is used and behavior is identical to calling `fromConnectionString` passing that in.</span></span> <span data-ttu-id="74760-114">如果不存在这些环境变量，则必须定义以下变量：</span><span class="sxs-lookup"><span data-stu-id="74760-114">If those environment variables do not exist then the following variables MUST be defined:</span></span>

        - <span data-ttu-id="74760-115">IOTEDGE_WORKLOADURI iotedged 的工作负荷 API 的 URI</span><span class="sxs-lookup"><span data-stu-id="74760-115">IOTEDGE_WORKLOADURI          URI for iotedged's workload API</span></span>
        - <span data-ttu-id="74760-116">IOTEDGE_DEVICEID 设备标识符</span><span class="sxs-lookup"><span data-stu-id="74760-116">IOTEDGE_DEVICEID             Device identifier</span></span>
        - <span data-ttu-id="74760-117">IOTEDGE_MODULEID 模块标识符</span><span class="sxs-lookup"><span data-stu-id="74760-117">IOTEDGE_MODULEID             Module identifier</span></span>
        - <span data-ttu-id="74760-118">IOTEDGE_MODULEGENERATIONID 模块生成标识符</span><span class="sxs-lookup"><span data-stu-id="74760-118">IOTEDGE_MODULEGENERATIONID   Module generation identifier</span></span>
        - <span data-ttu-id="74760-119">IOTEDGE_IOTHUBHOSTNAME IoT 中心主机名</span><span class="sxs-lookup"><span data-stu-id="74760-119">IOTEDGE_IOTHUBHOSTNAME       IoT Hub host name</span></span>
        - <span data-ttu-id="74760-120">用于; IOTEDGE_AUTHSCHEME 身份验证方案必须是"sasToken"</span><span class="sxs-lookup"><span data-stu-id="74760-120">IOTEDGE_AUTHSCHEME           Authentication scheme to use; must be "sasToken"</span></span>
  syntax:
    content: 'static function fromEnvironment(transportCtor: any, callback: (err?: Error, client?: ModuleClient) => void)'
    parameters:
    - id: transportCtor
      type:
      - any
      description: <span data-ttu-id="74760-121">传输协议用于连接到 IoT 中心。</span><span class="sxs-lookup"><span data-stu-id="74760-121">Transport protocol used to connect to IoT hub.</span></span>
    - id: callback
      type:
      - '(err?: Error, client?: ModuleClient) => void'
      description: >
        <span data-ttu-id="74760-122">要调用 ModuleClient 后 constructured 或出错时创建客户端的回调。</span><span class="sxs-lookup"><span data-stu-id="74760-122">Callback to invoke when the ModuleClient has been constructured or if an error occurs while creating the client.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromSharedAccessSignature
  name: fromSharedAccessSignature
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="74760-123">从给定的共享的访问签名使用给定的传输类型创建的 IoT 中心模块客户端。</span><span class="sxs-lookup"><span data-stu-id="74760-123">Creates an IoT Hub module client from the given shared access signature using the given transport type.</span></span>
  syntax:
    content: 'static function fromSharedAccessSignature(sharedAccessSignature: string, transportCtor: any)'
    parameters:
    - id: sharedAccessSignature
      type:
      - string
      description: <span data-ttu-id="74760-124">共享的访问签名，其中封装一个 IoT 中心的"设备连接"权限。</span><span class="sxs-lookup"><span data-stu-id="74760-124">A shared access signature which encapsulates "device connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - any
      description: ''
    return:
      type:
      - any
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod
  name: invokeMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="74760-125">调用下游设备上或在同一边缘设备上的另一个模块的方法。</span><span class="sxs-lookup"><span data-stu-id="74760-125">Invokes a method on a downstream device or on another module on the same Edge device.</span></span> <span data-ttu-id="74760-126">请注意，此功能仅适用时运行该模块的一部分的边缘设备。</span><span class="sxs-lookup"><span data-stu-id="74760-126">Please note that this feature only works when the module is being run as part of an Edge device.</span></span>
  syntax:
    content: 'function invokeMethod(deviceId: string, methodParams: MethodParams, callback: MethodCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: <span data-ttu-id="74760-127">目标设备标识符</span><span class="sxs-lookup"><span data-stu-id="74760-127">target device identifier</span></span>
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: <span data-ttu-id="74760-128">直接方法调用的参数</span><span class="sxs-lookup"><span data-stu-id="74760-128">parameters of the direct method call</span></span>
    - id: callback
      type:
      - azure-iot-device.MethodCallback
      description: >
        <span data-ttu-id="74760-129">使用错误对象或方法调用的结果将调用的回调。</span><span class="sxs-lookup"><span data-stu-id="74760-129">callback that will be invoked either with an Error object or the result of the method call.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod_1
  name: invokeMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="74760-130">调用下游设备上或在同一边缘设备上的另一个模块的方法。</span><span class="sxs-lookup"><span data-stu-id="74760-130">Invokes a method on a downstream device or on another module on the same Edge device.</span></span> <span data-ttu-id="74760-131">请注意，此功能仅适用时运行该模块的一部分的边缘设备。</span><span class="sxs-lookup"><span data-stu-id="74760-131">Please note that this feature only works when the module is being run as part of an Edge device.</span></span>
  syntax:
    content: 'function invokeMethod(deviceId: string, moduleId: string, methodParams: MethodParams, callback: MethodCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: ''
    - id: callback
      type:
      - azure-iot-device.MethodCallback
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.onMethod
  name: onMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="74760-132">注册一个名为方法的回调`methodName`。</span><span class="sxs-lookup"><span data-stu-id="74760-132">Registers a callback for a method named `methodName`.</span></span>
  syntax:
    content: 'function onMethod(methodName: string, callback: (request: DeviceMethodRequest, response: DeviceMethodResponse) => void)'
    parameters:
    - id: methodName
      type:
      - string
      description: <span data-ttu-id="74760-133">将处理由回调的方法名称</span><span class="sxs-lookup"><span data-stu-id="74760-133">Name of the method that will be handled by the callback</span></span>
    - id: callback
      type:
      - '(request: DeviceMethodRequest, response: DeviceMethodResponse) => void'
      description: >
        <span data-ttu-id="74760-134">每次调用该方法的方法请求时应被调用的函数`methodName`收到。</span><span class="sxs-lookup"><span data-stu-id="74760-134">Function that shall be called whenever a method request for the method called `methodName` is received.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEvent
  name: sendOutputEvent
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="74760-135">将事件发送到给定的模块输出</span><span class="sxs-lookup"><span data-stu-id="74760-135">Sends an event to the given module output</span></span>
  syntax:
    content: 'function sendOutputEvent(outputName: string, message: Message, callback: (err?: Error, result?: MessageEnqueued) => void)'
    parameters:
    - id: outputName
      type:
      - string
      description: <span data-ttu-id="74760-136">输出将发送到事件的名称</span><span class="sxs-lookup"><span data-stu-id="74760-136">Name of the output to send the event to</span></span>
    - id: message
      type:
      - Message
      description: <span data-ttu-id="74760-137">要发送到给定的输出消息</span><span class="sxs-lookup"><span data-stu-id="74760-137">Message to send to the given output</span></span>
    - id: callback
      type:
      - '(err?: Error, result?: MessageEnqueued) => void'
      description: >
        <span data-ttu-id="74760-138">该操作已排入队列时要调用的函数。</span><span class="sxs-lookup"><span data-stu-id="74760-138">Function to call when the operation has been queued.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEventBatch
  name: sendOutputEventBatch
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="74760-139">将事件的数组发送到给定的模块输出</span><span class="sxs-lookup"><span data-stu-id="74760-139">Sends an array of events to the given module output</span></span>
  syntax:
    content: 'function sendOutputEventBatch(outputName: string, messages: Message[], callback: (err?: Error, result?: MessageEnqueued) => void)'
    parameters:
    - id: outputName
      type:
      - string
      description: <span data-ttu-id="74760-140">输出将发送到事件的名称</span><span class="sxs-lookup"><span data-stu-id="74760-140">Name of the output to send the events to</span></span>
    - id: messages
      type:
      - Message[]
      description: ''
    - id: callback
      type:
      - '(err?: Error, result?: MessageEnqueued) => void'
      description: >
        <span data-ttu-id="74760-141">已排队操作时要调用的函数。</span><span class="sxs-lookup"><span data-stu-id="74760-141">Function to call when the operations have been queued.</span></span>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.setOptions
  name: setOptions
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="74760-142">将传递到选项`ModuleClient`可用于配置传输的对象。</span><span class="sxs-lookup"><span data-stu-id="74760-142">Passes options to the `ModuleClient` object that can be used to configure the transport.</span></span>
  syntax:
    content: 'function setOptions(options: DeviceClientOptions, done?: (err?: Error, result?: TransportConfigured) => void)'
    parameters:
    - id: options
      type:
      - azure-iot-device.DeviceClientOptions
      description: <span data-ttu-id="74760-143">一个<xref:DeviceClientOptions>对象。</span><span class="sxs-lookup"><span data-stu-id="74760-143">A <xref:DeviceClientOptions> object.</span></span>
    - id: done
      type:
      - '(err?: Error, result?: TransportConfigured) => void'
      description: >
        <span data-ttu-id="74760-144">要设置选项后调用的回调。</span><span class="sxs-lookup"><span data-stu-id="74760-144">The callback to call once the options have been set.</span></span>
      optional: true
  package: azure-iot-device
references:
- uid: azure-iot-device.MethodParams
  spec.typeScript:
  - name: MethodParams
    fullName: MethodParams
    uid: azure-iot-device.MethodParams
- uid: azure-iot-device.MethodCallback
  spec.typeScript:
  - name: MethodCallback
    fullName: MethodCallback
    uid: azure-iot-device.MethodCallback
- uid: azure-iot-device.DeviceClientOptions
  spec.typeScript:
  - name: DeviceClientOptions
    fullName: DeviceClientOptions
    uid: azure-iot-device.DeviceClientOptions
- uid: azure-iot-device.ModuleClient
  spec.typeScript:
  - name: ModuleClient
    fullName: ModuleClient
    uid: azure-iot-device.ModuleClient
