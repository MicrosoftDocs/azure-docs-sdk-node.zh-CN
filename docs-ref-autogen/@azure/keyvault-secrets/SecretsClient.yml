### YamlMime:UniversalReference
items:
  - uid: '@azure/keyvault-secrets.SecretsClient'
    name: SecretsClient
    fullName: SecretsClient
    children:
      - '@azure/keyvault-secrets.SecretsClient.backupSecret'
      - '@azure/keyvault-secrets.SecretsClient.deleteSecret'
      - '@azure/keyvault-secrets.SecretsClient.getDefaultPipeline'
      - '@azure/keyvault-secrets.SecretsClient.getDeletedSecret'
      - '@azure/keyvault-secrets.SecretsClient.getSecret'
      - '@azure/keyvault-secrets.SecretsClient.listDeletedSecrets'
      - '@azure/keyvault-secrets.SecretsClient.listSecrets'
      - '@azure/keyvault-secrets.SecretsClient.listSecretVersions'
      - '@azure/keyvault-secrets.SecretsClient.pipeline'
      - '@azure/keyvault-secrets.SecretsClient.purgeDeletedSecret'
      - '@azure/keyvault-secrets.SecretsClient.recoverDeletedSecret'
      - '@azure/keyvault-secrets.SecretsClient.restoreSecret'
      - '@azure/keyvault-secrets.SecretsClient.constructor'
      - '@azure/keyvault-secrets.SecretsClient.setSecret'
      - '@azure/keyvault-secrets.SecretsClient.updateSecretAttributes'
      - '@azure/keyvault-secrets.SecretsClient.vaultBaseUrl'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="9758c-101">客户端与密钥保管库机密功能进行交互</span><span class="sxs-lookup"><span data-stu-id="9758c-101">The client to interact with the KeyVault secrets functionality</span></span>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.backupSecret'
    name: 'backupSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="9758c-102">指定机密的备份将下载到客户端的请求。</span><span class="sxs-lookup"><span data-stu-id="9758c-102">Requests that a backup of the specified secret be downloaded to the client.</span></span> <span data-ttu-id="9758c-103">将下载所有版本的机密。</span><span class="sxs-lookup"><span data-stu-id="9758c-103">All versions of the secret will be downloaded.</span></span> <span data-ttu-id="9758c-104">此操作需要机密/backup 权限。</span><span class="sxs-lookup"><span data-stu-id="9758c-104">This operation requires the secrets/backup permission.</span></span>
      <span data-ttu-id="9758c-105">用法示例：</span><span class="sxs-lookup"><span data-stu-id="9758c-105">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      let backupResult = await client.backupSecret("MySecretName");
      ```
    syntax:
      content: 'function backupSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="9758c-106">机密的名称。</span><span class="sxs-lookup"><span data-stu-id="9758c-106">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Uint8Array>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.deleteSecret'
    name: 'deleteSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="9758c-107">删除操作适用于 Azure 密钥保管库中存储的任何机密。</span><span class="sxs-lookup"><span data-stu-id="9758c-107">The DELETE operation applies to any secret stored in Azure Key Vault.</span></span> <span data-ttu-id="9758c-108">删除不能应用于单独的机密的版本。</span><span class="sxs-lookup"><span data-stu-id="9758c-108">DELETE cannot be applied to an individual version of a secret.</span></span> <span data-ttu-id="9758c-109">此操作需要 secrets/delete 权限。</span><span class="sxs-lookup"><span data-stu-id="9758c-109">This operation requires the secrets/delete permission.</span></span>
      <span data-ttu-id="9758c-110">用法示例：</span><span class="sxs-lookup"><span data-stu-id="9758c-110">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.deleteSecret("MySecretName");
      ```
    syntax:
      content: 'function deleteSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="9758c-111">机密的名称。</span><span class="sxs-lookup"><span data-stu-id="9758c-111">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.DeletedSecret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.getDefaultPipeline'
    name: 'getDefaultPipeline(ServiceClientCredentials | TokenCredential, NewPipelineOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9758c-112">用于使用所提供的凭据创建一个新的管道对象的静态方法。</span><span class="sxs-lookup"><span data-stu-id="9758c-112">A static method used to create a new Pipeline object with the provided Credential.</span></span>
    syntax:
      content: 'static function getDefaultPipeline(credential: ServiceClientCredentials | TokenCredential, pipelineOptions?: NewPipelineOptions)'
      parameters:
        - id: credential
          type:
            - ServiceClientCredentials | TokenCredential
          description: ''
        - id: pipelineOptions
          type:
            - '@azure/keyvault-secrets.NewPipelineOptions'
          description: ''
          optional: true
      return:
        type:
          - ServiceClientOptions
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.getDeletedSecret'
    name: 'getDeletedSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="9758c-113">获取删除机密操作将返回指定的已删除的密钥和其属性。</span><span class="sxs-lookup"><span data-stu-id="9758c-113">The Get Deleted Secret operation returns the specified deleted secret along with its attributes.</span></span>
      <span data-ttu-id="9758c-114">此操作需要 secrets/get 权限。</span><span class="sxs-lookup"><span data-stu-id="9758c-114">This operation requires the secrets/get permission.</span></span>
      <span data-ttu-id="9758c-115">用法示例：</span><span class="sxs-lookup"><span data-stu-id="9758c-115">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.getDeletedSecret("MyDeletedSecret");
      ```
    syntax:
      content: 'function getDeletedSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="9758c-116">机密的名称。</span><span class="sxs-lookup"><span data-stu-id="9758c-116">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.DeletedSecret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.getSecret'
    name: 'getSecret(string, GetSecretOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="9758c-117">获取操作也适用于 Azure 密钥保管库中存储的任何机密。</span><span class="sxs-lookup"><span data-stu-id="9758c-117">The GET operation is applicable to any secret stored in Azure Key Vault.</span></span> <span data-ttu-id="9758c-118">此操作需要 secrets/get 权限。</span><span class="sxs-lookup"><span data-stu-id="9758c-118">This operation requires the secrets/get permission.</span></span>
      <span data-ttu-id="9758c-119">用法示例：</span><span class="sxs-lookup"><span data-stu-id="9758c-119">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      let secret = await client.getSecret("MySecretName");
      ```
    syntax:
      content: 'function getSecret(secretName: string, options?: GetSecretOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="9758c-120">机密的名称。</span><span class="sxs-lookup"><span data-stu-id="9758c-120">The name of the secret.</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.listDeletedSecrets'
    name: listDeletedSecrets(GetSecretsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="9758c-121">循环访问保管库中已删除的机密。</span><span class="sxs-lookup"><span data-stu-id="9758c-121">Iterates the deleted secrets in the vault.</span></span>  <span data-ttu-id="9758c-122">在响应中提供了完整的机密标识符和属性。</span><span class="sxs-lookup"><span data-stu-id="9758c-122">The full secret identifier and attributes are provided in the response.</span></span> <span data-ttu-id="9758c-123">机密不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="9758c-123">No values are returned for the secrets.</span></span> <span data-ttu-id="9758c-124">此操作需要 secrets/list 权限。</span><span class="sxs-lookup"><span data-stu-id="9758c-124">This operations requires the secrets/list permission.</span></span>
      <span data-ttu-id="9758c-125">用法示例：</span><span class="sxs-lookup"><span data-stu-id="9758c-125">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      for await (const secretAttr of client.listDeletedSecrets()) {
        const deletedSecret = await client.getSecret(secretAttr.name);
        console.log("deleted secret: ", deletedSecret);
      }
      ```
    syntax:
      content: 'function listDeletedSecrets(options?: GetSecretsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretsOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.listSecrets'
    name: listSecrets(GetSecretsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="9758c-126">循环访问所有密钥保管库中的最新版本。</span><span class="sxs-lookup"><span data-stu-id="9758c-126">Iterates the latest version of all secrets in the vault.</span></span>  <span data-ttu-id="9758c-127">在响应中提供了完整的机密标识符和属性。</span><span class="sxs-lookup"><span data-stu-id="9758c-127">The full secret identifier and attributes are provided in the response.</span></span> <span data-ttu-id="9758c-128">机密不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="9758c-128">No values are returned for the secrets.</span></span> <span data-ttu-id="9758c-129">此操作需要 secrets/list 权限。</span><span class="sxs-lookup"><span data-stu-id="9758c-129">This operations requires the secrets/list permission.</span></span>
      <span data-ttu-id="9758c-130">用法示例：</span><span class="sxs-lookup"><span data-stu-id="9758c-130">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      for await (const secretAttr of client.listSecrets()) {
        const secret = await client.getSecret(secretAttr.name);
        console.log("secret: ", secret);
      }
      ```
    syntax:
      content: 'function listSecrets(options?: GetSecretsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretsOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.listSecretVersions'
    name: 'listSecretVersions(string, GetSecretsOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="9758c-131">循环访问所有版本的保管库中的给定机密。</span><span class="sxs-lookup"><span data-stu-id="9758c-131">Iterates all versions of the given secret in the vault.</span></span> <span data-ttu-id="9758c-132">在响应中提供了完整的机密标识符和属性。</span><span class="sxs-lookup"><span data-stu-id="9758c-132">The full secret identifier and attributes are provided in the response.</span></span> <span data-ttu-id="9758c-133">机密不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="9758c-133">No values are returned for the secrets.</span></span> <span data-ttu-id="9758c-134">此操作需要 secrets/list 权限。</span><span class="sxs-lookup"><span data-stu-id="9758c-134">This operations requires the secrets/list permission.</span></span>
      <span data-ttu-id="9758c-135">用法示例：</span><span class="sxs-lookup"><span data-stu-id="9758c-135">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      for await (const secretAttr of client.listSecretVersions("MySecretName")) {
        const secret = await client.getSecret(secretAttr.name);
        console.log("secret version: ", secret);
      }
      ```
    syntax:
      content: 'function listSecretVersions(secretName: string, options?: GetSecretsOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="9758c-136">若要提取的版本的机密的名称</span><span class="sxs-lookup"><span data-stu-id="9758c-136">Name of the secret to fetch versions for</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretsOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.pipeline'
    name: pipeline
    fullName: pipeline
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="9758c-137">要创建与服务连接的选项</span><span class="sxs-lookup"><span data-stu-id="9758c-137">The options to create the connection to the service</span></span>
    syntax:
      content: 'pipeline: ServiceClientOptions'
      return:
        type:
          - ServiceClientOptions
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.purgeDeletedSecret'
    name: 'purgeDeletedSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="9758c-138">清除已删除机密操作而无需恢复的可能性将永久删除机密。</span><span class="sxs-lookup"><span data-stu-id="9758c-138">The purge deleted secret operation removes the secret permanently, without the possibility of recovery.</span></span> <span data-ttu-id="9758c-139">此操作仅启用了软删除启用了保管库上。</span><span class="sxs-lookup"><span data-stu-id="9758c-139">This operation can only be enabled on a soft-delete enabled vault.</span></span> <span data-ttu-id="9758c-140">此操作需要机密/清除权限。</span><span class="sxs-lookup"><span data-stu-id="9758c-140">This operation requires the secrets/purge permission.</span></span>
      <span data-ttu-id="9758c-141">用法示例：</span><span class="sxs-lookup"><span data-stu-id="9758c-141">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.deleteSecret("MySecretName");
      await client.purgeDeletedSecret("MySecretName");
      ```
    syntax:
      content: 'function purgeDeletedSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="9758c-142">机密的名称。</span><span class="sxs-lookup"><span data-stu-id="9758c-142">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.recoverDeletedSecret'
    name: 'recoverDeletedSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="9758c-143">恢复到指定保管库中的已删除的机密。</span><span class="sxs-lookup"><span data-stu-id="9758c-143">Recovers the deleted secret in the specified vault.</span></span> <span data-ttu-id="9758c-144">仅在软删除启用了保管库上执行此操作。</span><span class="sxs-lookup"><span data-stu-id="9758c-144">This operation can only be performed on a soft-delete enabled vault.</span></span> <span data-ttu-id="9758c-145">此操作需要机密/恢复权限。</span><span class="sxs-lookup"><span data-stu-id="9758c-145">This operation requires the secrets/recover permission.</span></span>
      <span data-ttu-id="9758c-146">用法示例：</span><span class="sxs-lookup"><span data-stu-id="9758c-146">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.deleteSecret("MySecretName");
      await client.recoverDeletedSecret("MySecretName");
      ```
    syntax:
      content: 'function recoverDeletedSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="9758c-147">已删除的机密的名称。</span><span class="sxs-lookup"><span data-stu-id="9758c-147">The name of the deleted secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.restoreSecret'
    name: 'restoreSecret(Uint8Array, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="9758c-148">将备份的密钥和所有版本，还原到一个保管库。</span><span class="sxs-lookup"><span data-stu-id="9758c-148">Restores a backed up secret, and all its versions, to a vault.</span></span> <span data-ttu-id="9758c-149">此操作需要机密/restore 权限。</span><span class="sxs-lookup"><span data-stu-id="9758c-149">This operation requires the secrets/restore permission.</span></span>
      <span data-ttu-id="9758c-150">用法示例：</span><span class="sxs-lookup"><span data-stu-id="9758c-150">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      let mySecretBundle = await client.backupSecret("MySecretName");
      // ...
      await client.restoreSecret(mySecretBundle);
      ```
    syntax:
      content: 'function restoreSecret(secretBundleBackup: Uint8Array, options?: RequestOptionsBase)'
      parameters:
        - id: secretBundleBackup
          type:
            - Uint8Array
          description: <span data-ttu-id="9758c-151">与机密的捆绑包关联的备份 blob。</span><span class="sxs-lookup"><span data-stu-id="9758c-151">The backup blob associated with a secret bundle.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.constructor'
    name: 'SecretsClient(string, ServiceClientCredentials | TokenCredential, ServiceClientOptions | NewPipelineOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="9758c-152">创建 SecretsClient 的实例。</span><span class="sxs-lookup"><span data-stu-id="9758c-152">Creates an instance of SecretsClient.</span></span>
      <span data-ttu-id="9758c-153">用法示例：</span><span class="sxs-lookup"><span data-stu-id="9758c-153">Example usage:</span></span>
      ```ts
      import { SecretsClient } from "@azure/keyvault-secrets";
      import { EnvironmentCredential } from "@azure/identity";

      let url = `https://<MY KEYVAULT HERE>.vault.azure.net`;
      let credentials = new EnvironmentCredential();

      let client = new SecretsClient(url, credentials);
      ```
    syntax:
      content: 'new SecretsClient(url: string, credential: ServiceClientCredentials | TokenCredential, pipelineOrOptions?: ServiceClientOptions | NewPipelineOptions)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="9758c-154">指向密钥保管库的基 url。</span><span class="sxs-lookup"><span data-stu-id="9758c-154">the base url to the key vault.</span></span>
        - id: credential
          type:
            - ServiceClientCredentials | TokenCredential
          description: ''
        - id: pipelineOrOptions
          type:
            - ServiceClientOptions | @azure/keyvault-secrets.NewPipelineOptions
          description: ''
          optional: true
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.setSecret'
    name: 'setSecret(string, string, SetSecretOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="9758c-155">设置操作将机密添加到 Azure 密钥保管库。</span><span class="sxs-lookup"><span data-stu-id="9758c-155">The SET operation adds a secret to the Azure Key Vault.</span></span> <span data-ttu-id="9758c-156">如果命名的机密已存在，Azure 密钥保管库将创建该机密的新版本。</span><span class="sxs-lookup"><span data-stu-id="9758c-156">If the named secret already exists, Azure Key Vault creates a new version of that secret.</span></span> <span data-ttu-id="9758c-157">此操作需要 secrets/set 权限。</span><span class="sxs-lookup"><span data-stu-id="9758c-157">This operation requires the secrets/set permission.</span></span>
      <span data-ttu-id="9758c-158">用法示例：</span><span class="sxs-lookup"><span data-stu-id="9758c-158">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.setSecret("MySecretName", "ABC123");
      ```
    syntax:
      content: 'function setSecret(secretName: string, value: string, options?: SetSecretOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="9758c-159">机密的名称。</span><span class="sxs-lookup"><span data-stu-id="9758c-159">The name of the secret.</span></span>
        - id: value
          type:
            - string
          description: <span data-ttu-id="9758c-160">机密的值。</span><span class="sxs-lookup"><span data-stu-id="9758c-160">The value of the secret.</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.SetSecretOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.updateSecretAttributes'
    name: 'updateSecretAttributes(string, string, UpdateSecretOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="9758c-161">更新操作会更改现有存储机密的指定的属性。</span><span class="sxs-lookup"><span data-stu-id="9758c-161">The UPDATE operation changes specified attributes of an existing stored secret.</span></span> <span data-ttu-id="9758c-162">未在请求中指定的属性保持不变。</span><span class="sxs-lookup"><span data-stu-id="9758c-162">Attributes that are not specified in the request are left unchanged.</span></span> <span data-ttu-id="9758c-163">不能更改机密本身的值。</span><span class="sxs-lookup"><span data-stu-id="9758c-163">The value of a secret itself cannot be changed.</span></span> <span data-ttu-id="9758c-164">此操作需要 secrets/set 权限。</span><span class="sxs-lookup"><span data-stu-id="9758c-164">This operation requires the secrets/set permission.</span></span>
      <span data-ttu-id="9758c-165">用法示例：</span><span class="sxs-lookup"><span data-stu-id="9758c-165">Example usage:</span></span>
      ```ts
      let secretName = "MySecretName";
      let client = new SecretsClient(url, credentials);
      let secret = await client.getSecret(secretName);
      await client.updateSecret(secretName, secret.version, { enabled: false });
      ```
    syntax:
      content: 'function updateSecretAttributes(secretName: string, secretVersion: string, options?: UpdateSecretOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="9758c-166">机密的名称。</span><span class="sxs-lookup"><span data-stu-id="9758c-166">The name of the secret.</span></span>
        - id: secretVersion
          type:
            - string
          description: <span data-ttu-id="9758c-167">机密的版本。</span><span class="sxs-lookup"><span data-stu-id="9758c-167">The version of the secret.</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.UpdateSecretOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.vaultBaseUrl'
    name: vaultBaseUrl
    fullName: vaultBaseUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="9758c-168">指向在保管库的基 URL</span><span class="sxs-lookup"><span data-stu-id="9758c-168">The base URL to the vault</span></span>
    syntax:
      content: 'vaultBaseUrl: string'
      return:
        type:
          - string
    package: '@azure/keyvault-secrets'
references:
  - uid: ServiceClientOptions | @azure/keyvault-secrets.NewPipelineOptions
    name: NewPipelineOptions
    spec.typeScript:
      - name: 'ServiceClientOptions | '
        fullName: 'ServiceClientOptions | '
      - name: NewPipelineOptions
        fullName: NewPipelineOptions
        uid: '@azure/keyvault-secrets.NewPipelineOptions'
  - uid: Promise<@azure/keyvault-secrets.DeletedSecret>
    name: DeletedSecret>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedSecret
        fullName: DeletedSecret
        uid: '@azure/keyvault-secrets.DeletedSecret'
      - name: '>'
        fullName: '>'
  - uid: '@azure/keyvault-secrets.GetSecretOptions'
    name: GetSecretOptions
    spec.typeScript:
      - name: GetSecretOptions
        fullName: GetSecretOptions
        uid: '@azure/keyvault-secrets.GetSecretOptions'
  - uid: Promise<@azure/keyvault-secrets.Secret>
    name: Secret>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Secret
        fullName: Secret
        uid: '@azure/keyvault-secrets.Secret'
      - name: '>'
        fullName: '>'
  - uid: '@azure/keyvault-secrets.GetSecretsOptions'
    name: GetSecretsOptions
    spec.typeScript:
      - name: GetSecretsOptions
        fullName: GetSecretsOptions
        uid: '@azure/keyvault-secrets.GetSecretsOptions'
  - uid: 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    name: 'SecretAttributes[]>'
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: SecretAttributes
        fullName: SecretAttributes
        uid: '@azure/keyvault-secrets.SecretAttributes'
      - name: ', '
        fullName: ', '
      - name: SecretAttributes
        fullName: SecretAttributes
        uid: '@azure/keyvault-secrets.SecretAttributes'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/keyvault-secrets.SetSecretOptions'
    name: SetSecretOptions
    spec.typeScript:
      - name: SetSecretOptions
        fullName: SetSecretOptions
        uid: '@azure/keyvault-secrets.SetSecretOptions'
  - uid: '@azure/keyvault-secrets.UpdateSecretOptions'
    name: UpdateSecretOptions
    spec.typeScript:
      - name: UpdateSecretOptions
        fullName: UpdateSecretOptions
        uid: '@azure/keyvault-secrets.UpdateSecretOptions'
  - uid: '@azure/keyvault-secrets.NewPipelineOptions'
    name: NewPipelineOptions
    spec.typeScript:
      - name: NewPipelineOptions
        fullName: NewPipelineOptions
        uid: '@azure/keyvault-secrets.NewPipelineOptions'