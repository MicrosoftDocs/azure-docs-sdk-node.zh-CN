### YamlMime:UniversalReference
ms.openlocfilehash: f7bb0a77329788feb31835819b61ccba9c59535e
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 12/13/2018
ms.locfileid: "52026122"
items:
- uid: azure-cognitiveservices-computervision.ComputerVisionClient
  name: ComputerVisionClient
  fullName: ComputerVisionClient
  children:
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.constructor
  - azure-cognitiveservices-computervision.ComputerVisionClient.credentials
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.endpoint
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResultWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModels
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModels_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModels_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModelsWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageWithHttpOperationResponse
  langs:
  - typeScript
  type: class
  summary: ''
  extends:
    name: ServiceClient
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage
  name: analyzeImage(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作将提取一组丰富的基于图像内容的视觉特征。 支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。  在你的请求，是一个可选参数，以便您可以选择要返回的特征。  默认情况下，在响应中返回映像类别。
  syntax:
    content: 'function analyzeImage(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        可公开访问的图像的 URL
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2
  name: analyzeImage(string, Object, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作将提取一组丰富的基于图像内容的视觉特征。 支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。  在你的请求，是一个可选参数，以便您可以选择要返回的特征。  默认情况下，在响应中返回映像类别。
  syntax:
    content: 'function analyzeImage(url: string, options: Object, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1
  name: analyzeImage(string, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作将提取一组丰富的基于图像内容的视觉特征。 支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。  在你的请求，是一个可选参数，以便您可以选择要返回的特征。  默认情况下，在响应中返回映像类别。
  syntax:
    content: 'function analyzeImage(url: string, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain
  name: analyzeImageByDomain(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    此操作通过应用特定于域的模型来识别图像中的内容。  可以使用 /models GET 请求检索到的计算机视觉 API 支持的特定于域的模型的列表。  目前，该 API 只提供了单一的特定于域的模型： 名人。 支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。 成功响应将以 JSON 格式返回。

    如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        要识别的特定于域的内容。
    - id: url
      type:
      - string
      description: >
        可公开访问的图像的 URL
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2
  name: analyzeImageByDomain(string, string, Object, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    此操作通过应用特定于域的模型来识别图像中的内容。  可以使用 /models GET 请求检索到的计算机视觉 API 支持的特定于域的模型的列表。  目前，该 API 只提供了单一的特定于域的模型： 名人。 支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。 成功响应将以 JSON 格式返回。

    如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options: Object, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1
  name: analyzeImageByDomain(string, string, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    此操作通过应用特定于域的模型来识别图像中的内容。  可以使用 /models GET 请求检索到的计算机视觉 API 支持的特定于域的模型的列表。  目前，该 API 只提供了单一的特定于域的模型： 名人。 支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。 成功响应将以 JSON 格式返回。

    如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream
  name: analyzeImageByDomainInStream(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    此操作通过应用特定于域的模型来识别图像中的内容。  可以使用 /models GET 请求检索到的计算机视觉 API 支持的特定于域的模型的列表。  目前，该 API 只提供了单一的特定于域的模型： 名人。 支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。 成功响应将以 JSON 格式返回。

    如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        要识别的特定于域的内容。
    - id: image
      type:
      - stream.Readable
      description: >
        图像流。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2
  name: analyzeImageByDomainInStream(string, stream.Readable, Object, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    此操作通过应用特定于域的模型来识别图像中的内容。  可以使用 /models GET 请求检索到的计算机视觉 API 支持的特定于域的模型的列表。  目前，该 API 只提供了单一的特定于域的模型： 名人。 支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。 成功响应将以 JSON 格式返回。

    如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options: Object, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1
  name: analyzeImageByDomainInStream(string, stream.Readable, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    此操作通过应用特定于域的模型来识别图像中的内容。  可以使用 /models GET 请求检索到的计算机视觉 API 支持的特定于域的模型的列表。  目前，该 API 只提供了单一的特定于域的模型： 名人。 支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。 成功响应将以 JSON 格式返回。

    如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  name: analyzeImageByDomainInStreamWithHttpOperationResponse(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    此操作通过应用特定于域的模型来识别图像中的内容。  可以使用 /models GET 请求检索到的计算机视觉 API 支持的特定于域的模型的列表。  目前，该 API 只提供了单一的特定于域的模型： 名人。 支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。 成功响应将以 JSON 格式返回。

    如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
  syntax:
    content: 'function analyzeImageByDomainInStreamWithHttpOperationResponse(model: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        要识别的特定于域的内容。
    - id: image
      type:
      - stream.Readable
      description: >
        图像流。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainWithHttpOperationResponse
  name: analyzeImageByDomainWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    此操作通过应用特定于域的模型来识别图像中的内容。  可以使用 /models GET 请求检索到的计算机视觉 API 支持的特定于域的模型的列表。  目前，该 API 只提供了单一的特定于域的模型： 名人。 支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。 成功响应将以 JSON 格式返回。

    如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
  syntax:
    content: 'function analyzeImageByDomainWithHttpOperationResponse(model: string, url: string, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        要识别的特定于域的内容。
    - id: url
      type:
      - string
      description: >
        可公开访问的图像的 URL
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream
  name: analyzeImageInStream(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作将提取一组丰富的基于图像内容的视觉特征。
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        图像流。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2
  name: analyzeImageInStream(stream.Readable, Object, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作将提取一组丰富的基于图像内容的视觉特征。
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1
  name: analyzeImageInStream(stream.Readable, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作将提取一组丰富的基于图像内容的视觉特征。
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStreamWithHttpOperationResponse
  name: analyzeImageInStreamWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作将提取一组丰富的基于图像内容的视觉特征。
  syntax:
    content: 'function analyzeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        图像流。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageWithHttpOperationResponse
  name: analyzeImageWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作将提取一组丰富的基于图像内容的视觉特征。 支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。  在你的请求，是一个可选参数，以便您可以选择要返回的特征。  默认情况下，在响应中返回映像类别。
  syntax:
    content: 'function analyzeImageWithHttpOperationResponse(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        可公开访问的图像的 URL
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.constructor
  name: ComputerVisionClient(ServiceClientCredentials, string, ServiceClientOptions)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new ComputerVisionClient(credentials: ServiceClientCredentials, endpoint: string, options?: ServiceClientOptions)'
    parameters:
    - id: credentials
      type:
      - ServiceClientCredentials
      description: >
        唯一地标识客户端订阅的订阅凭据。
    - id: endpoint
      type:
      - string
      description: >
        受支持的认知服务终结点
    - id: options
      type:
      - ServiceClientOptions
      description: ''
      optional: true
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.credentials
  name: credentials
  fullName: credentials
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'credentials: ServiceClientCredentials'
    return:
      type:
      - ServiceClientCredentials
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage
  name: describeImage(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作中使用完整的句子的人类可读语言生成的图像的说明。  描述基于内容的标记，也会返回由该操作的集合。 可以为每个映像生成多个说明。  按其置信度得分排序说明。 所有说明都是英文。 支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。成功的响应将以 json 格式返回。  如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
  syntax:
    content: 'function describeImage(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        可公开访问的图像的 URL
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_2
  name: describeImage(string, Object, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作中使用完整的句子的人类可读语言生成的图像的说明。  描述基于内容的标记，也会返回由该操作的集合。 可以为每个映像生成多个说明。  按其置信度得分排序说明。 所有说明都是英文。 支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。成功的响应将以 json 格式返回。  如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
  syntax:
    content: 'function describeImage(url: string, options: Object, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_1
  name: describeImage(string, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作中使用完整的句子的人类可读语言生成的图像的说明。  描述基于内容的标记，也会返回由该操作的集合。 可以为每个映像生成多个说明。  按其置信度得分排序说明。 所有说明都是英文。 支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。成功的响应将以 json 格式返回。  如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
  syntax:
    content: 'function describeImage(url: string, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream
  name: describeImageInStream(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作中使用完整的句子的人类可读语言生成的图像的说明。  描述基于内容的标记，也会返回由该操作的集合。 可以为每个映像生成多个说明。  按其置信度得分排序说明。 所有说明都是英文。 支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。成功的响应将以 json 格式返回。  如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        图像流。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2
  name: describeImageInStream(stream.Readable, Object, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作中使用完整的句子的人类可读语言生成的图像的说明。  描述基于内容的标记，也会返回由该操作的集合。 可以为每个映像生成多个说明。  按其置信度得分排序说明。 所有说明都是英文。 支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。成功的响应将以 json 格式返回。  如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1
  name: describeImageInStream(stream.Readable, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作中使用完整的句子的人类可读语言生成的图像的说明。  描述基于内容的标记，也会返回由该操作的集合。 可以为每个映像生成多个说明。  按其置信度得分排序说明。 所有说明都是英文。 支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。成功的响应将以 json 格式返回。  如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStreamWithHttpOperationResponse
  name: describeImageInStreamWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作中使用完整的句子的人类可读语言生成的图像的说明。  描述基于内容的标记，也会返回由该操作的集合。 可以为每个映像生成多个说明。  按其置信度得分排序说明。 所有说明都是英文。 支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。成功的响应将以 json 格式返回。  如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
  syntax:
    content: 'function describeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        图像流。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageWithHttpOperationResponse
  name: describeImageWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作中使用完整的句子的人类可读语言生成的图像的说明。  描述基于内容的标记，也会返回由该操作的集合。 可以为每个映像生成多个说明。  按其置信度得分排序说明。 所有说明都是英文。 支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。成功的响应将以 json 格式返回。  如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
  syntax:
    content: 'function describeImageWithHttpOperationResponse(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        可公开访问的图像的 URL
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.endpoint
  name: endpoint
  fullName: endpoint
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'endpoint: string'
    return:
      type:
      - string
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail
  name: generateThumbnail(number, number, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    此操作将生成缩略图使用用户指定的宽度和高度。 默认情况下，服务会分析图像，标识的兴趣区域 (ROI)，并生成基于投资回报率的智能裁剪坐标。

    指定不同于输入图像纵横比时，可帮助智能裁剪。 成功的响应包含缩略图二进制文件。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        缩略图的宽度。 它必须介于 1 到 1024年之间。

        推荐的最小为 50。
    - id: height
      type:
      - number
      description: >
        缩略图的高度。 该值必须介于 1 和

        1024. 推荐的最小为 50。
    - id: url
      type:
      - string
      description: >
        可公开访问的图像的 URL
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2
  name: generateThumbnail(number, number, string, Object, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    此操作将生成缩略图使用用户指定的宽度和高度。 默认情况下，服务会分析图像，标识的兴趣区域 (ROI)，并生成基于投资回报率的智能裁剪坐标。

    指定不同于输入图像纵横比时，可帮助智能裁剪。 成功的响应包含缩略图二进制文件。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options: Object, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1
  name: generateThumbnail(number, number, string, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    此操作将生成缩略图使用用户指定的宽度和高度。 默认情况下，服务会分析图像，标识的兴趣区域 (ROI)，并生成基于投资回报率的智能裁剪坐标。

    指定不同于输入图像纵横比时，可帮助智能裁剪。 成功的响应包含缩略图二进制文件。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream
  name: generateThumbnailInStream(number, number, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    此操作将生成缩略图使用用户指定的宽度和高度。 默认情况下，服务会分析图像，标识的兴趣区域 (ROI)，并生成基于投资回报率的智能裁剪坐标。

    指定不同于输入图像纵横比时，可帮助智能裁剪。 成功的响应包含缩略图二进制文件。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        缩略图的宽度。 它必须介于 1 到 1024年之间。

        推荐的最小为 50。
    - id: height
      type:
      - number
      description: >
        缩略图的高度。 该值必须介于 1 和

        1024. 推荐的最小为 50。
    - id: image
      type:
      - stream.Readable
      description: >
        图像流。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2
  name: generateThumbnailInStream(number, number, stream.Readable, Object, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    此操作将生成缩略图使用用户指定的宽度和高度。 默认情况下，服务会分析图像，标识的兴趣区域 (ROI)，并生成基于投资回报率的智能裁剪坐标。

    指定不同于输入图像纵横比时，可帮助智能裁剪。 成功的响应包含缩略图二进制文件。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options: Object, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1
  name: generateThumbnailInStream(number, number, stream.Readable, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    此操作将生成缩略图使用用户指定的宽度和高度。 默认情况下，服务会分析图像，标识的兴趣区域 (ROI)，并生成基于投资回报率的智能裁剪坐标。

    指定不同于输入图像纵横比时，可帮助智能裁剪。 成功的响应包含缩略图二进制文件。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStreamWithHttpOperationResponse
  name: generateThumbnailInStreamWithHttpOperationResponse(number, number, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    此操作将生成缩略图使用用户指定的宽度和高度。 默认情况下，服务会分析图像，标识的兴趣区域 (ROI)，并生成基于投资回报率的智能裁剪坐标。

    指定不同于输入图像纵横比时，可帮助智能裁剪。 成功的响应包含缩略图二进制文件。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
  syntax:
    content: 'function generateThumbnailInStreamWithHttpOperationResponse(width: number, height: number, image: stream.Readable, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        缩略图的宽度。 它必须介于 1 到 1024年之间。

        推荐的最小为 50。
    - id: height
      type:
      - number
      description: >
        缩略图的高度。 该值必须介于 1 和

        1024. 推荐的最小为 50。
    - id: image
      type:
      - stream.Readable
      description: >
        图像流。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailWithHttpOperationResponse
  name: generateThumbnailWithHttpOperationResponse(number, number, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    此操作将生成缩略图使用用户指定的宽度和高度。 默认情况下，服务会分析图像，标识的兴趣区域 (ROI)，并生成基于投资回报率的智能裁剪坐标。

    指定不同于输入图像纵横比时，可帮助智能裁剪。 成功的响应包含缩略图二进制文件。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
  syntax:
    content: 'function generateThumbnailWithHttpOperationResponse(width: number, height: number, url: string, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        缩略图的宽度。 它必须介于 1 到 1024年之间。

        推荐的最小为 50。
    - id: height
      type:
      - number
      description: >
        缩略图的高度。 该值必须介于 1 和

        1024. 推荐的最小为 50。
    - id: url
      type:
      - string
      description: >
        可公开访问的图像的 URL
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult
  name: getTextOperationResult(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此接口用于获取文本操作结果。 此接口的 URL 应检索从识别文本接口返回的操作位置字段中。
  syntax:
    content: 'function getTextOperationResult(operationId: string, options?: Object)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        识别文本在响应中返回的文本操作 id
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2
  name: getTextOperationResult(string, Object, ServiceCallback<TextOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此接口用于获取文本操作结果。 此接口的 URL 应检索从识别文本接口返回的操作位置字段中。
  syntax:
    content: 'function getTextOperationResult(operationId: string, options: Object, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1
  name: getTextOperationResult(string, ServiceCallback<TextOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此接口用于获取文本操作结果。 此接口的 URL 应检索从识别文本接口返回的操作位置字段中。
  syntax:
    content: 'function getTextOperationResult(operationId: string, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResultWithHttpOperationResponse
  name: getTextOperationResultWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此接口用于获取文本操作结果。 此接口的 URL 应检索从识别文本接口返回的操作位置字段中。
  syntax:
    content: 'function getTextOperationResultWithHttpOperationResponse(operationId: string, options?: Object)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        识别文本在响应中返回的文本操作 id
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels
  name: listModels(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作将返回的计算机视觉 API 支持的特定于域的模型的列表。  目前，API 仅支持一个特定于域的模型： 名人识别器。 成功响应将以 JSON 格式返回。  如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
  syntax:
    content: 'function listModels(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels_2
  name: listModels(Object, ServiceCallback<ListModelsResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作将返回的计算机视觉 API 支持的特定于域的模型的列表。  目前，API 仅支持一个特定于域的模型： 名人识别器。 成功响应将以 JSON 格式返回。  如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
  syntax:
    content: 'function listModels(options: Object, callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels_1
  name: listModels(ServiceCallback<ListModelsResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作将返回的计算机视觉 API 支持的特定于域的模型的列表。  目前，API 仅支持一个特定于域的模型： 名人识别器。 成功响应将以 JSON 格式返回。  如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
  syntax:
    content: 'function listModels(callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModelsWithHttpOperationResponse
  name: listModelsWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作将返回的计算机视觉 API 支持的特定于域的模型的列表。  目前，API 仅支持一个特定于域的模型： 名人识别器。 成功响应将以 JSON 格式返回。  如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
  syntax:
    content: 'function listModelsWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText
  name: recognizePrintedText(boolean, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    光学字符识别 (OCR) 检测图像中的印刷体的文本，并将所识别的字符提取到机器可用的字符流。

    成功后，将返回的 OCR 结果。 如果失败，将返回一条错误消息以及错误代码。 错误代码可以是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage 或 InternalServerError 之一。
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        是否在图像中检测文本方向。 DetectOrientation = true OCR 服务尝试以检测图像方向并更正它进一步处理前 (例如如果颠倒的)。
    - id: url
      type:
      - string
      description: >
        可公开访问的图像的 URL
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2
  name: recognizePrintedText(boolean, string, Object, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    光学字符识别 (OCR) 检测图像中的印刷体的文本，并将所识别的字符提取到机器可用的字符流。

    成功后，将返回的 OCR 结果。 如果失败，将返回一条错误消息以及错误代码。 错误代码可以是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage 或 InternalServerError 之一。
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options: Object, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1
  name: recognizePrintedText(boolean, string, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    光学字符识别 (OCR) 检测图像中的印刷体的文本，并将所识别的字符提取到机器可用的字符流。

    成功后，将返回的 OCR 结果。 如果失败，将返回一条错误消息以及错误代码。 错误代码可以是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage 或 InternalServerError 之一。
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream
  name: recognizePrintedTextInStream(boolean, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    光学字符识别 (OCR) 检测图像中的印刷体的文本，并将所识别的字符提取到机器可用的字符流。

    成功后，将返回的 OCR 结果。 如果失败，将返回一条错误消息以及错误代码。 错误代码可以是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage 或 InternalServerError 之一。
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        是否在图像中检测文本方向。 DetectOrientation = true OCR 服务尝试以检测图像方向并更正它进一步处理前 (例如如果颠倒的)。
    - id: image
      type:
      - stream.Readable
      description: >
        图像流。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2
  name: recognizePrintedTextInStream(boolean, stream.Readable, Object, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    光学字符识别 (OCR) 检测图像中的印刷体的文本，并将所识别的字符提取到机器可用的字符流。

    成功后，将返回的 OCR 结果。 如果失败，将返回一条错误消息以及错误代码。 错误代码可以是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage 或 InternalServerError 之一。
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options: Object, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1
  name: recognizePrintedTextInStream(boolean, stream.Readable, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    光学字符识别 (OCR) 检测图像中的印刷体的文本，并将所识别的字符提取到机器可用的字符流。

    成功后，将返回的 OCR 结果。 如果失败，将返回一条错误消息以及错误代码。 错误代码可以是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage 或 InternalServerError 之一。
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStreamWithHttpOperationResponse
  name: recognizePrintedTextInStreamWithHttpOperationResponse(boolean, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    光学字符识别 (OCR) 检测图像中的印刷体的文本，并将所识别的字符提取到机器可用的字符流。

    成功后，将返回的 OCR 结果。 如果失败，将返回一条错误消息以及错误代码。 错误代码可以是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage 或 InternalServerError 之一。
  syntax:
    content: 'function recognizePrintedTextInStreamWithHttpOperationResponse(detectOrientation: boolean, image: stream.Readable, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        是否在图像中检测文本方向。 DetectOrientation = true OCR 服务尝试以检测图像方向并更正它进一步处理前 (例如如果颠倒的)。
    - id: image
      type:
      - stream.Readable
      description: >
        图像流。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextWithHttpOperationResponse
  name: recognizePrintedTextWithHttpOperationResponse(boolean, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    光学字符识别 (OCR) 检测图像中的印刷体的文本，并将所识别的字符提取到机器可用的字符流。

    成功后，将返回的 OCR 结果。 如果失败，将返回一条错误消息以及错误代码。 错误代码可以是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage 或 InternalServerError 之一。
  syntax:
    content: 'function recognizePrintedTextWithHttpOperationResponse(detectOrientation: boolean, url: string, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        是否在图像中检测文本方向。 DetectOrientation = true OCR 服务尝试以检测图像方向并更正它进一步处理前 (例如如果颠倒的)。
    - id: url
      type:
      - string
      description: >
        可公开访问的图像的 URL
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText
  name: recognizeText(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 识别文本操作。 当使用识别文本接口时，响应将包含一个名为操作位置字段。 操作位置字段包含必须用于您获取识别的文本操作结果的操作的 URL。
  syntax:
    content: 'function recognizeText(url: string, mode: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        可公开访问的图像的 URL
    - id: mode
      type:
      - string
      description: >
        要识别的文本的类型。 可能的值包括：手写，打印
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_2
  name: recognizeText(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 识别文本操作。 当使用识别文本接口时，响应将包含一个名为操作位置字段。 操作位置字段包含必须用于您获取识别的文本操作结果的操作的 URL。
  syntax:
    content: 'function recognizeText(url: string, mode: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_1
  name: recognizeText(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 识别文本操作。 当使用识别文本接口时，响应将包含一个名为操作位置字段。 操作位置字段包含必须用于您获取识别的文本操作结果的操作的 URL。
  syntax:
    content: 'function recognizeText(url: string, mode: string, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream
  name: recognizeTextInStream(stream.Readable, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 识别文本操作。 当使用识别文本接口时，响应将包含一个名为操作位置字段。 操作位置字段包含必须用于您获取识别的文本操作结果的操作的 URL。
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, mode: string, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        图像流。
    - id: mode
      type:
      - string
      description: >
        要识别的文本的类型。 可能的值包括：手写，打印
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2
  name: recognizeTextInStream(stream.Readable, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 识别文本操作。 当使用识别文本接口时，响应将包含一个名为操作位置字段。 操作位置字段包含必须用于您获取识别的文本操作结果的操作的 URL。
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, mode: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1
  name: recognizeTextInStream(stream.Readable, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 识别文本操作。 当使用识别文本接口时，响应将包含一个名为操作位置字段。 操作位置字段包含必须用于您获取识别的文本操作结果的操作的 URL。
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, mode: string, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStreamWithHttpOperationResponse
  name: recognizeTextInStreamWithHttpOperationResponse(stream.Readable, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 识别文本操作。 当使用识别文本接口时，响应将包含一个名为操作位置字段。 操作位置字段包含必须用于您获取识别的文本操作结果的操作的 URL。
  syntax:
    content: 'function recognizeTextInStreamWithHttpOperationResponse(image: stream.Readable, mode: string, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        图像流。
    - id: mode
      type:
      - string
      description: >
        要识别的文本的类型。 可能的值包括：手写，打印
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextWithHttpOperationResponse
  name: recognizeTextWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 识别文本操作。 当使用识别文本接口时，响应将包含一个名为操作位置字段。 操作位置字段包含必须用于您获取识别的文本操作结果的操作的 URL。
  syntax:
    content: 'function recognizeTextWithHttpOperationResponse(url: string, mode: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        可公开访问的图像的 URL
    - id: mode
      type:
      - string
      description: >
        要识别的文本的类型。 可能的值包括：手写，打印
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage
  name: tagImage(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作将生成的单词或与提供的图像内容相关的标记的列表。 计算机视觉 API 可以返回标记基于对象，生活终级、 风景或在图像中发现的操作。 与不同的类别，标记不按组织根据层次结构分类的系统，但对应于图像内容。 标记可能包含提示以避免多义性，或者提供上下文，例如标记 cello 可能伴随提示乐器。 所有标记都是英文。
  syntax:
    content: 'function tagImage(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        可公开访问的图像的 URL
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_2
  name: tagImage(string, Object, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作将生成的单词或与提供的图像内容相关的标记的列表。 计算机视觉 API 可以返回标记基于对象，生活终级、 风景或在图像中发现的操作。 与不同的类别，标记不按组织根据层次结构分类的系统，但对应于图像内容。 标记可能包含提示以避免多义性，或者提供上下文，例如标记 cello 可能伴随提示乐器。 所有标记都是英文。
  syntax:
    content: 'function tagImage(url: string, options: Object, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_1
  name: tagImage(string, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作将生成的单词或与提供的图像内容相关的标记的列表。 计算机视觉 API 可以返回标记基于对象，生活终级、 风景或在图像中发现的操作。 与不同的类别，标记不按组织根据层次结构分类的系统，但对应于图像内容。 标记可能包含提示以避免多义性，或者提供上下文，例如标记 cello 可能伴随提示乐器。 所有标记都是英文。
  syntax:
    content: 'function tagImage(url: string, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream
  name: tagImageInStream(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作将生成的单词或与提供的图像内容相关的标记的列表。 计算机视觉 API 可以返回标记基于对象，生活终级、 风景或在图像中发现的操作。 与不同的类别，标记不按组织根据层次结构分类的系统，但对应于图像内容。 标记可能包含提示以避免多义性，或者提供上下文，例如标记 cello 可能伴随提示乐器。 所有标记都是英文。
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        图像流。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2
  name: tagImageInStream(stream.Readable, Object, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作将生成的单词或与提供的图像内容相关的标记的列表。 计算机视觉 API 可以返回标记基于对象，生活终级、 风景或在图像中发现的操作。 与不同的类别，标记不按组织根据层次结构分类的系统，但对应于图像内容。 标记可能包含提示以避免多义性，或者提供上下文，例如标记 cello 可能伴随提示乐器。 所有标记都是英文。
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1
  name: tagImageInStream(stream.Readable, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作将生成的单词或与提供的图像内容相关的标记的列表。 计算机视觉 API 可以返回标记基于对象，生活终级、 风景或在图像中发现的操作。 与不同的类别，标记不按组织根据层次结构分类的系统，但对应于图像内容。 标记可能包含提示以避免多义性，或者提供上下文，例如标记 cello 可能伴随提示乐器。 所有标记都是英文。
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStreamWithHttpOperationResponse
  name: tagImageInStreamWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作将生成的单词或与提供的图像内容相关的标记的列表。 计算机视觉 API 可以返回标记基于对象，生活终级、 风景或在图像中发现的操作。 与不同的类别，标记不按组织根据层次结构分类的系统，但对应于图像内容。 标记可能包含提示以避免多义性，或者提供上下文，例如标记 cello 可能伴随提示乐器。 所有标记都是英文。
  syntax:
    content: 'function tagImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        图像流。
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageWithHttpOperationResponse
  name: tagImageWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 此操作将生成的单词或与提供的图像内容相关的标记的列表。 计算机视觉 API 可以返回标记基于对象，生活终级、 风景或在图像中发现的操作。 与不同的类别，标记不按组织根据层次结构分类的系统，但对应于图像内容。 标记可能包含提示以避免多义性，或者提供上下文，例如标记 cello 可能伴随提示乐器。 所有标记都是英文。
  syntax:
    content: 'function tagImageWithHttpOperationResponse(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        可公开访问的图像的 URL
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
references:
- uid: Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  name: ImageAnalysis>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
  name: ImageAnalysis>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-computervision.DomainModelResults>
  name: DomainModelResults>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
  name: DomainModelResults>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  name: DomainModelResults>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  name: ImageAnalysis>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ImageDescription>
  name: ImageDescription>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
  name: ImageDescription>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  name: ImageDescription>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TextOperationResult>
  name: TextOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
  name: TextOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  name: TextOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ListModelsResult>
  name: ListModelsResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
  name: ListModelsResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  name: ListModelsResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.OcrResult>
  name: OcrResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
  name: OcrResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  name: OcrResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TagResult>
  name: TagResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TagResult>
  name: TagResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  name: TagResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>>'
    fullName: '>>'
