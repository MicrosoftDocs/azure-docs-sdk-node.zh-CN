### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.Backend'
    name: Backend
    fullName: Backend
    children:
      - '@azure/arm-apimanagement.Backend.constructor'
      - '@azure/arm-apimanagement.Backend.createOrUpdate_2'
      - '@azure/arm-apimanagement.Backend.createOrUpdate'
      - '@azure/arm-apimanagement.Backend.createOrUpdate_1'
      - '@azure/arm-apimanagement.Backend.deleteMethod'
      - '@azure/arm-apimanagement.Backend.deleteMethod_2'
      - '@azure/arm-apimanagement.Backend.deleteMethod_1'
      - '@azure/arm-apimanagement.Backend.get'
      - '@azure/arm-apimanagement.Backend.get_2'
      - '@azure/arm-apimanagement.Backend.get_1'
      - '@azure/arm-apimanagement.Backend.getEntityTag'
      - '@azure/arm-apimanagement.Backend.getEntityTag_2'
      - '@azure/arm-apimanagement.Backend.getEntityTag_1'
      - '@azure/arm-apimanagement.Backend.listByService_2'
      - '@azure/arm-apimanagement.Backend.listByService'
      - '@azure/arm-apimanagement.Backend.listByService_1'
      - '@azure/arm-apimanagement.Backend.listByServiceNext'
      - '@azure/arm-apimanagement.Backend.listByServiceNext_2'
      - '@azure/arm-apimanagement.Backend.listByServiceNext_1'
      - '@azure/arm-apimanagement.Backend.reconnect_2'
      - '@azure/arm-apimanagement.Backend.reconnect'
      - '@azure/arm-apimanagement.Backend.reconnect_1'
      - '@azure/arm-apimanagement.Backend.update'
      - '@azure/arm-apimanagement.Backend.update_2'
      - '@azure/arm-apimanagement.Backend.update_1'
    langs:
      - typeScript
    type: class
    summary: 表示一个后端的类。
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.constructor'
    name: Backend(ApiManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: 创建后端。
    syntax:
      content: 'new Backend(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-apimanagement.ApiManagementClientContext'
          description: |
            对服务客户端的引用。
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.createOrUpdate_2'
    name: 'createOrUpdate(string, string, string, BackendContract, BackendCreateOrUpdateOptionalParams, ServiceCallback<BackendContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, backendId: string, parameters: BackendContract, options: BackendCreateOrUpdateOptionalParams, callback: ServiceCallback<BackendContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: backendId
          type:
            - string
          description: 后端实体的标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: parameters
          type:
            - '@azure/arm-apimanagement.BackendContract'
          description: 创建参数。
        - id: options
          type:
            - '@azure/arm-apimanagement.BackendCreateOrUpdateOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.BackendContract>
          description: |
            回调
      return:
        type:
          - Promise<Models.BackendCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.createOrUpdate'
    name: 'createOrUpdate(string, string, string, BackendContract, Models.BackendCreateOrUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 创建或更新后端。
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, backendId: string, parameters: BackendContract, options?: Models.BackendCreateOrUpdateOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: backendId
          type:
            - string
          description: 后端实体的标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: parameters
          type:
            - '@azure/arm-apimanagement.BackendContract'
          description: 创建参数。
        - id: options
          type:
            - Models.BackendCreateOrUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BackendCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.createOrUpdate_1'
    name: 'createOrUpdate(string, string, string, BackendContract, ServiceCallback<BackendContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, backendId: string, parameters: BackendContract, callback: ServiceCallback<BackendContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: backendId
          type:
            - string
          description: 后端实体的标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: parameters
          type:
            - '@azure/arm-apimanagement.BackendContract'
          description: 创建参数。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.BackendContract>
          description: |
            回调
      return:
        type:
          - Promise<Models.BackendCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.deleteMethod'
    name: 'deleteMethod(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 删除指定的后端。
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, backendId: string, ifMatch: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: backendId
          type:
            - string
          description: 后端实体的标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: ifMatch
          type:
            - string
          description: 实体的 ETag。 ETag 应与 GET 请求标头响应中的当前实体状态匹配，或者它是 * 无条件更新。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.deleteMethod_2'
    name: 'deleteMethod(string, string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, backendId: string, ifMatch: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: backendId
          type:
            - string
          description: 后端实体的标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: ifMatch
          type:
            - string
          description: 实体的 ETag。 ETag 应与 GET 请求标头响应中的当前实体状态匹配，或者它是 * 无条件更新。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.deleteMethod_1'
    name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, backendId: string, ifMatch: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: backendId
          type:
            - string
          description: 后端实体的标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: ifMatch
          type:
            - string
          description: 实体的 ETag。 ETag 应与 GET 请求标头响应中的当前实体状态匹配，或者它是 * 无条件更新。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 获取按标识符指定的后端的详细信息。
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, backendId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: backendId
          type:
            - string
          description: 后端实体的标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BackendGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.get_2'
    name: 'get(string, string, string, RequestOptionsBase, ServiceCallback<BackendContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, backendId: string, options: RequestOptionsBase, callback: ServiceCallback<BackendContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: backendId
          type:
            - string
          description: 后端实体的标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.BackendContract>
          description: |
            回调
      return:
        type:
          - Promise<Models.BackendGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.get_1'
    name: 'get(string, string, string, ServiceCallback<BackendContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, backendId: string, callback: ServiceCallback<BackendContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: backendId
          type:
            - string
          description: 后端实体的标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.BackendContract>
          description: |
            回调
      return:
        type:
          - Promise<Models.BackendGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.getEntityTag'
    name: 'getEntityTag(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 获取按标识符指定的后端的实体状态 (Etag) 版本。
    syntax:
      content: 'function getEntityTag(resourceGroupName: string, serviceName: string, backendId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: backendId
          type:
            - string
          description: 后端实体的标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BackendGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.getEntityTag_2'
    name: 'getEntityTag(string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getEntityTag(resourceGroupName: string, serviceName: string, backendId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: backendId
          type:
            - string
          description: 后端实体的标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<Models.BackendGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.getEntityTag_1'
    name: 'getEntityTag(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getEntityTag(resourceGroupName: string, serviceName: string, backendId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: backendId
          type:
            - string
          description: 后端实体的标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<Models.BackendGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.listByService_2'
    name: 'listByService(string, string, BackendListByServiceOptionalParams, ServiceCallback<BackendCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, options: BackendListByServiceOptionalParams, callback: ServiceCallback<BackendCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: options
          type:
            - '@azure/arm-apimanagement.BackendListByServiceOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.BackendCollection>
          description: |
            回调
      return:
        type:
          - Promise<Models.BackendListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.listByService'
    name: 'listByService(string, string, Models.BackendListByServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 列出指定服务实例中的后端集合。
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, options?: Models.BackendListByServiceOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: options
          type:
            - Models.BackendListByServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BackendListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.listByService_1'
    name: 'listByService(string, string, ServiceCallback<BackendCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, callback: ServiceCallback<BackendCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.BackendCollection>
          description: |
            回调
      return:
        type:
          - Promise<Models.BackendListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.listByServiceNext'
    name: 'listByServiceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 列出指定服务实例中的后端集合。
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 从上一个成功调用 List 操作 NextLink。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BackendListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.listByServiceNext_2'
    name: 'listByServiceNext(string, RequestOptionsBase, ServiceCallback<BackendCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<BackendCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 从上一个成功调用 List 操作 NextLink。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.BackendCollection>
          description: |
            回调
      return:
        type:
          - Promise<Models.BackendListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.listByServiceNext_1'
    name: 'listByServiceNext(string, ServiceCallback<BackendCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, callback: ServiceCallback<BackendCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 从上一个成功调用 List 操作 NextLink。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.BackendCollection>
          description: |
            回调
      return:
        type:
          - Promise<Models.BackendListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.reconnect_2'
    name: 'reconnect(string, string, string, BackendReconnectOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reconnect(resourceGroupName: string, serviceName: string, backendId: string, options: BackendReconnectOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: backendId
          type:
            - string
          description: 后端实体的标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: options
          type:
            - '@azure/arm-apimanagement.BackendReconnectOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.reconnect'
    name: 'reconnect(string, string, string, Models.BackendReconnectOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      通知 APIM 代理在指定的超时后与后端建立新连接。
      如果未指定超时，则使用 2 分钟超时。
    syntax:
      content: 'function reconnect(resourceGroupName: string, serviceName: string, backendId: string, options?: Models.BackendReconnectOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: backendId
          type:
            - string
          description: 后端实体的标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: options
          type:
            - Models.BackendReconnectOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.reconnect_1'
    name: 'reconnect(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reconnect(resourceGroupName: string, serviceName: string, backendId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: backendId
          type:
            - string
          description: 后端实体的标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.update'
    name: 'update(string, string, string, BackendUpdateParameters, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 更新现有后端。
    syntax:
      content: 'function update(resourceGroupName: string, serviceName: string, backendId: string, parameters: BackendUpdateParameters, ifMatch: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: backendId
          type:
            - string
          description: 后端实体的标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: parameters
          type:
            - '@azure/arm-apimanagement.BackendUpdateParameters'
          description: 更新参数。
        - id: ifMatch
          type:
            - string
          description: 实体的 ETag。 ETag 应与 GET 请求标头响应中的当前实体状态匹配，或者它是 * 无条件更新。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.update_2'
    name: 'update(string, string, string, BackendUpdateParameters, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, serviceName: string, backendId: string, parameters: BackendUpdateParameters, ifMatch: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: backendId
          type:
            - string
          description: 后端实体的标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: parameters
          type:
            - '@azure/arm-apimanagement.BackendUpdateParameters'
          description: 更新参数。
        - id: ifMatch
          type:
            - string
          description: 实体的 ETag。 ETag 应与 GET 请求标头响应中的当前实体状态匹配，或者它是 * 无条件更新。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Backend.update_1'
    name: 'update(string, string, string, BackendUpdateParameters, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, serviceName: string, backendId: string, parameters: BackendUpdateParameters, ifMatch: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: backendId
          type:
            - string
          description: 后端实体的标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: parameters
          type:
            - '@azure/arm-apimanagement.BackendUpdateParameters'
          description: 更新参数。
        - id: ifMatch
          type:
            - string
          description: 实体的 ETag。 ETag 应与 GET 请求标头响应中的当前实体状态匹配，或者它是 * 无条件更新。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.ApiManagementClientContext'
    name: ApiManagementClientContext
    spec.typeScript:
      - name: ApiManagementClientContext
        fullName: ApiManagementClientContext
        uid: '@azure/arm-apimanagement.ApiManagementClientContext'
  - uid: '@azure/arm-apimanagement.BackendContract'
    name: BackendContract
    spec.typeScript:
      - name: BackendContract
        fullName: BackendContract
        uid: '@azure/arm-apimanagement.BackendContract'
  - uid: ServiceCallback<@azure/arm-apimanagement.BackendContract>
    name: BackendContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackendContract
        fullName: BackendContract
        uid: '@azure/arm-apimanagement.BackendContract'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.BackendCreateOrUpdateOptionalParams'
    name: BackendCreateOrUpdateOptionalParams
    spec.typeScript:
      - name: BackendCreateOrUpdateOptionalParams
        fullName: BackendCreateOrUpdateOptionalParams
        uid: '@azure/arm-apimanagement.BackendCreateOrUpdateOptionalParams'
  - uid: ServiceCallback<@azure/arm-apimanagement.BackendCollection>
    name: BackendCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BackendCollection
        fullName: BackendCollection
        uid: '@azure/arm-apimanagement.BackendCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.BackendListByServiceOptionalParams'
    name: BackendListByServiceOptionalParams
    spec.typeScript:
      - name: BackendListByServiceOptionalParams
        fullName: BackendListByServiceOptionalParams
        uid: '@azure/arm-apimanagement.BackendListByServiceOptionalParams'
  - uid: '@azure/arm-apimanagement.BackendReconnectOptionalParams'
    name: BackendReconnectOptionalParams
    spec.typeScript:
      - name: BackendReconnectOptionalParams
        fullName: BackendReconnectOptionalParams
        uid: '@azure/arm-apimanagement.BackendReconnectOptionalParams'
  - uid: '@azure/arm-apimanagement.BackendUpdateParameters'
    name: BackendUpdateParameters
    spec.typeScript:
      - name: BackendUpdateParameters
        fullName: BackendUpdateParameters
        uid: '@azure/arm-apimanagement.BackendUpdateParameters'