### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient'
    name: PowerBIEmbeddedManagementClient
    fullName: PowerBIEmbeddedManagementClient
    children:
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.acceptLanguage'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.apiVersion'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.beginLongRunningRequest'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.credentials'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.getAvailableOperations'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.getAvailableOperations_2'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.getAvailableOperations_1'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.longRunningOperationRetryTimeout'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.constructor'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.restoreLROPoller'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.sendLongRunningRequest'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.sendLRORequest'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.sendOperationRequest'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.sendRequest'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.subscriptionId'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.workspaceCollections'
      - '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.workspaces'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClientContext'
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="27cb6-101">发送 （长时间运行的操作） 进行 lro 操作的初始请求并取回 HttpLongRunningOperationResponse 轮询进行 lro 操作和检查是否完成进行 lro 操作提供的方法。</span><span class="sxs-lookup"><span data-stu-id="27cb6-101">Send the initial request of a LRO (long running operation) and get back an HttpLongRunningOperationResponse that provides methods for polling the LRO and checking if the LRO is finished.</span></span>
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="27cb6-102">请求对象</span><span class="sxs-lookup"><span data-stu-id="27cb6-102">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.getAvailableOperations'
    name: getAvailableOperations(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="27cb6-103">指示可以由 Power BI 资源提供程序执行哪些操作。</span><span class="sxs-lookup"><span data-stu-id="27cb6-103">Indicates which operations can be performed by the Power BI Resource Provider.</span></span>
    syntax:
      content: 'function getAvailableOperations(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetAvailableOperationsResponse>
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.getAvailableOperations_2'
    name: 'getAvailableOperations(RequestOptionsBase, ServiceCallback<OperationList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAvailableOperations(options: RequestOptionsBase, callback: ServiceCallback<OperationList>)'
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="27cb6-104">可选参数</span><span class="sxs-lookup"><span data-stu-id="27cb6-104">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-powerbiembedded.OperationList>
          description: |
            <span data-ttu-id="27cb6-105">回调</span><span class="sxs-lookup"><span data-stu-id="27cb6-105">The callback</span></span>
      return:
        type:
          - Promise<Models.GetAvailableOperationsResponse>
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.getAvailableOperations_1'
    name: getAvailableOperations(ServiceCallback<OperationList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAvailableOperations(callback: ServiceCallback<OperationList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-powerbiembedded.OperationList>
          description: |
            <span data-ttu-id="27cb6-106">回调</span><span class="sxs-lookup"><span data-stu-id="27cb6-106">The callback</span></span>
      return:
        type:
          - Promise<Models.GetAvailableOperationsResponse>
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="27cb6-107">重试超时秒数的长时间运行操作。</span><span class="sxs-lookup"><span data-stu-id="27cb6-107">The retry timeout in seconds for Long Running Operations.</span></span> <span data-ttu-id="27cb6-108">默认值为 30。</span><span class="sxs-lookup"><span data-stu-id="27cb6-108">Default value is 30.</span></span>
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.constructor'
    name: 'PowerBIEmbeddedManagementClient(ServiceClientCredentials, string, Models.PowerBIEmbeddedManagementClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="27cb6-109">初始化 PowerBIEmbeddedManagementClient 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="27cb6-109">Initializes a new instance of the PowerBIEmbeddedManagementClient class.</span></span>
    syntax:
      content: 'new PowerBIEmbeddedManagementClient(credentials: ServiceClientCredentials, subscriptionId: string, options?: Models.PowerBIEmbeddedManagementClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: <span data-ttu-id="27cb6-110">客户端连接到 Azure 所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="27cb6-110">Credentials needed for the client to connect to Azure.</span></span>
        - id: subscriptionId
          type:
            - string
          description: <span data-ttu-id="27cb6-111">获取唯一标识 Microsoft Azure 订阅的订阅凭据。</span><span class="sxs-lookup"><span data-stu-id="27cb6-111">Gets subscription credentials which uniquely identify a Microsoft Azure subscription.</span></span> <span data-ttu-id="27cb6-112">此订阅 ID 是每个服务调用的 URI 的一部分。</span><span class="sxs-lookup"><span data-stu-id="27cb6-112">The subscription ID forms part of the URI for every service call.</span></span>
        - id: options
          type:
            - Models.PowerBIEmbeddedManagementClientOptions
          description: ''
          optional: true
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="27cb6-113">从提供 LROPollState 还原 LROPoller。</span><span class="sxs-lookup"><span data-stu-id="27cb6-113">Restore an LROPoller from the provided LROPollState.</span></span> <span data-ttu-id="27cb6-114">此方法可用于重新创建不同的进程或计算机上 LROPoller。</span><span class="sxs-lookup"><span data-stu-id="27cb6-114">This method can be used to recreate an LROPoller on a different process or machine.</span></span>
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="27cb6-115">提供了一种机制来发出请求，将轮询，并提供最终的结果。</span><span class="sxs-lookup"><span data-stu-id="27cb6-115">Provides a mechanism to make a request that will poll and provide the final result.</span></span>
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="27cb6-116">请求对象</span><span class="sxs-lookup"><span data-stu-id="27cb6-116">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="27cb6-117">发送 （长时间运行的操作） 进行 lro 操作的初始请求并取回 LROPoller 轮询进行 lro 操作和检查是否完成进行 lro 操作提供的方法。</span><span class="sxs-lookup"><span data-stu-id="27cb6-117">Send the initial request of a LRO (long running operation) and get back an LROPoller that provides methods for polling the LRO and checking if the LRO is finished.</span></span>
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="27cb6-118">操作的参数。</span><span class="sxs-lookup"><span data-stu-id="27cb6-118">The arguments to the operation.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="27cb6-119">操作规范。</span><span class="sxs-lookup"><span data-stu-id="27cb6-119">The specification for the operation.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="27cb6-120">发出请求时发送的其他选项。</span><span class="sxs-lookup"><span data-stu-id="27cb6-120">Additional options to be sent while making the request.</span></span>
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="27cb6-121">发送 HTTP 请求提供的 OperationSpec 填充。</span><span class="sxs-lookup"><span data-stu-id="27cb6-121">Send an HTTP request that is populated using the provided OperationSpec.</span></span>
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="27cb6-122">HTTP 请求的模板化值将填充从自变量。</span><span class="sxs-lookup"><span data-stu-id="27cb6-122">The arguments that the HTTP request's templated values will be populated from.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="27cb6-123">用于填充 httpRequest OperationSpec。</span><span class="sxs-lookup"><span data-stu-id="27cb6-123">The OperationSpec to use to populate the httpRequest.</span></span>
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="27cb6-124">要接收到响应时调用的回调。</span><span class="sxs-lookup"><span data-stu-id="27cb6-124">The callback to call when the response is received.</span></span>
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="27cb6-125">发送提供的 httpRequest。</span><span class="sxs-lookup"><span data-stu-id="27cb6-125">Send the provided httpRequest.</span></span>
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.workspaceCollections'
    name: workspaceCollections
    fullName: workspaceCollections
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'workspaceCollections: WorkspaceCollections'
      return:
        type:
          - '@azure/arm-powerbiembedded.WorkspaceCollections'
    package: '@azure/arm-powerbiembedded'
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClient.workspaces'
    name: workspaces
    fullName: workspaces
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'workspaces: Workspaces'
      return:
        type:
          - '@azure/arm-powerbiembedded.Workspaces'
    package: '@azure/arm-powerbiembedded'
references:
  - uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClientContext'
    name: PowerBIEmbeddedManagementClientContext
    spec.typeScript:
      - name: PowerBIEmbeddedManagementClientContext
        fullName: PowerBIEmbeddedManagementClientContext
        uid: '@azure/arm-powerbiembedded.PowerBIEmbeddedManagementClientContext'
  - uid: '@azure/arm-powerbiembedded.WorkspaceCollections'
    name: WorkspaceCollections
    spec.typeScript:
      - name: WorkspaceCollections
        fullName: WorkspaceCollections
        uid: '@azure/arm-powerbiembedded.WorkspaceCollections'
  - uid: '@azure/arm-powerbiembedded.Workspaces'
    name: Workspaces
    spec.typeScript:
      - name: Workspaces
        fullName: Workspaces
        uid: '@azure/arm-powerbiembedded.Workspaces'
  - uid: ServiceCallback<@azure/arm-powerbiembedded.OperationList>
    name: OperationList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OperationList
        fullName: OperationList
        uid: '@azure/arm-powerbiembedded.OperationList'
      - name: '>'
        fullName: '>'