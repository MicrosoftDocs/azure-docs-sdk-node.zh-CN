### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-containerservice.ContainerServices'
    name: ContainerServices
    fullName: ContainerServices
    children:
      - '@azure/arm-containerservice.ContainerServices.beginCreateOrUpdate'
      - '@azure/arm-containerservice.ContainerServices.beginDeleteMethod'
      - '@azure/arm-containerservice.ContainerServices.constructor'
      - '@azure/arm-containerservice.ContainerServices.createOrUpdate'
      - '@azure/arm-containerservice.ContainerServices.deleteMethod'
      - '@azure/arm-containerservice.ContainerServices.get'
      - '@azure/arm-containerservice.ContainerServices.get_2'
      - '@azure/arm-containerservice.ContainerServices.get_1'
      - '@azure/arm-containerservice.ContainerServices.list'
      - '@azure/arm-containerservice.ContainerServices.list_2'
      - '@azure/arm-containerservice.ContainerServices.list_1'
      - '@azure/arm-containerservice.ContainerServices.listByResourceGroup'
      - '@azure/arm-containerservice.ContainerServices.listByResourceGroup_2'
      - '@azure/arm-containerservice.ContainerServices.listByResourceGroup_1'
      - '@azure/arm-containerservice.ContainerServices.listByResourceGroupNext'
      - '@azure/arm-containerservice.ContainerServices.listByResourceGroupNext_2'
      - '@azure/arm-containerservice.ContainerServices.listByResourceGroupNext_1'
      - '@azure/arm-containerservice.ContainerServices.listNext'
      - '@azure/arm-containerservice.ContainerServices.listNext_2'
      - '@azure/arm-containerservice.ContainerServices.listNext_1'
      - '@azure/arm-containerservice.ContainerServices.listOrchestrators_2'
      - '@azure/arm-containerservice.ContainerServices.listOrchestrators'
      - '@azure/arm-containerservice.ContainerServices.listOrchestrators_1'
    langs:
      - typeScript
    type: class
    summary: 表示 ContainerServices 类。
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServices.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, ContainerService, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 创建或更新容器服务使用指定的业务流程协调程序、 主机和代理配置。
    syntax:
      content: 'function beginCreateOrUpdate(resourceGroupName: string, containerServiceName: string, parameters: ContainerService, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: containerServiceName
          type:
            - string
          description: 容器服务中指定的订阅和资源组的名称。
        - id: parameters
          type:
            - '@azure/arm-containerservice.ContainerService'
          description: 提供给创建或更新容器服务操作参数。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServices.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 删除指定的订阅和资源组中指定的容器服务。 该操作不会删除在创建容器服务，包括 Vm 的存储帐户的过程中创建其他资源和可用性集。 使用容器服务创建的所有其他资源是相同的资源组的一部分，可以单独删除。
    syntax:
      content: 'function beginDeleteMethod(resourceGroupName: string, containerServiceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: containerServiceName
          type:
            - string
          description: 容器服务中指定的订阅和资源组的名称。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServices.constructor'
    name: ContainerServices(ContainerServiceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: 创建 ContainerServices。
    syntax:
      content: 'new ContainerServices(client: ContainerServiceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-containerservice.ContainerServiceClientContext'
          description: |
            对服务客户端的引用。
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServices.createOrUpdate'
    name: 'createOrUpdate(string, string, ContainerService, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 创建或更新容器服务使用指定的业务流程协调程序、 主机和代理配置。
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, containerServiceName: string, parameters: ContainerService, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: containerServiceName
          type:
            - string
          description: 容器服务中指定的订阅和资源组的名称。
        - id: parameters
          type:
            - '@azure/arm-containerservice.ContainerService'
          description: 提供给创建或更新容器服务操作参数。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerServicesCreateOrUpdateResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServices.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 删除指定的订阅和资源组中指定的容器服务。 该操作不会删除在创建容器服务，包括 Vm 的存储帐户的过程中创建其他资源和可用性集。 使用容器服务创建的所有其他资源是相同的资源组的一部分，可以单独删除。
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, containerServiceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: containerServiceName
          type:
            - string
          description: 容器服务中指定的订阅和资源组的名称。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServices.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 获取指定的容器服务中指定的订阅和资源组的属性。 该操作返回的属性，包括状态、 业务流程协调程序、 数量的主机和代理，和的主机和代理的 Fqdn。
    syntax:
      content: 'function get(resourceGroupName: string, containerServiceName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: containerServiceName
          type:
            - string
          description: 容器服务中指定的订阅和资源组的名称。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerServicesGetResponse>
    package: '@azure/arm-containerservice'
    deprecated:
      content: This operation is deprecated. Please do not use it any longer.
  - uid: '@azure/arm-containerservice.ContainerServices.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<ContainerService>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, containerServiceName: string, options: RequestOptionsBase, callback: ServiceCallback<ContainerService>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: containerServiceName
          type:
            - string
          description: 容器服务中指定的订阅和资源组的名称。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.ContainerService>
          description: 回调
      return:
        type:
          - Promise<Models.ContainerServicesGetResponse>
    package: '@azure/arm-containerservice'
    deprecated:
      content: This operation is deprecated. Please do not use it any longer.
  - uid: '@azure/arm-containerservice.ContainerServices.get_1'
    name: 'get(string, string, ServiceCallback<ContainerService>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, containerServiceName: string, callback: ServiceCallback<ContainerService>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: containerServiceName
          type:
            - string
          description: 容器服务中指定的订阅和资源组的名称。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.ContainerService>
          description: 回调
      return:
        type:
          - Promise<Models.ContainerServicesGetResponse>
    package: '@azure/arm-containerservice'
    deprecated:
      content: This operation is deprecated. Please do not use it any longer.
  - uid: '@azure/arm-containerservice.ContainerServices.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 获取指定的订阅中的容器服务的列表。 操作将返回包括状态、 业务流程协调程序、 数量的主机和代理，每个容器服务的属性和 Fqdn 的主机和代理。
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerServicesListResponse>
    package: '@azure/arm-containerservice'
    deprecated:
      content: This operation is deprecated. Please do not use it any longer.
  - uid: '@azure/arm-containerservice.ContainerServices.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<ContainerServiceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: RequestOptionsBase, callback: ServiceCallback<ContainerServiceListResult>)'
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.ContainerServiceListResult>
          description: 回调
      return:
        type:
          - Promise<Models.ContainerServicesListResponse>
    package: '@azure/arm-containerservice'
    deprecated:
      content: This operation is deprecated. Please do not use it any longer.
  - uid: '@azure/arm-containerservice.ContainerServices.list_1'
    name: list(ServiceCallback<ContainerServiceListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<ContainerServiceListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.ContainerServiceListResult>
          description: 回调
      return:
        type:
          - Promise<Models.ContainerServicesListResponse>
    package: '@azure/arm-containerservice'
    deprecated:
      content: This operation is deprecated. Please do not use it any longer.
  - uid: '@azure/arm-containerservice.ContainerServices.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 获取指定的订阅和资源组中的容器服务的列表。 操作将返回包括状态、 业务流程协调程序、 数量的主机和代理，每个容器服务的属性和 Fqdn 的主机和代理。
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerServicesListByResourceGroupResponse>
    package: '@azure/arm-containerservice'
    deprecated:
      content: This operation is deprecated. Please do not use it any longer.
  - uid: '@azure/arm-containerservice.ContainerServices.listByResourceGroup_2'
    name: 'listByResourceGroup(string, RequestOptionsBase, ServiceCallback<ContainerServiceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, options: RequestOptionsBase, callback: ServiceCallback<ContainerServiceListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.ContainerServiceListResult>
          description: 回调
      return:
        type:
          - Promise<Models.ContainerServicesListByResourceGroupResponse>
    package: '@azure/arm-containerservice'
    deprecated:
      content: This operation is deprecated. Please do not use it any longer.
  - uid: '@azure/arm-containerservice.ContainerServices.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<ContainerServiceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<ContainerServiceListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.ContainerServiceListResult>
          description: 回调
      return:
        type:
          - Promise<Models.ContainerServicesListByResourceGroupResponse>
    package: '@azure/arm-containerservice'
    deprecated:
      content: This operation is deprecated. Please do not use it any longer.
  - uid: '@azure/arm-containerservice.ContainerServices.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 获取指定的订阅和资源组中的容器服务的列表。 操作将返回包括状态、 业务流程协调程序、 数量的主机和代理，每个容器服务的属性和 Fqdn 的主机和代理。
    syntax:
      content: 'function listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 从上一个成功调用 List 操作 NextLink。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerServicesListByResourceGroupNextResponse>
    package: '@azure/arm-containerservice'
    deprecated:
      content: This operation is deprecated. Please do not use it any longer.
  - uid: '@azure/arm-containerservice.ContainerServices.listByResourceGroupNext_2'
    name: 'listByResourceGroupNext(string, RequestOptionsBase, ServiceCallback<ContainerServiceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroupNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<ContainerServiceListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 从上一个成功调用 List 操作 NextLink。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.ContainerServiceListResult>
          description: 回调
      return:
        type:
          - Promise<Models.ContainerServicesListByResourceGroupNextResponse>
    package: '@azure/arm-containerservice'
    deprecated:
      content: This operation is deprecated. Please do not use it any longer.
  - uid: '@azure/arm-containerservice.ContainerServices.listByResourceGroupNext_1'
    name: 'listByResourceGroupNext(string, ServiceCallback<ContainerServiceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<ContainerServiceListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 从上一个成功调用 List 操作 NextLink。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.ContainerServiceListResult>
          description: 回调
      return:
        type:
          - Promise<Models.ContainerServicesListByResourceGroupNextResponse>
    package: '@azure/arm-containerservice'
    deprecated:
      content: This operation is deprecated. Please do not use it any longer.
  - uid: '@azure/arm-containerservice.ContainerServices.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 获取指定的订阅中的容器服务的列表。 操作将返回包括状态、 业务流程协调程序、 数量的主机和代理，每个容器服务的属性和 Fqdn 的主机和代理。
    syntax:
      content: 'function listNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 从上一个成功调用 List 操作 NextLink。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerServicesListNextResponse>
    package: '@azure/arm-containerservice'
    deprecated:
      content: This operation is deprecated. Please do not use it any longer.
  - uid: '@azure/arm-containerservice.ContainerServices.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<ContainerServiceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<ContainerServiceListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 从上一个成功调用 List 操作 NextLink。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.ContainerServiceListResult>
          description: 回调
      return:
        type:
          - Promise<Models.ContainerServicesListNextResponse>
    package: '@azure/arm-containerservice'
    deprecated:
      content: This operation is deprecated. Please do not use it any longer.
  - uid: '@azure/arm-containerservice.ContainerServices.listNext_1'
    name: 'listNext(string, ServiceCallback<ContainerServiceListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, callback: ServiceCallback<ContainerServiceListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 从上一个成功调用 List 操作 NextLink。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.ContainerServiceListResult>
          description: 回调
      return:
        type:
          - Promise<Models.ContainerServicesListNextResponse>
    package: '@azure/arm-containerservice'
    deprecated:
      content: This operation is deprecated. Please do not use it any longer.
  - uid: '@azure/arm-containerservice.ContainerServices.listOrchestrators_2'
    name: 'listOrchestrators(string, ContainerServicesListOrchestratorsOptionalParams, ServiceCallback<OrchestratorVersionProfileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listOrchestrators(location: string, options: ContainerServicesListOrchestratorsOptionalParams, callback: ServiceCallback<OrchestratorVersionProfileListResult>)'
      parameters:
        - id: location
          type:
            - string
          description: 受支持的 Azure 区域的名称。
        - id: options
          type:
            - '@azure/arm-containerservice.ContainerServicesListOrchestratorsOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.OrchestratorVersionProfileListResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.ContainerServicesListOrchestratorsResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServices.listOrchestrators'
    name: 'listOrchestrators(string, Models.ContainerServicesListOrchestratorsOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 获取指定的订阅中受支持的业务流程协调程序的列表。 该操作返回每个业务流程协调程序，包括版本和可用的升级的属性。
    syntax:
      content: 'function listOrchestrators(location: string, options?: Models.ContainerServicesListOrchestratorsOptionalParams)'
      parameters:
        - id: location
          type:
            - string
          description: 受支持的 Azure 区域的名称。
        - id: options
          type:
            - Models.ContainerServicesListOrchestratorsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerServicesListOrchestratorsResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServices.listOrchestrators_1'
    name: 'listOrchestrators(string, ServiceCallback<OrchestratorVersionProfileListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listOrchestrators(location: string, callback: ServiceCallback<OrchestratorVersionProfileListResult>)'
      parameters:
        - id: location
          type:
            - string
          description: 受支持的 Azure 区域的名称。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.OrchestratorVersionProfileListResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.ContainerServicesListOrchestratorsResponse>
    package: '@azure/arm-containerservice'
references:
  - uid: '@azure/arm-containerservice.ContainerServiceClientContext'
    name: ContainerServiceClientContext
    spec.typeScript:
      - name: ContainerServiceClientContext
        fullName: ContainerServiceClientContext
        uid: '@azure/arm-containerservice.ContainerServiceClientContext'
  - uid: '@azure/arm-containerservice.ContainerService'
    name: ContainerService
    spec.typeScript:
      - name: ContainerService
        fullName: ContainerService
        uid: '@azure/arm-containerservice.ContainerService'
  - uid: ServiceCallback<@azure/arm-containerservice.ContainerService>
    name: ContainerService>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerService
        fullName: ContainerService
        uid: '@azure/arm-containerservice.ContainerService'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-containerservice.ContainerServiceListResult>
    name: ContainerServiceListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerServiceListResult
        fullName: ContainerServiceListResult
        uid: '@azure/arm-containerservice.ContainerServiceListResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-containerservice.OrchestratorVersionProfileListResult>
    name: OrchestratorVersionProfileListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OrchestratorVersionProfileListResult
        fullName: OrchestratorVersionProfileListResult
        uid: '@azure/arm-containerservice.OrchestratorVersionProfileListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-containerservice.ContainerServicesListOrchestratorsOptionalParams'
    name: ContainerServicesListOrchestratorsOptionalParams
    spec.typeScript:
      - name: ContainerServicesListOrchestratorsOptionalParams
        fullName: ContainerServicesListOrchestratorsOptionalParams
        uid: '@azure/arm-containerservice.ContainerServicesListOrchestratorsOptionalParams'