### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-azure-js.LROPollStrategy'
    name: LROPollStrategy
    fullName: LROPollStrategy
    children:
      - '@azure/ms-rest-azure-js.LROPollStrategy.getMostRecentResponse'
      - '@azure/ms-rest-azure-js.LROPollStrategy.getOperationResponse'
      - '@azure/ms-rest-azure-js.LROPollStrategy.getOperationStatus'
      - '@azure/ms-rest-azure-js.LROPollStrategy.getPollState'
      - '@azure/ms-rest-azure-js.LROPollStrategy.getRestError'
      - '@azure/ms-rest-azure-js.LROPollStrategy.isFinalStatusAcceptable'
      - '@azure/ms-rest-azure-js.LROPollStrategy.isFinished'
      - '@azure/ms-rest-azure-js.LROPollStrategy.constructor'
      - '@azure/ms-rest-azure-js.LROPollStrategy.pollUntilFinished'
      - '@azure/ms-rest-azure-js.LROPollStrategy.sendPollRequest'
    langs:
      - typeScript
    type: class
    summary: 轮询其他轮询策略应扩展的策略基类是长时间运行操作。
    package: '@azure/ms-rest-azure-js'
  - uid: '@azure/ms-rest-azure-js.LROPollStrategy.getMostRecentResponse'
    name: getMostRecentResponse()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMostRecentResponse()
      parameters: []
      return:
        type:
          - HttpOperationResponse
    package: '@azure/ms-rest-azure-js'
  - uid: '@azure/ms-rest-azure-js.LROPollStrategy.getOperationResponse'
    name: getOperationResponse()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getOperationResponse()
      parameters: []
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/ms-rest-azure-js'
  - uid: '@azure/ms-rest-azure-js.LROPollStrategy.getOperationStatus'
    name: getOperationStatus()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getOperationStatus()
      parameters: []
      return:
        type:
          - '@azure/ms-rest-azure-js.LongRunningOperationStates'
    package: '@azure/ms-rest-azure-js'
  - uid: '@azure/ms-rest-azure-js.LROPollStrategy.getPollState'
    name: getPollState()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getPollState()
      parameters: []
      return:
        type:
          - '@azure/ms-rest-azure-js.LROPollState'
    package: '@azure/ms-rest-azure-js'
  - uid: '@azure/ms-rest-azure-js.LROPollStrategy.getRestError'
    name: getRestError()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getRestError()
      parameters: []
      return:
        type:
          - RestError
    package: '@azure/ms-rest-azure-js'
  - uid: '@azure/ms-rest-azure-js.LROPollStrategy.isFinalStatusAcceptable'
    name: isFinalStatusAcceptable()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isFinalStatusAcceptable()
      parameters: []
      return:
        type:
          - boolean
    package: '@azure/ms-rest-azure-js'
  - uid: '@azure/ms-rest-azure-js.LROPollStrategy.isFinished'
    name: isFinished()
    children: []
    type: method
    langs:
      - typeScript
    summary: 获取指示此轮询策略进行 lro 操作完成。
    syntax:
      content: function isFinished()
      parameters: []
      return:
        type:
          - boolean
    package: '@azure/ms-rest-azure-js'
  - uid: '@azure/ms-rest-azure-js.LROPollStrategy.constructor'
    name: 'LROPollStrategy(AzureServiceClient, LROPollState)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new LROPollStrategy(_azureServiceClient: AzureServiceClient, _pollState: LROPollState)'
      parameters:
        - id: _azureServiceClient
          type:
            - '@azure/ms-rest-azure-js.AzureServiceClient'
          description: ''
        - id: _pollState
          type:
            - '@azure/ms-rest-azure-js.LROPollState'
          description: ''
    package: '@azure/ms-rest-azure-js'
  - uid: '@azure/ms-rest-azure-js.LROPollStrategy.pollUntilFinished'
    name: pollUntilFinished()
    children: []
    type: method
    langs:
      - typeScript
    summary: 将检查进行 lro 操作的状态，直到确定完成进行 lro 操作的轮询请求发送。
    syntax:
      content: function pollUntilFinished()
      parameters: []
      return:
        type:
          - Promise<boolean>
    package: '@azure/ms-rest-azure-js'
  - uid: '@azure/ms-rest-azure-js.LROPollStrategy.sendPollRequest'
    name: sendPollRequest()
    children: []
    type: method
    langs:
      - typeScript
    summary: 发送单个轮询请求检查进行 lro 操作的状态，并将响应返回。 进行 lro 操作结束后，将发送任何请求，并将返回收到的最后一个响应。
    syntax:
      content: function sendPollRequest()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/ms-rest-azure-js'
references:
  - uid: '@azure/ms-rest-azure-js.AzureServiceClient'
    name: AzureServiceClient
    spec.typeScript:
      - name: AzureServiceClient
        fullName: AzureServiceClient
        uid: '@azure/ms-rest-azure-js.AzureServiceClient'
  - uid: '@azure/ms-rest-azure-js.LROPollState'
    name: LROPollState
    spec.typeScript:
      - name: LROPollState
        fullName: LROPollState
        uid: '@azure/ms-rest-azure-js.LROPollState'
  - uid: '@azure/ms-rest-azure-js.LongRunningOperationStates'
    name: LongRunningOperationStates
    spec.typeScript:
      - name: LongRunningOperationStates
        fullName: LongRunningOperationStates
        uid: '@azure/ms-rest-azure-js.LongRunningOperationStates'