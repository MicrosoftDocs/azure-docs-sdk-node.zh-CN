### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig
    name: SpeechConfig
    fullName: SpeechConfig
    children:
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.authorizationToken
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.close
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.endpointId
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.fromAuthorizationToken
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.fromEndpoint
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.fromSubscription
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.getProperty
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.outputFormat
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.setProperty
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.setProxy
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.setProxy_1
      - microsoft-cognitiveservices-speech-sdk.SpeechConfig.speechRecognitionLanguage
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="d84aa-101">语音配置。</span><span class="sxs-lookup"><span data-stu-id="d84aa-101">Speech configuration.</span></span>
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.authorizationToken
    name: authorizationToken
    fullName: authorizationToken
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="d84aa-102">获取/设置授权令牌。</span><span class="sxs-lookup"><span data-stu-id="d84aa-102">Gets/Sets the authorization token.</span></span>
      <span data-ttu-id="d84aa-103">请注意:调用方需要确保授权令牌的有效期。</span><span class="sxs-lookup"><span data-stu-id="d84aa-103">Note: The caller needs to ensure that the authorization token is valid.</span></span> <span data-ttu-id="d84aa-104">授权令牌过期之前，调用方需要通过调用此资源库与新的有效令牌刷新。</span><span class="sxs-lookup"><span data-stu-id="d84aa-104">Before the authorization token expires, the caller needs to refresh it by calling this setter with a new valid token.</span></span>
    syntax:
      content: 'public authorizationToken: string'
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.close
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d84aa-105">关闭该配置。</span><span class="sxs-lookup"><span data-stu-id="d84aa-105">Closes the configuration.</span></span>
    syntax:
      content: function close()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.endpointId
    name: endpointId
    fullName: endpointId
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="d84aa-106">获取/设置用于语音识别的自定义的语音模型的终结点 ID。</span><span class="sxs-lookup"><span data-stu-id="d84aa-106">Gets/Sets the endpoint ID of a customized speech model that is used for speech recognition.</span></span>
    syntax:
      content: 'public endpointId: string'
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.fromAuthorizationToken
    name: 'fromAuthorizationToken(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d84aa-107">使用指定的初始授权令牌和区域创建语音工厂的实例。</span><span class="sxs-lookup"><span data-stu-id="d84aa-107">Creates an instance of the speech factory with specified initial authorization token and region.</span></span>
      <span data-ttu-id="d84aa-108">请注意:调用方需要确保授权令牌的有效期。</span><span class="sxs-lookup"><span data-stu-id="d84aa-108">Note: The caller needs to ensure that the authorization token is valid.</span></span> <span data-ttu-id="d84aa-109">授权令牌过期之前，调用方需要通过调用此资源库与新的有效令牌刷新。</span><span class="sxs-lookup"><span data-stu-id="d84aa-109">Before the authorization token expires, the caller needs to refresh it by calling this setter with a new valid token.</span></span>
      <span data-ttu-id="d84aa-110">请注意:请使用派生自 LanguageUnderstanding 订阅密钥，以防你想要使用意向识别器的令牌。</span><span class="sxs-lookup"><span data-stu-id="d84aa-110">Note: Please use a token derived from your LanguageUnderstanding subscription key in case you want to use the Intent recognizer.</span></span> <span data-ttu-id="d84aa-111">复制配置值时创建新的识别器时，新的令牌值不会应用到已创建的识别器。</span><span class="sxs-lookup"><span data-stu-id="d84aa-111">As configuration values are copied when creating a new recognizer, the new token value will not apply to recognizers that have already been created.</span></span> <span data-ttu-id="d84aa-112">对于以前创建的识别器，需要设置相应的识别器来刷新令牌的授权令牌。</span><span class="sxs-lookup"><span data-stu-id="d84aa-112">For recognizers that have been created before, you need to set authorization token of the corresponding recognizer to refresh the token.</span></span> <span data-ttu-id="d84aa-113">否则，识别程序将识别过程中会遇到错误。</span><span class="sxs-lookup"><span data-stu-id="d84aa-113">Otherwise, the recognizers will encounter errors during recognition.</span></span>
    syntax:
      content: 'static function fromAuthorizationToken(authorizationToken: string, region: string)'
      parameters:
        - id: authorizationToken
          type:
            - string
          description: <span data-ttu-id="d84aa-114">初始授权令牌。</span><span class="sxs-lookup"><span data-stu-id="d84aa-114">The initial authorization token.</span></span>
        - id: region
          type:
            - string
          description: '<span data-ttu-id="d84aa-115">区域名称 (请参阅<a href="https://aka.ms/csspeech/region">区域页</a>)。</span><span class="sxs-lookup"><span data-stu-id="d84aa-115">The region name (see the <a href="https://aka.ms/csspeech/region">region page</a>).</span></span>'
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.SpeechConfig
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.fromEndpoint
    name: 'fromEndpoint(URL, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d84aa-116">使用指定的终结点和订阅密钥创建语音配置的实例。</span><span class="sxs-lookup"><span data-stu-id="d84aa-116">Creates an instance of the speech config with specified endpoint and subscription key.</span></span>
      <span data-ttu-id="d84aa-117">此方法仅供用户使用非标准的服务终结点或参数。</span><span class="sxs-lookup"><span data-stu-id="d84aa-117">This method is intended only for users who use a non-standard service endpoint or parameters.</span></span>
      <span data-ttu-id="d84aa-118">请注意:请如果你想要使用意向识别器，使用 LanguageUnderstanding 订阅密钥。</span><span class="sxs-lookup"><span data-stu-id="d84aa-118">Note: Please use your LanguageUnderstanding subscription key in case you want to use the Intent recognizer.</span></span>
      <span data-ttu-id="d84aa-119">请注意:终结点 URL 中指定的查询参数不会更改，即使它们设置的任何其他 Api。</span><span class="sxs-lookup"><span data-stu-id="d84aa-119">Note: The query parameters specified in the endpoint URL are not changed, even if they are set by any other APIs.</span></span>
      <span data-ttu-id="d84aa-120">例如，如果在 uri 查询参数的形式定义语言"语言 = DE-DE"，并且也由 SpeechConfig.speechRecognitionLanguage ="EN-US"，uri 中的语言设置将优先，和有效的语言是"DE-DE"。</span><span class="sxs-lookup"><span data-stu-id="d84aa-120">For example, if language is defined in the uri as query parameter "language=de-DE", and also set by SpeechConfig.speechRecognitionLanguage = "en-US", the language setting in uri takes precedence, and the effective language is "de-DE".</span></span> <span data-ttu-id="d84aa-121">参数未指定终结点中的 URL 可以通过其他 Api 设置。</span><span class="sxs-lookup"><span data-stu-id="d84aa-121">Only the parameters that are not specified in the endpoint URL can be set by other APIs.</span></span>
      <span data-ttu-id="d84aa-122">请注意:若要使用具有 fromEndpoint 授权令牌，将为空字符串传递给 subscriptionKey 在 fromEndpoint 方法中，并将 authorizationToken = 要使用的授权令牌的创建 SpeechConfig 实例上的"令牌"。</span><span class="sxs-lookup"><span data-stu-id="d84aa-122">Note: To use authorization token with fromEndpoint, pass an empty string to the subscriptionKey in the fromEndpoint method, and then set authorizationToken="token" on the created SpeechConfig instance to use the authorization token.</span></span>
    syntax:
      content: 'static function fromEndpoint(endpoint: URL, subscriptionKey: string)'
      parameters:
        - id: endpoint
          type:
            - URL
          description: <span data-ttu-id="d84aa-123">若要连接到服务终结点。</span><span class="sxs-lookup"><span data-stu-id="d84aa-123">The service endpoint to connect to.</span></span>
        - id: subscriptionKey
          type:
            - string
          description: <span data-ttu-id="d84aa-124">订阅密钥。</span><span class="sxs-lookup"><span data-stu-id="d84aa-124">The subscription key.</span></span>
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.SpeechConfig
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.fromSubscription
    name: 'fromSubscription(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d84aa-125">返回通过将传递 subscriptionKey 和服务的区域的 SpeechConfig 静态实例。</span><span class="sxs-lookup"><span data-stu-id="d84aa-125">Static instance of SpeechConfig returned by passing subscriptionKey and service region.</span></span>
      <span data-ttu-id="d84aa-126">请注意:请如果你想要使用意向识别器，使用 LanguageUnderstanding 订阅密钥。</span><span class="sxs-lookup"><span data-stu-id="d84aa-126">Note: Please use your LanguageUnderstanding subscription key in case you want to use the Intent recognizer.</span></span>
    syntax:
      content: 'static function fromSubscription(subscriptionKey: string, region: string)'
      parameters:
        - id: subscriptionKey
          type:
            - string
          description: <span data-ttu-id="d84aa-127">订阅密钥。</span><span class="sxs-lookup"><span data-stu-id="d84aa-127">The subscription key.</span></span>
        - id: region
          type:
            - string
          description: '<span data-ttu-id="d84aa-128">区域名称 (请参阅<a href="https://aka.ms/csspeech/region">区域页</a>)。</span><span class="sxs-lookup"><span data-stu-id="d84aa-128">The region name (see the <a href="https://aka.ms/csspeech/region">region page</a>).</span></span>'
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.SpeechConfig
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.getProperty
    name: 'getProperty(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d84aa-129">返回的任意属性的当前值。</span><span class="sxs-lookup"><span data-stu-id="d84aa-129">Returns the current value of an arbitrary property.</span></span>
    syntax:
      content: 'function getProperty(name: string, def?: string)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="d84aa-130">查询到的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="d84aa-130">The name of the property to query.</span></span>
        - id: def
          type:
            - string
          description: <span data-ttu-id="d84aa-131">要在不知道该属性的情况下返回的值。</span><span class="sxs-lookup"><span data-stu-id="d84aa-131">The value to return in case the property is not known.</span></span>
          optional: true
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.outputFormat
    name: outputFormat
    fullName: outputFormat
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="d84aa-132">获取/设置输出格式。</span><span class="sxs-lookup"><span data-stu-id="d84aa-132">Gets/Sets the output format.</span></span>
    syntax:
      content: 'public outputFormat: OutputFormat'
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.OutputFormat
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.setProperty
    name: 'setProperty(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d84aa-133">设置任意属性。</span><span class="sxs-lookup"><span data-stu-id="d84aa-133">Sets an arbitrary property.</span></span>
    syntax:
      content: 'function setProperty(name: string, value: string)'
      parameters:
        - id: name
          type:
            - string
          description: <span data-ttu-id="d84aa-134">要设置的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="d84aa-134">The name of the property to set.</span></span>
        - id: value
          type:
            - string
          description: |
            <span data-ttu-id="d84aa-135">属性的新值。</span><span class="sxs-lookup"><span data-stu-id="d84aa-135">The new value of the property.</span></span>
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.setProxy
    name: 'setProxy(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d84aa-136">设置代理配置。</span><span class="sxs-lookup"><span data-stu-id="d84aa-136">Sets the proxy configuration.</span></span>
      <span data-ttu-id="d84aa-137">仅适用于 Node.js 的环境。</span><span class="sxs-lookup"><span data-stu-id="d84aa-137">Only relevant in Node.js environments.</span></span>
      <span data-ttu-id="d84aa-138">版本 1.4.0 中添加了。</span><span class="sxs-lookup"><span data-stu-id="d84aa-138">Added in version 1.4.0.</span></span>
    syntax:
      content: 'function setProxy(proxyHostName: string, proxyPort: number)'
      parameters:
        - id: proxyHostName
          type:
            - string
          description: <span data-ttu-id="d84aa-139">代理服务器的主机名。</span><span class="sxs-lookup"><span data-stu-id="d84aa-139">The host name of the proxy server.</span></span>
        - id: proxyPort
          type:
            - number
          description: |
            <span data-ttu-id="d84aa-140">代理服务器的端口号。</span><span class="sxs-lookup"><span data-stu-id="d84aa-140">The port number of the proxy server.</span></span>
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.setProxy_1
    name: 'setProxy(string, number, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="d84aa-141">设置代理配置。</span><span class="sxs-lookup"><span data-stu-id="d84aa-141">Sets the proxy configuration.</span></span>
      <span data-ttu-id="d84aa-142">仅适用于 Node.js 的环境。</span><span class="sxs-lookup"><span data-stu-id="d84aa-142">Only relevant in Node.js environments.</span></span>
      <span data-ttu-id="d84aa-143">版本 1.4.0 中添加了。</span><span class="sxs-lookup"><span data-stu-id="d84aa-143">Added in version 1.4.0.</span></span>
    syntax:
      content: 'function setProxy(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string)'
      parameters:
        - id: proxyHostName
          type:
            - string
          description: '<span data-ttu-id="d84aa-144">主机名的代理服务器，而无需协议方案 (http://)</span><span class="sxs-lookup"><span data-stu-id="d84aa-144">The host name of the proxy server, without the protocol scheme (http://)</span></span>'
        - id: proxyPort
          type:
            - number
          description: ''
        - id: proxyUserName
          type:
            - string
          description: <span data-ttu-id="d84aa-145">代理服务器的用户名。</span><span class="sxs-lookup"><span data-stu-id="d84aa-145">The user name of the proxy server.</span></span>
        - id: proxyPassword
          type:
            - string
          description: |
            <span data-ttu-id="d84aa-146">代理服务器的密码。</span><span class="sxs-lookup"><span data-stu-id="d84aa-146">The password of the proxy server.</span></span>
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig.speechRecognitionLanguage
    name: speechRecognitionLanguage
    fullName: speechRecognitionLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="d84aa-147">获取/设置的输入的语言。</span><span class="sxs-lookup"><span data-stu-id="d84aa-147">Gets/Sets the input language.</span></span>
    syntax:
      content: 'public speechRecognitionLanguage: string'
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.OutputFormat
    name: OutputFormat
    spec.typeScript:
      - name: OutputFormat
        fullName: OutputFormat
        uid: microsoft-cognitiveservices-speech-sdk.OutputFormat
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig
    name: SpeechConfig
    spec.typeScript:
      - name: SpeechConfig
        fullName: SpeechConfig
        uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig