### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.GroupUser'
    name: GroupUser
    fullName: GroupUser
    children:
      - '@azure/arm-apimanagement.GroupUser.checkEntityExists'
      - '@azure/arm-apimanagement.GroupUser.checkEntityExists_2'
      - '@azure/arm-apimanagement.GroupUser.checkEntityExists_1'
      - '@azure/arm-apimanagement.GroupUser.create'
      - '@azure/arm-apimanagement.GroupUser.create_2'
      - '@azure/arm-apimanagement.GroupUser.create_1'
      - '@azure/arm-apimanagement.GroupUser.deleteMethod'
      - '@azure/arm-apimanagement.GroupUser.deleteMethod_2'
      - '@azure/arm-apimanagement.GroupUser.deleteMethod_1'
      - '@azure/arm-apimanagement.GroupUser.constructor'
      - '@azure/arm-apimanagement.GroupUser.list_2'
      - '@azure/arm-apimanagement.GroupUser.list'
      - '@azure/arm-apimanagement.GroupUser.list_1'
      - '@azure/arm-apimanagement.GroupUser.listNext'
      - '@azure/arm-apimanagement.GroupUser.listNext_2'
      - '@azure/arm-apimanagement.GroupUser.listNext_1'
    langs:
      - typeScript
    type: class
    summary: 表示 GroupUser 类。
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.checkEntityExists'
    name: 'checkEntityExists(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 检查用户实体标识符指定为与组实体相关联。
    syntax:
      content: 'function checkEntityExists(resourceGroupName: string, serviceName: string, groupId: string, userId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: groupId
          type:
            - string
          description: 组标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: userId
          type:
            - string
          description: 用户标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GroupUserCheckEntityExistsResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.checkEntityExists_2'
    name: 'checkEntityExists(string, string, string, string, RequestOptionsBase, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkEntityExists(resourceGroupName: string, serviceName: string, groupId: string, userId: string, options: RequestOptionsBase, callback: ServiceCallback<boolean>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: groupId
          type:
            - string
          description: 组标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: userId
          type:
            - string
          description: 用户标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            回调
      return:
        type:
          - Promise<Models.GroupUserCheckEntityExistsResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.checkEntityExists_1'
    name: 'checkEntityExists(string, string, string, string, ServiceCallback<boolean>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkEntityExists(resourceGroupName: string, serviceName: string, groupId: string, userId: string, callback: ServiceCallback<boolean>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: groupId
          type:
            - string
          description: 组标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: userId
          type:
            - string
          description: 用户标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: callback
          type:
            - ServiceCallback<boolean>
          description: |
            回调
      return:
        type:
          - Promise<Models.GroupUserCheckEntityExistsResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.create'
    name: 'create(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 将现有用户添加到现有组
    syntax:
      content: 'function create(resourceGroupName: string, serviceName: string, groupId: string, userId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: groupId
          type:
            - string
          description: 组标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: userId
          type:
            - string
          description: 用户标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GroupUserCreateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.create_2'
    name: 'create(string, string, string, string, RequestOptionsBase, ServiceCallback<UserContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(resourceGroupName: string, serviceName: string, groupId: string, userId: string, options: RequestOptionsBase, callback: ServiceCallback<UserContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: groupId
          type:
            - string
          description: 组标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: userId
          type:
            - string
          description: 用户标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.UserContract>
          description: |
            回调
      return:
        type:
          - Promise<Models.GroupUserCreateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.create_1'
    name: 'create(string, string, string, string, ServiceCallback<UserContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(resourceGroupName: string, serviceName: string, groupId: string, userId: string, callback: ServiceCallback<UserContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: groupId
          type:
            - string
          description: 组标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: userId
          type:
            - string
          description: 用户标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.UserContract>
          description: |
            回调
      return:
        type:
          - Promise<Models.GroupUserCreateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.deleteMethod'
    name: 'deleteMethod(string, string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 从现有组中删除现有用户。
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, groupId: string, userId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: groupId
          type:
            - string
          description: 组标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: userId
          type:
            - string
          description: 用户标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.deleteMethod_2'
    name: 'deleteMethod(string, string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, groupId: string, userId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: groupId
          type:
            - string
          description: 组标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: userId
          type:
            - string
          description: 用户标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.deleteMethod_1'
    name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, groupId: string, userId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: groupId
          type:
            - string
          description: 组标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: userId
          type:
            - string
          description: 用户标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.constructor'
    name: GroupUser(ApiManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: 创建 GroupUser。
    syntax:
      content: 'new GroupUser(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-apimanagement.ApiManagementClientContext'
          description: |
            对服务客户端的引用。
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.list_2'
    name: 'list(string, string, string, GroupUserListOptionalParams, ServiceCallback<UserCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(resourceGroupName: string, serviceName: string, groupId: string, options: GroupUserListOptionalParams, callback: ServiceCallback<UserCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: groupId
          type:
            - string
          description: 组标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: options
          type:
            - '@azure/arm-apimanagement.GroupUserListOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.UserCollection>
          description: |
            回调
      return:
        type:
          - Promise<Models.GroupUserListResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.list'
    name: 'list(string, string, string, Models.GroupUserListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 列出与组关联的用户实体集合。
    syntax:
      content: 'function list(resourceGroupName: string, serviceName: string, groupId: string, options?: Models.GroupUserListOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: groupId
          type:
            - string
          description: 组标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: options
          type:
            - Models.GroupUserListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GroupUserListResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.list_1'
    name: 'list(string, string, string, ServiceCallback<UserCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(resourceGroupName: string, serviceName: string, groupId: string, callback: ServiceCallback<UserCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: serviceName
          type:
            - string
          description: API 管理服务的名称。
        - id: groupId
          type:
            - string
          description: 组标识符。 必须是当前 API 管理服务实例中唯一的。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.UserCollection>
          description: |
            回调
      return:
        type:
          - Promise<Models.GroupUserListResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 列出与组关联的用户实体集合。
    syntax:
      content: 'function listNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 从上一个成功调用 List 操作 NextLink。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GroupUserListNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<UserCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<UserCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 从上一个成功调用 List 操作 NextLink。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.UserCollection>
          description: |
            回调
      return:
        type:
          - Promise<Models.GroupUserListNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.GroupUser.listNext_1'
    name: 'listNext(string, ServiceCallback<UserCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, callback: ServiceCallback<UserCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 从上一个成功调用 List 操作 NextLink。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.UserCollection>
          description: |
            回调
      return:
        type:
          - Promise<Models.GroupUserListNextResponse>
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.ApiManagementClientContext'
    name: ApiManagementClientContext
    spec.typeScript:
      - name: ApiManagementClientContext
        fullName: ApiManagementClientContext
        uid: '@azure/arm-apimanagement.ApiManagementClientContext'
  - uid: ServiceCallback<@azure/arm-apimanagement.UserContract>
    name: UserContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UserContract
        fullName: UserContract
        uid: '@azure/arm-apimanagement.UserContract'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-apimanagement.UserCollection>
    name: UserCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: UserCollection
        fullName: UserCollection
        uid: '@azure/arm-apimanagement.UserCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.GroupUserListOptionalParams'
    name: GroupUserListOptionalParams
    spec.typeScript:
      - name: GroupUserListOptionalParams
        fullName: GroupUserListOptionalParams
        uid: '@azure/arm-apimanagement.GroupUserListOptionalParams'