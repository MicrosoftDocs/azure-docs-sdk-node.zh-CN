### YamlMime:UniversalReference
ms.openlocfilehash: ed7f92526f273477e153fad3fe0ab03db0704f34
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 12/13/2018
ms.locfileid: "52104222"
items:
- uid: '@azure/event-processor-host.LeaseManager'
  name: LeaseManager
  fullName: LeaseManager
  children:
  - '@azure/event-processor-host.LeaseManager.acquireLease'
  - '@azure/event-processor-host.LeaseManager.createAllLeasesIfNotExists'
  - '@azure/event-processor-host.LeaseManager.createLeaseStoreIfNotExists'
  - '@azure/event-processor-host.LeaseManager.deleteLease'
  - '@azure/event-processor-host.LeaseManager.deleteLeaseStore'
  - '@azure/event-processor-host.LeaseManager.getAllLeases'
  - '@azure/event-processor-host.LeaseManager.getLease'
  - '@azure/event-processor-host.LeaseManager.leaseDuration'
  - '@azure/event-processor-host.LeaseManager.leaseRenewInterval'
  - '@azure/event-processor-host.LeaseManager.leaseStoreExists'
  - '@azure/event-processor-host.LeaseManager.releaseLease'
  - '@azure/event-processor-host.LeaseManager.renewLease'
  - '@azure/event-processor-host.LeaseManager.updateLease'
  langs:
  - typeScript
  type: interface
  summary: ''
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.acquireLease'
  name: acquireLease(CompleteLease)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="d796a-101">为此 EventProcessorHost 获取所需的分区上的租约。</span><span class="sxs-lookup"><span data-stu-id="d796a-101">Acquire the lease on the desired partition for this EventProcessorHost.</span></span>

    <span data-ttu-id="d796a-102">请注意，法律以获取已拥有的另一台主机的租约。</span><span class="sxs-lookup"><span data-stu-id="d796a-102">Note that it is legal to acquire a lease that is already owned by another host.</span></span>

    <span data-ttu-id="d796a-103">租约窃取是如何分区会重新分发时启动其他主机。</span><span class="sxs-lookup"><span data-stu-id="d796a-103">Lease-stealing is how partitions are redistributed when additional hosts are started.</span></span>


    <span data-ttu-id="d796a-104">现有的 Azure 存储实现，可能会尝试获取或窃取该租约在同一时间的两个主机实例之间的资源争用。</span><span class="sxs-lookup"><span data-stu-id="d796a-104">The existing Azure Storage implementation can experience races between two host instances attempting to acquire or steal the lease at the same time.</span></span> <span data-ttu-id="d796a-105">若要避免其中两个主机实例的情况下同时相信他们所拥有租约，采集可能会失败且未出错返回 false 和应执行此操作没有主机实例时无法确定--可能发生的最坏情况是，拥有在短时间的租约。</span><span class="sxs-lookup"><span data-stu-id="d796a-105">To avoid situations where two host instances both believe that they own the lease, acquisition can fail without errors by returning false and should do so when there is any doubt -- the worst that can happen is that no host instance owns the lease for a short time.</span></span> <span data-ttu-id="d796a-106">这与质量不同，例如，基础存储区引发的访问异常，这是一个错误。</span><span class="sxs-lookup"><span data-stu-id="d796a-106">This is qualitatively different from, for example, the underlying store throwing an access exception, which is an error.</span></span>
  syntax:
    content: 'function acquireLease(lease: CompleteLease)'
    parameters:
    - id: lease
      type:
      - '@azure/event-processor-host.CompleteLease'
      description: <span data-ttu-id="d796a-107">租用信息从以前获取的所需分区`getLease()`。</span><span class="sxs-lookup"><span data-stu-id="d796a-107">Lease info for the desired partition as previously obtained from `getLease()`.</span></span>
    return:
      type:
      - Promise<boolean>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.createAllLeasesIfNotExists'
  name: createAllLeasesIfNotExists(string[])
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d796a-108">在存储中创建的给定分区的租约信息如果不存在。</span><span class="sxs-lookup"><span data-stu-id="d796a-108">Create in the store the lease info for the given partition, if it does not exist.</span></span> <span data-ttu-id="d796a-109">如果确实存储区中已存在，不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="d796a-109">Do nothing if it does exist in the store already.</span></span>
  syntax:
    content: 'function createAllLeasesIfNotExists(partitionIds: string[])'
    parameters:
    - id: partitionIds
      type:
      - string[]
      description: <span data-ttu-id="d796a-110">要创建租约信息的分区的 id</span><span class="sxs-lookup"><span data-stu-id="d796a-110">ids of partitions to create lease info for</span></span>
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.createLeaseStoreIfNotExists'
  name: createLeaseStoreIfNotExists()
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d796a-111">如果不存在，请创建租约存储。</span><span class="sxs-lookup"><span data-stu-id="d796a-111">Create the lease store if it doesn't exist.</span></span> <span data-ttu-id="d796a-112">如果存在，不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="d796a-112">Do nothing if it does exist.</span></span>
  syntax:
    content: function createLeaseStoreIfNotExists()
    parameters: []
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.deleteLease'
  name: deleteLease(CompleteLease)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d796a-113">从存储中删除给定分区的租约信息。</span><span class="sxs-lookup"><span data-stu-id="d796a-113">Delete the lease info for the given partition from the store.</span></span> <span data-ttu-id="d796a-114">如果没有存储对于给定的分区，被视为成功的租约。</span><span class="sxs-lookup"><span data-stu-id="d796a-114">If there is no stored lease for the given partition, that is treated as success.</span></span>
  syntax:
    content: 'function deleteLease(lease: CompleteLease)'
    parameters:
    - id: lease
      type:
      - '@azure/event-processor-host.CompleteLease'
      description: <span data-ttu-id="d796a-115">租用信息从以前获取的所需分区`getLease()`。</span><span class="sxs-lookup"><span data-stu-id="d796a-115">Lease info for the desired partition as previously obtained from `getLease()`.</span></span>
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.deleteLeaseStore'
  name: deleteLeaseStore()
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d796a-116">删除租约存储。</span><span class="sxs-lookup"><span data-stu-id="d796a-116">Delete lease store.</span></span>
  syntax:
    content: function deleteLeaseStore()
    parameters: []
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.getAllLeases'
  name: getAllLeases()
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d796a-117">返回所有租用，轻型的 BaseLease，其中包括拥有主机和是否过期租约的名称。</span><span class="sxs-lookup"><span data-stu-id="d796a-117">Returns lightweight BaseLease for all leases, which includes name of owning host and whether lease is expired.</span></span> <span data-ttu-id="d796a-118">实现返回 CompleteLease 或其自己的类派生自 CompleteLease，但务必 getAllLeases 尽可能快运行。</span><span class="sxs-lookup"><span data-stu-id="d796a-118">An implementation is free to return CompleteLease or its own class derived from CompleteLease, but it is important that getAllLeases run as fast as possible.</span></span> <span data-ttu-id="d796a-119">如果是更快地获取仅 BaseLease 所需的信息，我们很大程度建议执行该操作。</span><span class="sxs-lookup"><span data-stu-id="d796a-119">If it is faster to obtain only the information required for a BaseLease, we heavily recommend doing that.</span></span>
  syntax:
    content: function getAllLeases()
    parameters: []
    return:
      type:
      - Promise<@azure/event-processor-host.BaseLease[]>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.getLease'
  name: getLease(string)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d796a-120">获取指定的分区的租约信息。</span><span class="sxs-lookup"><span data-stu-id="d796a-120">Gets the lease info for the specified partition.</span></span> <span data-ttu-id="d796a-121">可以返回`undefined`如果指定的分区的存储区中创建了没有租约。</span><span class="sxs-lookup"><span data-stu-id="d796a-121">Can return `undefined` if no lease has been created in the store for the specified partition.</span></span>
  syntax:
    content: 'function getLease(partitionId: string)'
    parameters:
    - id: partitionId
      type:
      - string
      description: <span data-ttu-id="d796a-122">要获取的租约的分区 id。</span><span class="sxs-lookup"><span data-stu-id="d796a-122">Partition id to get the lease for.</span></span>
    return:
      type:
      - Promise<@azure/event-processor-host.CompleteLease | undefined>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.leaseDuration'
  name: leaseDuration
  fullName: leaseDuration
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="d796a-123">{number} leaseDuration 的租约持续时间**以秒为单位**除非续订过期之前。</span><span class="sxs-lookup"><span data-stu-id="d796a-123">{number} leaseDuration Duration of a lease **in seconds** before it expires unless renewed.</span></span>
  syntax:
    content: 'leaseDuration: number'
    return:
      type:
      - number
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.leaseRenewInterval'
  name: leaseRenewInterval
  fullName: leaseRenewInterval
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    <span data-ttu-id="d796a-124">{number} leaseRenewInterval 的休眠时间间隔**以秒为单位**扫描之间。</span><span class="sxs-lookup"><span data-stu-id="d796a-124">{number} leaseRenewInterval The sleep interval **in seconds** between scans.</span></span>


    <span data-ttu-id="d796a-125">允许指定到 PartitionManager 何种频率应扫描租约并续订其租约管理器实现。</span><span class="sxs-lookup"><span data-stu-id="d796a-125">Allows a lease manager implementation to specify to PartitionManager how often it should scan leases and renew them.</span></span> <span data-ttu-id="d796a-126">若要重新分发及时的租约，主机将停止运行后，我们建议相对较短的时间间隔，如十秒。</span><span class="sxs-lookup"><span data-stu-id="d796a-126">In order to redistribute leases in a timely fashion after a host ceases operating, we recommend a relatively short interval, such as ten seconds.</span></span> <span data-ttu-id="d796a-127">显然它应该是不到一半的租约时间，以防止意外过期。</span><span class="sxs-lookup"><span data-stu-id="d796a-127">Obviously it should be less than half of the lease length, to prevent accidental expiration.</span></span>
  syntax:
    content: 'leaseRenewInterval: number'
    return:
      type:
      - number
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.leaseStoreExists'
  name: leaseStoreExists()
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d796a-128">是否存在租约应用商店？</span><span class="sxs-lookup"><span data-stu-id="d796a-128">Does the lease store exist?</span></span>
  syntax:
    content: function leaseStoreExists()
    parameters: []
    return:
      type:
      - Promise<boolean>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.releaseLease'
  name: releaseLease(CompleteLease)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="d796a-129">放弃当前持有此主机的租约。</span><span class="sxs-lookup"><span data-stu-id="d796a-129">Give up a lease currently held by this host.</span></span>

    <span data-ttu-id="d796a-130">如果已被盗或已过期租约，释放它是不必要的并且如果尝试将失败。</span><span class="sxs-lookup"><span data-stu-id="d796a-130">If the lease has been stolen, or expired, releasing it is unnecessary, and will fail if attempted.</span></span>
  syntax:
    content: 'function releaseLease(lease: CompleteLease)'
    parameters:
    - id: lease
      type:
      - '@azure/event-processor-host.CompleteLease'
      description: <span data-ttu-id="d796a-131">租用信息从以前获取的所需分区`getLease()`。</span><span class="sxs-lookup"><span data-stu-id="d796a-131">Lease info for the desired partition as previously obtained from `getLease()`.</span></span>
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.renewLease'
  name: renewLease(CompleteLease)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="d796a-132">续订当前持有此主机的租约。</span><span class="sxs-lookup"><span data-stu-id="d796a-132">Renew a lease currently held by this host.</span></span>

    <span data-ttu-id="d796a-133">如果已执行的另一个主机实例 （被盗或到期后） 或显式释放租约，renewLease 必须返回 false。</span><span class="sxs-lookup"><span data-stu-id="d796a-133">If the lease has been taken by another host instance (either stolen or after expiration) or explicitly released, renewLease must return false.</span></span> <span data-ttu-id="d796a-134">使用基于 Azure 存储的实现中，则可以续订已过期的租约不已被另一台主机，因此您的实现，可允许的两者中较方便。</span><span class="sxs-lookup"><span data-stu-id="d796a-134">With the Azure Storage-based implementation, it IS possible to renew an expired lease that has not been taken by another host, so your implementation can allow that or not, whichever is convenient.</span></span> <span data-ttu-id="d796a-135">如果未显示，renewLease 应返回 false。</span><span class="sxs-lookup"><span data-stu-id="d796a-135">If it does not, renewLease should return false.</span></span>
  syntax:
    content: 'function renewLease(lease: CompleteLease)'
    parameters:
    - id: lease
      type:
      - '@azure/event-processor-host.CompleteLease'
      description: <span data-ttu-id="d796a-136">若要续订的租约。</span><span class="sxs-lookup"><span data-stu-id="d796a-136">lease to be renewed.</span></span>
    return:
      type:
      - Promise<boolean>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.updateLease'
  name: updateLease(CompleteLease)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="d796a-137">更新存储区中提供的租用的信息。</span><span class="sxs-lookup"><span data-stu-id="d796a-137">Update the store with the information in the provided lease.</span></span>

    <span data-ttu-id="d796a-138">它是当前保留租约来更新它所需。</span><span class="sxs-lookup"><span data-stu-id="d796a-138">It is necessary to currently hold a lease in order to update it.</span></span> <span data-ttu-id="d796a-139">如果该租约已经被盗，或已过期或已发布，因此无法对其进行更新。</span><span class="sxs-lookup"><span data-stu-id="d796a-139">If the lease has been stolen, or expired, or released, it cannot be updated.</span></span> <span data-ttu-id="d796a-140">租约管理器实现应在执行更新，以避免在过程中的租约过期之前续订租约。</span><span class="sxs-lookup"><span data-stu-id="d796a-140">Lease manager implementations should renew the lease before performing the update to avoid lease expiration during the process.</span></span>
  syntax:
    content: 'function updateLease(lease: CompleteLease)'
    parameters:
    - id: lease
      type:
      - '@azure/event-processor-host.CompleteLease'
      description: <span data-ttu-id="d796a-141">要存储的新租约信息。</span><span class="sxs-lookup"><span data-stu-id="d796a-141">New lease information to be stored.</span></span>
    return:
      type:
      - Promise<boolean>
  package: '@azure/event-processor-host'
references:
- uid: '@azure/event-processor-host.CompleteLease'
  name: CompleteLease
  spec.typeScript:
  - name: CompleteLease
    fullName: CompleteLease
    uid: '@azure/event-processor-host.CompleteLease'
- uid: Promise<@azure/event-processor-host.BaseLease[]>
  name: BaseLease[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: BaseLease
    fullName: BaseLease
    uid: '@azure/event-processor-host.BaseLease'
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<@azure/event-processor-host.CompleteLease | undefined>
  name: CompleteLease | undefined>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CompleteLease
    fullName: CompleteLease
    uid: '@azure/event-processor-host.CompleteLease'
  - name: " | undefined>"
    fullName: " | undefined>"
