### YamlMime:UniversalReference
ms.openlocfilehash: c498376468484e0299280e5468ad24cdafd77fdd
ms.sourcegitcommit: ce76ec3eda83746ef9a765165173b5c00b5b7df6
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 12/20/2018
ms.locfileid: "53675001"
items:
- uid: azure-iothub.Twin
  name: Twin
  fullName: Twin
  children:
  - azure-iothub.Twin.deviceId
  - azure-iothub.Twin.etag
  - azure-iothub.Twin.get_1
  - azure-iothub.Twin.get
  - azure-iothub.Twin.moduleId
  - azure-iothub.Twin.properties
  - azure-iothub.Twin.tags
  - azure-iothub.Twin.toJSON
  - azure-iothub.Twin.constructor
  - azure-iothub.Twin.update_1
  - azure-iothub.Twin.update
  langs:
  - typeScript
  type: class
  summary: >
    <span data-ttu-id="db50c-101">设备孪生是设备的文档，用于描述存储通过 Azure IoT 中心，即使设备处于脱机状态也是设备的可用的状态。</span><span class="sxs-lookup"><span data-stu-id="db50c-101">A Device Twin is document describing the state of a device that is stored by an Azure IoT hub and is available even if the device is offline.</span></span>

    <span data-ttu-id="db50c-102">它构建大约 3 个部分：</span><span class="sxs-lookup"><span data-stu-id="db50c-102">It is built around 3 sections:</span></span>
      - <span data-ttu-id="db50c-103">标记： 键/值对从服务端只能访问</span><span class="sxs-lookup"><span data-stu-id="db50c-103">Tags: key/value pairs only accessible from the service side</span></span>
      - <span data-ttu-id="db50c-104">所需属性： 更新服务和接收的设备</span><span class="sxs-lookup"><span data-stu-id="db50c-104">Desired Properties: updated by a service and received by the device</span></span>
      - <span data-ttu-id="db50c-105">报告的属性： 更新设备和服务接收。</span><span class="sxs-lookup"><span data-stu-id="db50c-105">Reported Properties: updated by the device and received by the service.</span></span>
    <span data-ttu-id="db50c-106">请注意，尽管存在这种可能，但属性所需和报告属性并不一定要匹配的逻辑来同步这两个集合，如有必要，为从左到 SDK 的用户。</span><span class="sxs-lookup"><span data-stu-id="db50c-106">Note that although it is a possibility, desired and reported properties do not have to match and that the logic to sync these two collections, if necessary, is left to the user of the SDK.</span></span>


    <span data-ttu-id="db50c-107">有关详细信息请参阅[了解设备孪生](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-device-twins)。</span><span class="sxs-lookup"><span data-stu-id="db50c-107">For more information see [Understanding Device Twins](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-device-twins).</span></span>


    <span data-ttu-id="db50c-108">若要获取的建议<xref:azure-iothub.Twin>特定的设备是使用<xref:azure-iothub.Registry.getTwin>方法。</span><span class="sxs-lookup"><span data-stu-id="db50c-108">The recommended way to obtain a <xref:azure-iothub.Twin> for a specific device is to use the <xref:azure-iothub.Registry.getTwin> method.</span></span>
  package: azure-iothub
- uid: azure-iothub.Twin.deviceId
  name: deviceId
  fullName: deviceId
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="db50c-109">设备标识注册表中存在与孪生，关联的设备标识的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="db50c-109">Unique identifier of the device identity associated with the twin, as it exists in the device identity registry.</span></span>
  syntax:
    content: 'deviceId: string'
    return:
      type:
      - string
  package: azure-iothub
- uid: azure-iothub.Twin.etag
  name: etag
  fullName: etag
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="db50c-110">在开放式并发用于避免多个并行版本的设备孪生的标记。</span><span class="sxs-lookup"><span data-stu-id="db50c-110">Tag used in optimistic concurrency to avoid multiple parallel editions of the device twin.</span></span>
  syntax:
    content: 'etag: string'
    return:
      type:
      - string
  package: azure-iothub
- uid: azure-iothub.Twin.get_1
  name: get()
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="db50c-111">从 IoT 中心服务获取此设备孪生的最新版本。</span><span class="sxs-lookup"><span data-stu-id="db50c-111">Gets the latest version of this device twin from the IoT Hub service.</span></span>
  syntax:
    content: function get()
    parameters: []
    return:
      type:
      - Promise<azure-iothub.ResultWithIncomingMessage<azure-iothub.Twin>>
  package: azure-iothub
- uid: azure-iothub.Twin.get
  name: get(IncomingMessageCallback<Twin>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="db50c-112">从 IoT 中心服务获取此设备孪生的最新版本。</span><span class="sxs-lookup"><span data-stu-id="db50c-112">Gets the latest version of this device twin from the IoT Hub service.</span></span>
  syntax:
    content: 'function get(done: IncomingMessageCallback<Twin>)'
    parameters:
    - id: done
      type:
      - azure-iothub.IncomingMessageCallback<azure-iothub.Twin>
      description: ''
  package: azure-iothub
- uid: azure-iothub.Twin.moduleId
  name: moduleId
  fullName: moduleId
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="db50c-113">设备标识注册表中存在关联和孪生的模块的模块标识符。</span><span class="sxs-lookup"><span data-stu-id="db50c-113">Module identifier for the module associated with the twin, as it exists in the device identity registry.</span></span>
  optional: true
  syntax:
    content: 'moduleId?: string'
    return:
      type:
      - string
  package: azure-iothub
- uid: azure-iothub.Twin.properties
  name: properties
  fullName: properties
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="db50c-114">属性所需和报告属性 dictionnaries (分别在`properties.desired`和`properties.reported`)。</span><span class="sxs-lookup"><span data-stu-id="db50c-114">The desired and reported properties dictionnaries (respectively in `properties.desired` and `properties.reported`).</span></span>
  syntax:
    content: 'properties: Object'
    return:
      type:
      - Object
  package: azure-iothub
- uid: azure-iothub.Twin.tags
  name: tags
  fullName: tags
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="db50c-115">键/值对的集合，仅在服务端上可用，可在查询中使用以查找特定设备。</span><span class="sxs-lookup"><span data-stu-id="db50c-115">Collection of key/value pairs that is available only on the service side and can be used in queries to find specific devices.</span></span>
  syntax:
    content: 'tags: [key: string]: string'
    return:
      type:
      - '[key: string]: string'
  package: azure-iothub
- uid: azure-iothub.Twin.toJSON
  name: toJSON()
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: function toJSON()
    parameters: []
    return:
      type:
      - object
  package: azure-iothub
- uid: azure-iothub.Twin.constructor
  name: Twin(DeviceIdentity | string, Registry)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: <span data-ttu-id="db50c-116">实例化新<xref:azure-iothub.Twin>。</span><span class="sxs-lookup"><span data-stu-id="db50c-116">Instantiates a new <xref:azure-iothub.Twin>.</span></span> <span data-ttu-id="db50c-117">获取一个新的建议的方式<xref:azure-iothub.Twin>对象是使用<xref:azure-iothub.Registry.getTwin>方法。</span><span class="sxs-lookup"><span data-stu-id="db50c-117">The recommended way to get a new <xref:azure-iothub.Twin> object is to use the <xref:azure-iothub.Registry.getTwin> method.</span></span>
  syntax:
    content: 'new Twin(device: DeviceIdentity | string, registryClient: Registry)'
    parameters:
    - id: device
      type:
      - DeviceIdentity | string
      description: <span data-ttu-id="db50c-118">设备标识符字符串或描述设备的对象。</span><span class="sxs-lookup"><span data-stu-id="db50c-118">A device identifier string or an object describing the device.</span></span> <span data-ttu-id="db50c-119">如果一个对象，它必须包含 deviceId 属性。</span><span class="sxs-lookup"><span data-stu-id="db50c-119">If an Object, it must contain a deviceId property.</span></span>
    - id: registryClient
      type:
      - azure-iothub.Registry
      description: >
        <span data-ttu-id="db50c-120">用于执行 REST API 调用的 HTTP 注册表客户端。</span><span class="sxs-lookup"><span data-stu-id="db50c-120">The HTTP registry client used to execute REST API calls.</span></span>
  package: azure-iothub
- uid: azure-iothub.Twin.update_1
  name: update(any)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="db50c-121">使用作为参数提供的修补程序更新设备孪生。</span><span class="sxs-lookup"><span data-stu-id="db50c-121">Update the device twin with the patch provided as argument.</span></span>
  syntax:
    content: 'function update(patch: any)'
    parameters:
    - id: patch
      type:
      - any
      description: ''
    return:
      type:
      - Promise<azure-iothub.ResultWithIncomingMessage<azure-iothub.Twin>>
  package: azure-iothub
- uid: azure-iothub.Twin.update
  name: update(any, IncomingMessageCallback<Twin>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="db50c-122">使用作为参数提供的修补程序更新设备孪生。</span><span class="sxs-lookup"><span data-stu-id="db50c-122">Update the device twin with the patch provided as argument.</span></span>
  syntax:
    content: 'function update(patch: any, done: IncomingMessageCallback<Twin>)'
    parameters:
    - id: patch
      type:
      - any
      description: <span data-ttu-id="db50c-123">对象，其中包含要应用到此设备孪生的新值。</span><span class="sxs-lookup"><span data-stu-id="db50c-123">Object containing the new values to apply to this device twin.</span></span>
    - id: done
      type:
      - azure-iothub.IncomingMessageCallback<azure-iothub.Twin>
      description: ''
  package: azure-iothub
references:
- uid: azure-iothub.Registry
  name: Registry
  spec.typeScript:
  - name: Registry
    fullName: Registry
    uid: azure-iothub.Registry
- uid: azure-iothub.IncomingMessageCallback<azure-iothub.Twin>
  name: Twin>
  spec.typeScript:
  - name: IncomingMessageCallback
    fullName: IncomingMessageCallback
    uid: azure-iothub.IncomingMessageCallback
  - name: <
    fullName: <
  - name: Twin
    fullName: Twin
    uid: azure-iothub.Twin
  - name: '>'
    fullName: '>'
- uid: Promise<azure-iothub.ResultWithIncomingMessage<azure-iothub.Twin>>
  name: Twin>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ResultWithIncomingMessage
    fullName: ResultWithIncomingMessage
    uid: azure-iothub.ResultWithIncomingMessage
  - name: <
    fullName: <
  - name: Twin
    fullName: Twin
    uid: azure-iothub.Twin
  - name: '>>'
    fullName: '>>'
