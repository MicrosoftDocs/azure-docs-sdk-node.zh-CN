### YamlMime:UniversalReference
ms.openlocfilehash: e06222d0ec191b66b287ffe6fe9148fbe92ec6f7
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 08/13/2018
ms.locfileid: "40049482"
items:
- uid: azure-common.ServiceClient
  id: azure-common.ServiceClient
  name: ServiceClient
  summary: 创建新的 ServiceClient 对象。
  fullName: azure-common.ServiceClient
  type: Class
  children:
  - azure-common.ServiceClient.#ctor
  - azure-common.ServiceClient#setHost
  - azure-common.ServiceClient#performChunkedRequest
  - azure-common.ServiceClient#performRequest
  - azure-common.ServiceClient#performRequestOutputStream
  - azure-common.ServiceClient#performRequestInputStream
  - azure-common.ServiceClient#withFilter
  - azure-common.ServiceClient#parseMetadataHeaders
  - azure-common.ServiceClient.isEmulated
  langs:
  - js
- id: azure-common.ServiceClient.#ctor
  uid: azure-common.ServiceClient.#ctor
  parent: azure-common.ServiceClient
  name: ServiceClient(host, authenticationProvider)
  fullName: azure-common.ServiceClient.ServiceClient(host, authenticationProvider)
  summary: 创建新的 ServiceClient 对象。
  type: Constructor
  syntax:
    parameters:
    - id: host
      type:
      - string
      description: 服务主机。
    - id: authenticationProvider
      type:
      - object
      description: 身份验证提供程序对象 (例如 sharedkey / sharedkeytable / sharedaccesssignature)。
    content: new ServiceClient(host, authenticationProvider)
  langs:
  - js
- uid: azure-common.ServiceClient#setHost
  id: azure-common.ServiceClient#setHost
  parent: azure-common.ServiceClient
  name: setHost(host)
  summary: 设置服务主机。
  fullName: azure-common.ServiceClient.setHost(host)
  type: Function
  syntax:
    parameters:
    - id: host
      type:
      - string
      description: 服务主机。
    content: function setHost(host)
  langs:
  - js
- uid: azure-common.ServiceClient#performChunkedRequest
  id: azure-common.ServiceClient#performChunkedRequest
  parent: azure-common.ServiceClient
  name: performChunkedRequest(webResource, outputData, options, callback)
  summary: 执行通过应为输入的流的 HTTP REST 服务请求。
  fullName: azure-common.ServiceClient.performChunkedRequest(webResource, outputData, options, callback)
  type: Function
  syntax:
    parameters:
    - id: webResource
      type:
      - azure-common.WebResource
      description: 要对其执行请求 webresource。
    - id: outputData
      type:
      - string
      description: 原始字符串形式的传出请求数据。
    - id: options
      type:
      - object
      description: 在请求选项。
      optional: true
    - id: options.timeoutIntervalInMs
      type:
      - azure-common.int
      description: 超时间隔，以毫秒为单位，要用于该请求。
      optional: true
    - id: callback
      type:
      - function
      description: 分块的响应回调函数。
    content: function performChunkedRequest(webResource, outputData, options, callback)
  langs:
  - js
- uid: azure-common.ServiceClient#performRequest
  id: azure-common.ServiceClient#performRequest
  parent: azure-common.ServiceClient
  name: performRequest(webResource, outputData, options, callback)
  summary: 执行通过应为输入的流的 HTTP REST 服务请求。
  fullName: azure-common.ServiceClient.performRequest(webResource, outputData, options, callback)
  type: Function
  syntax:
    parameters:
    - id: webResource
      type:
      - azure-common.WebResource
      description: 要对其执行请求 webresource。
    - id: outputData
      type:
      - string
      description: 原始字符串形式的传出请求数据。
    - id: options
      type:
      - object
      description: 在请求选项。
      optional: true
    - id: options.timeoutIntervalInMs
      type:
      - azure-common.int
      description: 超时间隔，以毫秒为单位，要用于该请求。
      optional: true
    - id: callback
      type:
      - function
      description: 响应的回调函数。
    content: function performRequest(webResource, outputData, options, callback)
  langs:
  - js
- uid: azure-common.ServiceClient#performRequestOutputStream
  id: azure-common.ServiceClient#performRequestOutputStream
  parent: azure-common.ServiceClient
  name: performRequestOutputStream(webResource, outputStream, options, callback)
  summary: 执行通过应为输入的流的 HTTP REST 服务请求。
  fullName: azure-common.ServiceClient.performRequestOutputStream(webResource, outputStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: webResource
      type:
      - azure-common.WebResource
      description: 要对其执行请求 webresource。
    - id: outputStream
      type:
      - azure-common.Stream
      description: 传出的请求数据以流的形式。
    - id: options
      type:
      - object
      description: 在请求选项。
      optional: true
    - id: options.timeoutIntervalInMs
      type:
      - azure-common.int
      description: 超时间隔，以毫秒为单位，要用于该请求。
      optional: true
    - id: callback
      type:
      - function
      description: 响应的回调函数。
    content: function performRequestOutputStream(webResource, outputStream, options, callback)
  langs:
  - js
- uid: azure-common.ServiceClient#performRequestInputStream
  id: azure-common.ServiceClient#performRequestInputStream
  parent: azure-common.ServiceClient
  name: performRequestInputStream(webResource, outputData, inputStream, options, callback)
  summary: 执行通过应为输入的流的 HTTP REST 服务请求。
  fullName: azure-common.ServiceClient.performRequestInputStream(webResource, outputData, inputStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: webResource
      type:
      - azure-common.WebResource
      description: 要对其执行请求 webresource。
    - id: outputData
      type:
      - string
      description: 原始字符串形式的传出请求数据。
    - id: inputStream
      type:
      - azure-common.Stream
      description: 以流的形式 ingoing 响应数据。
    - id: options
      type:
      - object
      description: 在请求选项。
      optional: true
    - id: options.timeoutIntervalInMs
      type:
      - azure-common.int
      description: 超时间隔，以毫秒为单位，要用于该请求。
      optional: true
    - id: callback
      type:
      - function
      description: 响应的回调函数。
    content: function performRequestInputStream(webResource, outputData, inputStream, options, callback)
  langs:
  - js
- uid: azure-common.ServiceClient#withFilter
  id: azure-common.ServiceClient#withFilter
  parent: azure-common.ServiceClient
  name: withFilter(filter)
  summary: >-
    将与此 ServiceClient 关联筛选操作。 筛选操作可包括日志记录、自动重试等。筛选器的操作是实现具有签名的方法的对象：

        "function handle (requestOptions, next)".

    后执行预处理请求选项上，该方法需要调用"next"并且传递具有以下签名的回调： 签名：

        "function (returnObject, finalCallback, next)"

    在此回调中，在处理 returnObject（来自对服务器的请求的响应）后，回调需要调用 next（如果它已存在）以继续处理其他筛选器或只调用 finalCallback 以结束服务调用。
  fullName: azure-common.ServiceClient.withFilter(filter)
  type: Function
  syntax:
    parameters:
    - id: filter
      type:
      - Object
      description: 新的筛选器对象。
    return:
      type:
      - azure-common.ServiceClient
      description: 新服务的客户端应用筛选器。
    content: function withFilter(filter)
  langs:
  - js
- uid: azure-common.ServiceClient#parseMetadataHeaders
  id: azure-common.ServiceClient#parseMetadataHeaders
  parent: azure-common.ServiceClient
  name: parseMetadataHeaders(headers)
  summary: 从响应标头中检索元数据标头。
  fullName: azure-common.ServiceClient.parseMetadataHeaders(headers)
  type: Function
  syntax:
    parameters:
    - id: headers
      type:
      - object
      description: 元数据标头。
    return:
      type:
      - object
      description: 具有 （不带"x-ms-"前缀） 的元数据标头的对象。
    content: function parseMetadataHeaders(headers)
  langs:
  - js
- uid: azure-common.ServiceClient.isEmulated
  id: azure-common.ServiceClient.isEmulated
  parent: azure-common.ServiceClient
  name: isEmulated()
  summary: 获取模拟的环境变量的值。
  fullName: azure-common.ServiceClient.isEmulated()
  type: Function
  syntax:
    return:
      type:
      - azure-common.bool
      description: 如果服务客户端运行上的模拟环境; 则为 truefalse 否则为。
    content: function isEmulated()
  langs:
  - js
references:
- uid: azure-common.WebResource
  name: WebResource
  fullName: azure-common.WebResource
  isExternal: false
