### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient'
    name: ComputerVisionClient
    fullName: ComputerVisionClient
    children:
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.constructor'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.credentials'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.endpoint'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.sendOperationRequest'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.sendRequest'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage_1'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream'
      - '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/cognitiveservices-computervision.ComputerVisionClientContext'
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2'
    name: 'analyzeImage(string, ComputerVisionClientAnalyzeImageOptionalParams, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImage(url: string, options: ComputerVisionClientAnalyzeImageOptionalParams, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageAnalysis>
          description: |
            回调
      return:
        type:
          - Promise<Models.AnalyzeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage'
    name: 'analyzeImage(string, Models.ComputerVisionClientAnalyzeImageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作根据图像内容提取一组丰富的可视特征。
      支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。 在你的请求，是一个可选参数，以便您可以选择要返回的特征。 默认情况下，在响应中返回映像类别。
      成功响应将以 JSON 格式返回。 如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
    syntax:
      content: 'function analyzeImage(url: string, options?: Models.ComputerVisionClientAnalyzeImageOptionalParams)'
      parameters:
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: options
          type:
            - Models.ComputerVisionClientAnalyzeImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AnalyzeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1'
    name: 'analyzeImage(string, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImage(url: string, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageAnalysis>
          description: |
            回调
      return:
        type:
          - Promise<Models.AnalyzeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2'
    name: 'analyzeImageByDomain(string, string, ComputerVisionClientAnalyzeImageByDomainOptionalParams, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, options: ComputerVisionClientAnalyzeImageByDomainOptionalParams, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: 要识别的特定于域的内容。
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DomainModelResults>
          description: |
            回调
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain'
    name: 'analyzeImageByDomain(string, string, Models.ComputerVisionClientAnalyzeImageByDomainOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作通过应用域特定的模型来识别图像中的内容。 可以使用 /models GET 请求检索计算机视觉 API 支持的域特定模型列表。 目前，该 API 提供以下域特定的模型：名人、地标。
      支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。
      成功响应将以 JSON 格式返回。
      如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, options?: Models.ComputerVisionClientAnalyzeImageByDomainOptionalParams)'
      parameters:
        - id: model
          type:
            - string
          description: 要识别的特定于域的内容。
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: options
          type:
            - Models.ComputerVisionClientAnalyzeImageByDomainOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1'
    name: 'analyzeImageByDomain(string, string, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageByDomain(model: string, url: string, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: 要识别的特定于域的内容。
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DomainModelResults>
          description: |
            回调
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2'
    name: 'analyzeImageByDomainInStream(string, msRest.HttpRequestBody, ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: msRest.HttpRequestBody, options: ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: 要识别的特定于域的内容。
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DomainModelResults>
          description: |
            回调
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream'
    name: 'analyzeImageByDomainInStream(string, msRest.HttpRequestBody, Models.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作通过应用域特定的模型来识别图像中的内容。 可以使用 /models GET 请求检索计算机视觉 API 支持的域特定模型列表。 目前，该 API 提供以下域特定的模型：名人、地标。
      支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。
      成功响应将以 JSON 格式返回。
      如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams)'
      parameters:
        - id: model
          type:
            - string
          description: 要识别的特定于域的内容。
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: options
          type:
            - Models.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1'
    name: 'analyzeImageByDomainInStream(string, msRest.HttpRequestBody, ServiceCallback<DomainModelResults>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageByDomainInStream(model: string, image: msRest.HttpRequestBody, callback: ServiceCallback<DomainModelResults>)'
      parameters:
        - id: model
          type:
            - string
          description: 要识别的特定于域的内容。
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DomainModelResults>
          description: |
            回调
      return:
        type:
          - Promise<Models.AnalyzeImageByDomainInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2'
    name: 'analyzeImageInStream(msRest.HttpRequestBody, ComputerVisionClientAnalyzeImageInStreamOptionalParams, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageInStream(image: msRest.HttpRequestBody, options: ComputerVisionClientAnalyzeImageInStreamOptionalParams, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageInStreamOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageAnalysis>
          description: |
            回调
      return:
        type:
          - Promise<Models.AnalyzeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream'
    name: 'analyzeImageInStream(msRest.HttpRequestBody, Models.ComputerVisionClientAnalyzeImageInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作根据图像内容提取一组丰富的可视特征。
      支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。 在你的请求，是一个可选参数，以便您可以选择要返回的特征。 默认情况下，在响应中返回映像类别。
      成功响应将以 JSON 格式返回。 如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
    syntax:
      content: 'function analyzeImageInStream(image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientAnalyzeImageInStreamOptionalParams)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: options
          type:
            - Models.ComputerVisionClientAnalyzeImageInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AnalyzeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1'
    name: 'analyzeImageInStream(msRest.HttpRequestBody, ServiceCallback<ImageAnalysis>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function analyzeImageInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<ImageAnalysis>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageAnalysis>
          description: |
            回调
      return:
        type:
          - Promise<Models.AnalyzeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile'
    name: 'batchReadFile(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 使用此接口获取读取操作，使用针对大量文本的文档进行了优化的最先进的光学字符识别 (OCR) 算法的结果。 当使用读取文件接口时，响应将包含一个名为操作位置字段。 操作位置字段包含必须为 GetReadOperationResult 操作以访问 OCR 结果使用的 URL。
    syntax:
      content: 'function batchReadFile(url: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BatchReadFileResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile_2'
    name: 'batchReadFile(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function batchReadFile(url: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<Models.BatchReadFileResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFile_1'
    name: 'batchReadFile(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function batchReadFile(url: string, callback: ServiceCallback<void>)'
      parameters:
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<Models.BatchReadFileResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream'
    name: 'batchReadFileInStream(msRest.HttpRequestBody, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 使用此接口获取读取文档操作，使用针对大量文本的文档进行了优化的最先进的光学字符识别 (OCR) 算法的结果。 当使用读取文档接口时，响应将包含一个名为操作位置字段。 操作位置字段以访问 OCR 结果包含你必须使用获取读取结果操作的 URL。
    syntax:
      content: 'function batchReadFileInStream(image: msRest.HttpRequestBody, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BatchReadFileInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_2'
    name: 'batchReadFileInStream(msRest.HttpRequestBody, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function batchReadFileInStream(image: msRest.HttpRequestBody, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<Models.BatchReadFileInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.batchReadFileInStream_1'
    name: 'batchReadFileInStream(msRest.HttpRequestBody, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function batchReadFileInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<Models.BatchReadFileInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.constructor'
    name: 'ComputerVisionClient(ServiceClientCredentials, string, msRest.ServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: 初始化 ComputerVisionClient 类的新实例。
    syntax:
      content: 'new ComputerVisionClient(credentials: ServiceClientCredentials, endpoint: string, options?: msRest.ServiceClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: 唯一地标识客户端订阅的订阅凭据。
        - id: endpoint
          type:
            - string
          description: 受支持的认知服务端点。
        - id: options
          type:
            - msRest.ServiceClientOptions
          description: ''
          optional: true
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage_2'
    name: 'describeImage(string, ComputerVisionClientDescribeImageOptionalParams, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function describeImage(url: string, options: ComputerVisionClientDescribeImageOptionalParams, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageDescription>
          description: |
            回调
      return:
        type:
          - Promise<Models.DescribeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage'
    name: 'describeImage(string, Models.ComputerVisionClientDescribeImageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作使用完整的句子以人类可读语言生成图像的说明。 该说明基于内容标记的集合，而这些标记也由该操作返回。 可为每个图像生成多段说明。 说明按其置信度评分排序。 所有说明均为英文。
      支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。
      成功响应将以 JSON 格式返回。 如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
    syntax:
      content: 'function describeImage(url: string, options?: Models.ComputerVisionClientDescribeImageOptionalParams)'
      parameters:
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: options
          type:
            - Models.ComputerVisionClientDescribeImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DescribeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImage_1'
    name: 'describeImage(string, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function describeImage(url: string, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageDescription>
          description: |
            回调
      return:
        type:
          - Promise<Models.DescribeImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2'
    name: 'describeImageInStream(msRest.HttpRequestBody, ComputerVisionClientDescribeImageInStreamOptionalParams, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function describeImageInStream(image: msRest.HttpRequestBody, options: ComputerVisionClientDescribeImageInStreamOptionalParams, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageInStreamOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageDescription>
          description: |
            回调
      return:
        type:
          - Promise<Models.DescribeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream'
    name: 'describeImageInStream(msRest.HttpRequestBody, Models.ComputerVisionClientDescribeImageInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作使用完整的句子以人类可读语言生成图像的说明。 该说明基于内容标记的集合，而这些标记也由该操作返回。 可为每个图像生成多段说明。 说明按其置信度评分排序。 所有说明均为英文。
      支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。
      成功响应将以 JSON 格式返回。 如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
    syntax:
      content: 'function describeImageInStream(image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientDescribeImageInStreamOptionalParams)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: options
          type:
            - Models.ComputerVisionClientDescribeImageInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DescribeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1'
    name: 'describeImageInStream(msRest.HttpRequestBody, ServiceCallback<ImageDescription>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function describeImageInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<ImageDescription>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ImageDescription>
          description: |
            回调
      return:
        type:
          - Promise<Models.DescribeImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects'
    name: 'detectObjects(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      执行指定的图像的对象检测。
      支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。
      成功响应将以 JSON 格式返回。 如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
    syntax:
      content: 'function detectObjects(url: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectObjectsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects_2'
    name: 'detectObjects(string, RequestOptionsBase, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectObjects(url: string, options: RequestOptionsBase, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DetectResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.DetectObjectsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjects_1'
    name: 'detectObjects(string, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectObjects(url: string, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DetectResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.DetectObjectsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream'
    name: 'detectObjectsInStream(msRest.HttpRequestBody, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      执行指定的图像的对象检测。
      支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。
      成功响应将以 JSON 格式返回。 如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
    syntax:
      content: 'function detectObjectsInStream(image: msRest.HttpRequestBody, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.DetectObjectsInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_2'
    name: 'detectObjectsInStream(msRest.HttpRequestBody, RequestOptionsBase, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectObjectsInStream(image: msRest.HttpRequestBody, options: RequestOptionsBase, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DetectResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.DetectObjectsInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.detectObjectsInStream_1'
    name: 'detectObjectsInStream(msRest.HttpRequestBody, ServiceCallback<DetectResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectObjectsInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<DetectResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.DetectResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.DetectObjectsInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.endpoint'
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2'
    name: 'generateThumbnail(number, number, string, ComputerVisionClientGenerateThumbnailOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, options: ComputerVisionClientGenerateThumbnailOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: width
          type:
            - number
          description: 缩略图，以像素为单位的宽度。 它必须介于 1 到 1024年之间。 推荐的最小为 50。
        - id: height
          type:
            - number
          description: 缩略图，以像素为单位的高度。 它必须介于 1 到 1024年之间。 推荐的最小为 50。
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<Models.GenerateThumbnailResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail'
    name: 'generateThumbnail(number, number, string, Models.ComputerVisionClientGenerateThumbnailOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作使用用户指定的宽度和高度生成缩略图。 默认情况下，服务将分析图像，标识兴趣区域 (ROI)，并根据 ROI 生成智能裁剪坐标。 指定不同于输入图像纵横比时，可帮助智能裁剪。
      成功的响应包含缩略图二进制文件。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
      如果失败，返回错误代码和一条错误消息。 错误代码可能是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 InvalidThumbnailSize、 NotSupportedImage、 FailedToProcess、 超时或 InternalServerError 之一。
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, options?: Models.ComputerVisionClientGenerateThumbnailOptionalParams)'
      parameters:
        - id: width
          type:
            - number
          description: 缩略图，以像素为单位的宽度。 它必须介于 1 到 1024年之间。 推荐的最小为 50。
        - id: height
          type:
            - number
          description: 缩略图，以像素为单位的高度。 它必须介于 1 到 1024年之间。 推荐的最小为 50。
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: options
          type:
            - Models.ComputerVisionClientGenerateThumbnailOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GenerateThumbnailResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1'
    name: 'generateThumbnail(number, number, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function generateThumbnail(width: number, height: number, url: string, callback: ServiceCallback<void>)'
      parameters:
        - id: width
          type:
            - number
          description: 缩略图，以像素为单位的宽度。 它必须介于 1 到 1024年之间。 推荐的最小为 50。
        - id: height
          type:
            - number
          description: 缩略图，以像素为单位的高度。 它必须介于 1 到 1024年之间。 推荐的最小为 50。
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<Models.GenerateThumbnailResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2'
    name: 'generateThumbnailInStream(number, number, msRest.HttpRequestBody, ComputerVisionClientGenerateThumbnailInStreamOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: msRest.HttpRequestBody, options: ComputerVisionClientGenerateThumbnailInStreamOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: width
          type:
            - number
          description: 缩略图，以像素为单位的宽度。 它必须介于 1 到 1024年之间。 推荐的最小为 50。
        - id: height
          type:
            - number
          description: 缩略图，以像素为单位的高度。 它必须介于 1 到 1024年之间。 推荐的最小为 50。
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailInStreamOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<Models.GenerateThumbnailInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream'
    name: 'generateThumbnailInStream(number, number, msRest.HttpRequestBody, Models.ComputerVisionClientGenerateThumbnailInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作使用用户指定的宽度和高度生成缩略图。 默认情况下，服务将分析图像，标识兴趣区域 (ROI)，并根据 ROI 生成智能裁剪坐标。 指定不同于输入图像纵横比时，可帮助智能裁剪。
      成功的响应包含缩略图二进制文件。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
      如果失败，返回错误代码和一条错误消息。 错误代码可能是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 InvalidThumbnailSize、 NotSupportedImage、 FailedToProcess、 超时或 InternalServerError 之一。
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientGenerateThumbnailInStreamOptionalParams)'
      parameters:
        - id: width
          type:
            - number
          description: 缩略图，以像素为单位的宽度。 它必须介于 1 到 1024年之间。 推荐的最小为 50。
        - id: height
          type:
            - number
          description: 缩略图，以像素为单位的高度。 它必须介于 1 到 1024年之间。 推荐的最小为 50。
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: options
          type:
            - Models.ComputerVisionClientGenerateThumbnailInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GenerateThumbnailInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1'
    name: 'generateThumbnailInStream(number, number, msRest.HttpRequestBody, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function generateThumbnailInStream(width: number, height: number, image: msRest.HttpRequestBody, callback: ServiceCallback<void>)'
      parameters:
        - id: width
          type:
            - number
          description: 缩略图，以像素为单位的宽度。 它必须介于 1 到 1024年之间。 推荐的最小为 50。
        - id: height
          type:
            - number
          description: 缩略图，以像素为单位的高度。 它必须介于 1 到 1024年之间。 推荐的最小为 50。
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<Models.GenerateThumbnailInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest'
    name: 'getAreaOfInterest(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作返回围绕图像最重要区域的边框。
      成功响应将以 JSON 格式返回。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
      如果失败，返回错误代码和一条错误消息。 错误代码可能是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 FailedToProcess、 超时或 InternalServerError 之一。
    syntax:
      content: 'function getAreaOfInterest(url: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetAreaOfInterestResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_2'
    name: 'getAreaOfInterest(string, RequestOptionsBase, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAreaOfInterest(url: string, options: RequestOptionsBase, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.AreaOfInterestResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.GetAreaOfInterestResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterest_1'
    name: 'getAreaOfInterest(string, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAreaOfInterest(url: string, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.AreaOfInterestResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.GetAreaOfInterestResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream'
    name: 'getAreaOfInterestInStream(msRest.HttpRequestBody, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作返回围绕图像最重要区域的边框。
      成功响应将以 JSON 格式返回。 如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。
      如果失败，返回错误代码和一条错误消息。 错误代码可能是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 FailedToProcess、 超时或 InternalServerError 之一。
    syntax:
      content: 'function getAreaOfInterestInStream(image: msRest.HttpRequestBody, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetAreaOfInterestInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_2'
    name: 'getAreaOfInterestInStream(msRest.HttpRequestBody, RequestOptionsBase, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAreaOfInterestInStream(image: msRest.HttpRequestBody, options: RequestOptionsBase, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.AreaOfInterestResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.GetAreaOfInterestInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getAreaOfInterestInStream_1'
    name: 'getAreaOfInterestInStream(msRest.HttpRequestBody, ServiceCallback<AreaOfInterestResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAreaOfInterestInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<AreaOfInterestResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.AreaOfInterestResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.GetAreaOfInterestInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult'
    name: 'getReadOperationResult(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 此接口用于获取读取操作的 OCR 结果。 此接口的 URL 应检索从批处理读取文件接口返回的操作位置字段中。
    syntax:
      content: 'function getReadOperationResult(operationId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: operationId
          type:
            - string
          description: 在批处理读取文件界面的响应中返回的读取操作的 id。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetReadOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_2'
    name: 'getReadOperationResult(string, RequestOptionsBase, ServiceCallback<ReadOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReadOperationResult(operationId: string, options: RequestOptionsBase, callback: ServiceCallback<ReadOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: 在批处理读取文件界面的响应中返回的读取操作的 id。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ReadOperationResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.GetReadOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getReadOperationResult_1'
    name: 'getReadOperationResult(string, ServiceCallback<ReadOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getReadOperationResult(operationId: string, callback: ServiceCallback<ReadOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: 在批处理读取文件界面的响应中返回的读取操作的 id。
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ReadOperationResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.GetReadOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult'
    name: 'getTextOperationResult(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 此接口用于获取文本操作结果。 此接口的 URL 应检索从识别文本接口返回的操作位置字段中。
    syntax:
      content: 'function getTextOperationResult(operationId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: operationId
          type:
            - string
          description: 识别文本在响应中返回的文本操作 id
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.GetTextOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2'
    name: 'getTextOperationResult(string, RequestOptionsBase, ServiceCallback<TextOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTextOperationResult(operationId: string, options: RequestOptionsBase, callback: ServiceCallback<TextOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: 识别文本在响应中返回的文本操作 id
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TextOperationResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.GetTextOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1'
    name: 'getTextOperationResult(string, ServiceCallback<TextOperationResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTextOperationResult(operationId: string, callback: ServiceCallback<TextOperationResult>)'
      parameters:
        - id: operationId
          type:
            - string
          description: 识别文本在响应中返回的文本操作 id
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TextOperationResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.GetTextOperationResultResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels'
    name: listModels(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作返回计算机视觉 API 支持的域特定模型列表。 目前，该 API 支持以下域特定的模型：名人识别器、地标识别器。
      成功响应将以 JSON 格式返回。 如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
    syntax:
      content: 'function listModels(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListModelsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels_2'
    name: 'listModels(RequestOptionsBase, ServiceCallback<ListModelsResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listModels(options: RequestOptionsBase, callback: ServiceCallback<ListModelsResult>)'
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ListModelsResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.ListModelsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.listModels_1'
    name: listModels(ServiceCallback<ListModelsResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listModels(callback: ServiceCallback<ListModelsResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.ListModelsResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.ListModelsResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2'
    name: 'recognizePrintedText(boolean, string, ComputerVisionClientRecognizePrintedTextOptionalParams, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options: ComputerVisionClientRecognizePrintedTextOptionalParams, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: 是否在图像中检测文本方向。 DetectOrientation = true OCR 服务尝试以检测图像方向并更正它进一步处理前 (例如如果颠倒的)。
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.OcrResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.RecognizePrintedTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText'
    name: 'recognizePrintedText(boolean, string, Models.ComputerVisionClientRecognizePrintedTextOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      光学字符识别 (OCR) 可以检测图像中的文本，并将识别到的字符提取到机器可用的字符流中。
      成功后，将返回的 OCR 结果。
      如果失败，将返回一条错误消息以及错误代码。 错误代码可以是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage 或 InternalServerError 之一。
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options?: Models.ComputerVisionClientRecognizePrintedTextOptionalParams)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: 是否在图像中检测文本方向。 DetectOrientation = true OCR 服务尝试以检测图像方向并更正它进一步处理前 (例如如果颠倒的)。
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: options
          type:
            - Models.ComputerVisionClientRecognizePrintedTextOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RecognizePrintedTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1'
    name: 'recognizePrintedText(boolean, string, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizePrintedText(detectOrientation: boolean, url: string, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: 是否在图像中检测文本方向。 DetectOrientation = true OCR 服务尝试以检测图像方向并更正它进一步处理前 (例如如果颠倒的)。
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.OcrResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.RecognizePrintedTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2'
    name: 'recognizePrintedTextInStream(boolean, msRest.HttpRequestBody, ComputerVisionClientRecognizePrintedTextInStreamOptionalParams, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: msRest.HttpRequestBody, options: ComputerVisionClientRecognizePrintedTextInStreamOptionalParams, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: 是否在图像中检测文本方向。 DetectOrientation = true OCR 服务尝试以检测图像方向并更正它进一步处理前 (例如如果颠倒的)。
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.OcrResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.RecognizePrintedTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream'
    name: 'recognizePrintedTextInStream(boolean, msRest.HttpRequestBody, Models.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      光学字符识别 (OCR) 可以检测图像中的文本，并将识别到的字符提取到机器可用的字符流中。
      成功后，将返回的 OCR 结果。
      如果失败，将返回一条错误消息以及错误代码。 错误代码可以是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage 或 InternalServerError 之一。
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: 是否在图像中检测文本方向。 DetectOrientation = true OCR 服务尝试以检测图像方向并更正它进一步处理前 (例如如果颠倒的)。
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: options
          type:
            - Models.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RecognizePrintedTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1'
    name: 'recognizePrintedTextInStream(boolean, msRest.HttpRequestBody, ServiceCallback<OcrResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: msRest.HttpRequestBody, callback: ServiceCallback<OcrResult>)'
      parameters:
        - id: detectOrientation
          type:
            - boolean
          description: 是否在图像中检测文本方向。 DetectOrientation = true OCR 服务尝试以检测图像方向并更正它进一步处理前 (例如如果颠倒的)。
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.OcrResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.RecognizePrintedTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText'
    name: 'recognizeText(Models.TextRecognitionMode, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 识别文本操作。 当使用识别文本接口时，响应将包含一个名为操作位置字段。 操作位置字段包含必须用于您获取识别的文本操作结果的操作的 URL。
    syntax:
      content: 'function recognizeText(mode: Models.TextRecognitionMode, url: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: 要识别的文本的类型。 可能的值包括：手写，打印
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RecognizeTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText_2'
    name: 'recognizeText(Models.TextRecognitionMode, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizeText(mode: Models.TextRecognitionMode, url: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: 要识别的文本的类型。 可能的值包括：手写，打印
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<Models.RecognizeTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeText_1'
    name: 'recognizeText(Models.TextRecognitionMode, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizeText(mode: Models.TextRecognitionMode, url: string, callback: ServiceCallback<void>)'
      parameters:
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: 要识别的文本的类型。 可能的值包括：手写，打印
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<Models.RecognizeTextResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream'
    name: 'recognizeTextInStream(msRest.HttpRequestBody, Models.TextRecognitionMode, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 识别文本操作。 当使用识别文本接口时，响应将包含一个名为操作位置字段。 操作位置字段包含必须用于您获取识别的文本操作结果的操作的 URL。
    syntax:
      content: 'function recognizeTextInStream(image: msRest.HttpRequestBody, mode: Models.TextRecognitionMode, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: 要识别的文本的类型。 可能的值包括：手写，打印
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RecognizeTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2'
    name: 'recognizeTextInStream(msRest.HttpRequestBody, Models.TextRecognitionMode, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizeTextInStream(image: msRest.HttpRequestBody, mode: Models.TextRecognitionMode, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: 要识别的文本的类型。 可能的值包括：手写，打印
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<Models.RecognizeTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1'
    name: 'recognizeTextInStream(msRest.HttpRequestBody, Models.TextRecognitionMode, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function recognizeTextInStream(image: msRest.HttpRequestBody, mode: Models.TextRecognitionMode, callback: ServiceCallback<void>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: mode
          type:
            - Models.TextRecognitionMode
          description: 要识别的文本的类型。 可能的值包括：手写，打印
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<Models.RecognizeTextInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 发送 HTTP 请求提供的 OperationSpec 填充。
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: HTTP 请求的模板化值将填充从自变量。
        - id: operationSpec
          type:
            - OperationSpec
          description: 用于填充 httpRequest OperationSpec。
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            要接收到响应时调用的回调。
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: 发送提供的 httpRequest。
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage_2'
    name: 'tagImage(string, ComputerVisionClientTagImageOptionalParams, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function tagImage(url: string, options: ComputerVisionClientTagImageOptionalParams, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TagResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.TagImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage'
    name: 'tagImage(string, Models.ComputerVisionClientTagImageOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作生成与所提供图像内容相关的单词或标记列表。 计算机视觉 API 可以根据在图像中找到的对象、生物、风景或动作返回标记。 与类别不同，标记不是根据层次结构分类系统进行组织，而是对应于图像内容。 标记可能包含提示以避免多义性，或者提供上下文，例如标记"cello"可能伴随提示"乐器"。 所有标记均为英文。
      支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。
      成功响应将以 JSON 格式返回。 如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
    syntax:
      content: 'function tagImage(url: string, options?: Models.ComputerVisionClientTagImageOptionalParams)'
      parameters:
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: options
          type:
            - Models.ComputerVisionClientTagImageOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TagImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImage_1'
    name: 'tagImage(string, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function tagImage(url: string, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: url
          type:
            - string
          description: 可公开访问的图像的 URL。
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TagResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.TagImageResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2'
    name: 'tagImageInStream(msRest.HttpRequestBody, ComputerVisionClientTagImageInStreamOptionalParams, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function tagImageInStream(image: msRest.HttpRequestBody, options: ComputerVisionClientTagImageInStreamOptionalParams, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: options
          type:
            - '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageInStreamOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TagResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.TagImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream'
    name: 'tagImageInStream(msRest.HttpRequestBody, Models.ComputerVisionClientTagImageInStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      此操作生成与所提供图像内容相关的单词或标记列表。 计算机视觉 API 可以根据在图像中找到的对象、生物、风景或动作返回标记。 与类别不同，标记不是根据层次结构分类系统进行组织，而是对应于图像内容。 标记可能包含提示以避免多义性，或者提供上下文，例如标记"cello"可能伴随提示"乐器"。 所有标记均为英文。
      支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。
      成功响应将以 JSON 格式返回。 如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。
    syntax:
      content: 'function tagImageInStream(image: msRest.HttpRequestBody, options?: Models.ComputerVisionClientTagImageInStreamOptionalParams)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: options
          type:
            - Models.ComputerVisionClientTagImageInStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TagImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1'
    name: 'tagImageInStream(msRest.HttpRequestBody, ServiceCallback<TagResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function tagImageInStream(image: msRest.HttpRequestBody, callback: ServiceCallback<TagResult>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: 图像流。
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-computervision.TagResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.TagImageInStreamResponse>
    package: '@azure/cognitiveservices-computervision'
references:
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientContext'
    name: ComputerVisionClientContext
    spec.typeScript:
      - name: ComputerVisionClientContext
        fullName: ComputerVisionClientContext
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.ImageAnalysis>
    name: ImageAnalysis>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageAnalysis
        fullName: ImageAnalysis
        uid: '@azure/cognitiveservices-computervision.ImageAnalysis'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams'
    name: ComputerVisionClientAnalyzeImageOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientAnalyzeImageOptionalParams
        fullName: ComputerVisionClientAnalyzeImageOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.DomainModelResults>
    name: DomainModelResults>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DomainModelResults
        fullName: DomainModelResults
        uid: '@azure/cognitiveservices-computervision.DomainModelResults'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainOptionalParams'
    name: ComputerVisionClientAnalyzeImageByDomainOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientAnalyzeImageByDomainOptionalParams
        fullName: ComputerVisionClientAnalyzeImageByDomainOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams'
    name: ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams
        fullName: ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageByDomainInStreamOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageInStreamOptionalParams'
    name: ComputerVisionClientAnalyzeImageInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientAnalyzeImageInStreamOptionalParams
        fullName: ComputerVisionClientAnalyzeImageInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientAnalyzeImageInStreamOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.ImageDescription>
    name: ImageDescription>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImageDescription
        fullName: ImageDescription
        uid: '@azure/cognitiveservices-computervision.ImageDescription'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageOptionalParams'
    name: ComputerVisionClientDescribeImageOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientDescribeImageOptionalParams
        fullName: ComputerVisionClientDescribeImageOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageInStreamOptionalParams'
    name: ComputerVisionClientDescribeImageInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientDescribeImageInStreamOptionalParams
        fullName: ComputerVisionClientDescribeImageInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientDescribeImageInStreamOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.DetectResult>
    name: DetectResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DetectResult
        fullName: DetectResult
        uid: '@azure/cognitiveservices-computervision.DetectResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailOptionalParams'
    name: ComputerVisionClientGenerateThumbnailOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientGenerateThumbnailOptionalParams
        fullName: ComputerVisionClientGenerateThumbnailOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailInStreamOptionalParams'
    name: ComputerVisionClientGenerateThumbnailInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientGenerateThumbnailInStreamOptionalParams
        fullName: ComputerVisionClientGenerateThumbnailInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientGenerateThumbnailInStreamOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.AreaOfInterestResult>
    name: AreaOfInterestResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AreaOfInterestResult
        fullName: AreaOfInterestResult
        uid: '@azure/cognitiveservices-computervision.AreaOfInterestResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.ReadOperationResult>
    name: ReadOperationResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ReadOperationResult
        fullName: ReadOperationResult
        uid: '@azure/cognitiveservices-computervision.ReadOperationResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.TextOperationResult>
    name: TextOperationResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TextOperationResult
        fullName: TextOperationResult
        uid: '@azure/cognitiveservices-computervision.TextOperationResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.ListModelsResult>
    name: ListModelsResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListModelsResult
        fullName: ListModelsResult
        uid: '@azure/cognitiveservices-computervision.ListModelsResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.OcrResult>
    name: OcrResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OcrResult
        fullName: OcrResult
        uid: '@azure/cognitiveservices-computervision.OcrResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextOptionalParams'
    name: ComputerVisionClientRecognizePrintedTextOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientRecognizePrintedTextOptionalParams
        fullName: ComputerVisionClientRecognizePrintedTextOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams'
    name: ComputerVisionClientRecognizePrintedTextInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientRecognizePrintedTextInStreamOptionalParams
        fullName: ComputerVisionClientRecognizePrintedTextInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientRecognizePrintedTextInStreamOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-computervision.TagResult>
    name: TagResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TagResult
        fullName: TagResult
        uid: '@azure/cognitiveservices-computervision.TagResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageOptionalParams'
    name: ComputerVisionClientTagImageOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientTagImageOptionalParams
        fullName: ComputerVisionClientTagImageOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageOptionalParams'
  - uid: '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageInStreamOptionalParams'
    name: ComputerVisionClientTagImageInStreamOptionalParams
    spec.typeScript:
      - name: ComputerVisionClientTagImageInStreamOptionalParams
        fullName: ComputerVisionClientTagImageInStreamOptionalParams
        uid: '@azure/cognitiveservices-computervision.ComputerVisionClientTagImageInStreamOptionalParams'