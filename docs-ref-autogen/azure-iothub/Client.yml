### YamlMime:UniversalReference
ms.openlocfilehash: 62975cd56b2bf89e7158907fce365b3a6cebdf51
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 08/12/2018
ms.locfileid: "40052630"
items:
- uid: azure-iothub.Client
  name: Client
  fullName: Client
  children:
  - azure-iothub.Client.Callback
  - azure-iothub.Client.close
  - azure-iothub.Client.fromConnectionString
  - azure-iothub.Client.fromSharedAccessSignature
  - azure-iothub.Client.getFeedbackReceiver
  - azure-iothub.Client.getFileNotificationReceiver
  - azure-iothub.Client.invokeDeviceMethod
  - azure-iothub.Client.invokeDeviceMethod_1
  - azure-iothub.Client.open
  - azure-iothub.Client.send
  - azure-iothub.Client.setRetryPolicy
  - azure-iothub.Client.TransportCtor
  langs:
  - typeScript
  type: class
  summary: >
    <span data-ttu-id="ad46a-101">IoT 中心服务客户端用于与通过 Azure IoT 中心的设备进行通信。</span><span class="sxs-lookup"><span data-stu-id="ad46a-101">The IoT Hub service client is used to communicate with devices through an Azure IoT hub.</span></span>

    <span data-ttu-id="ad46a-102">它允许 SDK 用户：</span><span class="sxs-lookup"><span data-stu-id="ad46a-102">It lets the SDK user:</span></span>
      - <span data-ttu-id="ad46a-103">向设备发送设备到云 （也称为命令）： 命令在 IoT 中心排队，并仅在连接设备时以异步方式传递。</span><span class="sxs-lookup"><span data-stu-id="ad46a-103">send device-to-cloud (also known as commands) to devices: commands are queued on IoT Hub and delivered asynchronously only when the device is connected.</span></span> <span data-ttu-id="ad46a-104">仅有 50 个命令可以将排入队列每台设备。</span><span class="sxs-lookup"><span data-stu-id="ad46a-104">Only 50 commands can be queued per device.</span></span>
      - <span data-ttu-id="ad46a-105">对设备调用直接方法 (可仅当当前连接的设备： 它是与设备通信的同步方法)</span><span class="sxs-lookup"><span data-stu-id="ad46a-105">invoke direct methods on devices (which will work only if the device is currently connected: it's a synchronous way of communicating with the device)</span></span>
      - <span data-ttu-id="ad46a-106">侦听由前面的命令的设备发送的反馈消息。</span><span class="sxs-lookup"><span data-stu-id="ad46a-106">listen for feedback messages sent by devices for previous commands.</span></span>
      - <span data-ttu-id="ad46a-107">侦听来自设备的文件上传通知。</span><span class="sxs-lookup"><span data-stu-id="ad46a-107">listen for file upload notifications from devices.</span></span>
    <span data-ttu-id="ad46a-108">用户应创建新<xref:azure-iothub.Client>实例通过调用工厂方法之一[fromConnectionString](xref:azure-iothub.Client.fromConnectionString)或[fromSharedAccessSignature](xref:azure-iothub.Client.fromSharedAccessSignature)，以创建 IoT 中心服务客户端。</span><span class="sxs-lookup"><span data-stu-id="ad46a-108">Users should create new <xref:azure-iothub.Client> instances by calling one of the factory methods, [fromConnectionString](xref:azure-iothub.Client.fromConnectionString) or [fromSharedAccessSignature](xref:azure-iothub.Client.fromSharedAccessSignature), to create an IoT Hub service Client.</span></span>
  extends:
    name: EventEmitter
  package: azure-iothub
- uid: azure-iothub.Client.Callback
  name: Callback
  fullName: Callback<T>
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
- uid: azure-iothub.Client.close
  name: close
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ad46a-109">关闭到 IoT 中心的连接。</span><span class="sxs-lookup"><span data-stu-id="ad46a-109">Closes the connection to an IoT hub.</span></span>
  syntax:
    content: 'function close(done?: Callback<Disconnected>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<Disconnected>
      description: >
        <span data-ttu-id="ad46a-110">要完成该操作时调用的函数。</span><span class="sxs-lookup"><span data-stu-id="ad46a-110">The function to call when the operation is complete.</span></span> <span data-ttu-id="ad46a-111">`done` 将传递的错误对象参数，将为 null，如果操作成功完成。</span><span class="sxs-lookup"><span data-stu-id="ad46a-111">`done` will be passed an Error object argument, which will be null if the operation completed successfully.</span></span>
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.fromConnectionString
  name: fromConnectionString
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ad46a-112">从使用默认传输协议 (Amqp) 或第二个参数中指定的给定的连接字符串创建 IoT 中心服务客户端。</span><span class="sxs-lookup"><span data-stu-id="ad46a-112">Creates an IoT Hub service client from the given connection string using the default transport (Amqp) or the one specified in the second argument.</span></span>
  syntax:
    content: 'static function fromConnectionString(connStr: string, transportCtor?: Client.TransportCtor)'
    parameters:
    - id: connStr
      type:
      - string
      description: <span data-ttu-id="ad46a-113">连接字符串，其中封装一个 IoT 中心的"设备连接"权限。</span><span class="sxs-lookup"><span data-stu-id="ad46a-113">A connection string which encapsulates "device connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - azure-iothub.Client.TransportCtor
      description: ''
      optional: true
    return:
      type:
      - azure-iothub.Client
  package: azure-iothub
- uid: azure-iothub.Client.fromSharedAccessSignature
  name: fromSharedAccessSignature
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ad46a-114">从使用默认传输协议 (Amqp) 或其中一个指定第二个参数中给定的共享的访问签名创建 IoT 中心服务客户端。</span><span class="sxs-lookup"><span data-stu-id="ad46a-114">Creates an IoT Hub service client from the given shared access signature using the default transport (Amqp) or the one specified in the second argument.</span></span>
  syntax:
    content: 'static function fromSharedAccessSignature(sharedAccessSignature: string, transportCtor?: Client.TransportCtor)'
    parameters:
    - id: sharedAccessSignature
      type:
      - string
      description: <span data-ttu-id="ad46a-115">共享的访问签名，其中封装一个 IoT 中心的"服务连接"权限。</span><span class="sxs-lookup"><span data-stu-id="ad46a-115">A shared access signature which encapsulates "service connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - azure-iothub.Client.TransportCtor
      description: ''
      optional: true
    return:
      type:
      - azure-iothub.Client
  package: azure-iothub
- uid: azure-iothub.Client.getFeedbackReceiver
  name: getFeedbackReceiver
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ad46a-116">返回一个 AmqpReceiver 对象用来发出事件时由客户端接收新反馈消息。</span><span class="sxs-lookup"><span data-stu-id="ad46a-116">Returns a AmqpReceiver object which emits events when new feedback messages are received by the client.</span></span>
  syntax:
    content: 'function getFeedbackReceiver(done: Callback<ServiceReceiver>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
      description: >
        <span data-ttu-id="ad46a-117">要完成该操作时调用的函数。</span><span class="sxs-lookup"><span data-stu-id="ad46a-117">The function to call when the operation is complete.</span></span> <span data-ttu-id="ad46a-118">`done` 调用时将使用两个参数： 错误对象 （可以为 null） 和 AmqpReceiver 对象。</span><span class="sxs-lookup"><span data-stu-id="ad46a-118">`done` will be called with two arguments: an Error object (can be null) and a AmqpReceiver object.</span></span>
  package: azure-iothub
- uid: azure-iothub.Client.getFileNotificationReceiver
  name: getFileNotificationReceiver
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ad46a-119">返回一个 AmqpReceiver 对象用来发出事件时由客户端接收新文件上传通知。</span><span class="sxs-lookup"><span data-stu-id="ad46a-119">Returns a AmqpReceiver object which emits events when new file upload notifications are received by the client.</span></span>
  syntax:
    content: 'function getFileNotificationReceiver(done: Callback<ServiceReceiver>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
      description: >
        <span data-ttu-id="ad46a-120">要完成该操作时调用的函数。</span><span class="sxs-lookup"><span data-stu-id="ad46a-120">The function to call when the operation is complete.</span></span> <span data-ttu-id="ad46a-121">`done` 调用时将使用两个参数： 错误对象 （可以为 null） 和 AmqpReceiver 对象。</span><span class="sxs-lookup"><span data-stu-id="ad46a-121">`done` will be called with two arguments: an Error object (can be null) and a AmqpReceiver object.</span></span>
  package: azure-iothub
- uid: azure-iothub.Client.invokeDeviceMethod
  name: invokeDeviceMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ad46a-122">调用特定设备或模块上的方法。</span><span class="sxs-lookup"><span data-stu-id="ad46a-122">Invokes a method on a particular device or module.</span></span>
  syntax:
    content: 'function invokeDeviceMethod(deviceId: string, methodParams: DeviceMethodParams, done?: Callback<any>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: <span data-ttu-id="ad46a-123">为现有的设备标识的标识符。</span><span class="sxs-lookup"><span data-stu-id="ad46a-123">The identifier of an existing device identity.</span></span>
    - id: methodParams
      type:
      - azure-iothub.DeviceMethodParams
      description: ''
    - id: done
      type:
      - azure-iothub.Client.Callback<any>
      description: >
        <span data-ttu-id="ad46a-124">要使用方法执行的结果调用的回调。</span><span class="sxs-lookup"><span data-stu-id="ad46a-124">The callback to call with the result of the method execution.</span></span>
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.invokeDeviceMethod_1
  name: invokeDeviceMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ad46a-125">调用特定设备或模块上的方法。</span><span class="sxs-lookup"><span data-stu-id="ad46a-125">Invokes a method on a particular device or module.</span></span>
  syntax:
    content: 'function invokeDeviceMethod(deviceId: string, moduleId: string, methodParams: DeviceMethodParams, done?: Callback<any>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iothub.DeviceMethodParams
      description: ''
    - id: done
      type:
      - azure-iothub.Client.Callback<any>
      description: ''
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.open
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ad46a-126">将打开与 IoT 中心的连接。</span><span class="sxs-lookup"><span data-stu-id="ad46a-126">Opens the connection to an IoT hub.</span></span>
  syntax:
    content: 'function open(done?: Callback<Connected>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<Connected>
      description: >
        <span data-ttu-id="ad46a-127">要完成该操作时调用的函数。</span><span class="sxs-lookup"><span data-stu-id="ad46a-127">The function to call when the operation is complete.</span></span> <span data-ttu-id="ad46a-128">`done` 将传递的错误对象参数，将为 null，如果操作成功完成。</span><span class="sxs-lookup"><span data-stu-id="ad46a-128">`done` will be passed an Error object argument, which will be null if the operation completed successfully.</span></span>
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.send
  name: send
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ad46a-129">将消息发送到设备。</span><span class="sxs-lookup"><span data-stu-id="ad46a-129">Sends a message to a device.</span></span>
  syntax:
    content: 'function send(deviceId: string, message: Message | Message.BufferConvertible, done?: Callback<MessageEnqueued>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: <span data-ttu-id="ad46a-130">为现有的设备标识的标识符。</span><span class="sxs-lookup"><span data-stu-id="ad46a-130">The identifier of an existing device identity.</span></span>
    - id: message
      type:
      - Message | Message.BufferConvertible
      description: >-
        <span data-ttu-id="ad46a-131">要发送到设备的消息正文。</span><span class="sxs-lookup"><span data-stu-id="ad46a-131">The body of the message to send to the device.</span></span>

        <span data-ttu-id="ad46a-132">如果`message`的类型不是[消息](xref:azure-iot-common.Message)，会将其转换。</span><span class="sxs-lookup"><span data-stu-id="ad46a-132">If `message` is not of type [Message](xref:azure-iot-common.Message), it will be converted.</span></span>
    - id: done
      type:
      - azure-iothub.Client.Callback<MessageEnqueued>
      description: >
        <span data-ttu-id="ad46a-133">要完成该操作时调用的函数。</span><span class="sxs-lookup"><span data-stu-id="ad46a-133">The function to call when the operation is complete.</span></span> <span data-ttu-id="ad46a-134">`done` 调用时将使用两个参数： 错误对象 （可以为 null） 和适用于日志记录或调试特定于传输的响应对象。</span><span class="sxs-lookup"><span data-stu-id="ad46a-134">`done` will be called with two arguments: an Error object (can be null) and a transport-specific response object useful for logging or debugging.</span></span>
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.setRetryPolicy
  name: setRetryPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ad46a-135">设置客户端用来重试网络操作的策略。</span><span class="sxs-lookup"><span data-stu-id="ad46a-135">Set the policy used by the client to retry network operations.</span></span>
  syntax:
    content: 'function setRetryPolicy(policy: RetryPolicy)'
    parameters:
    - id: policy
      type:
      - RetryPolicy
      description: >
        <span data-ttu-id="ad46a-136">用来重试操作 （例如策略。</span><span class="sxs-lookup"><span data-stu-id="ad46a-136">policy used to retry operations (eg.</span></span> <span data-ttu-id="ad46a-137">打开、 发送、 等等）。</span><span class="sxs-lookup"><span data-stu-id="ad46a-137">open, send, etc.).</span></span>

        <span data-ttu-id="ad46a-138">SDK 随附了两个"内置"策略： ExponentialBackoffWithJitter （默认值） 和 NoRetry （若要取消任何形式的重试）。</span><span class="sxs-lookup"><span data-stu-id="ad46a-138">The SDK comes with 2 "built-in" policies: ExponentialBackoffWithJitter (default) and NoRetry (to cancel any form of retry).</span></span> <span data-ttu-id="ad46a-139">只要它实现的两种方法，用户还可以传递其自己的对象:-shouldRetry(err: Error)： 布尔： 指示是否应根据错误类型-nextRetryTimeout 重试操作 (retryCount： 数量，限制： 布尔值): 数目： 返回在过去的尝试次数 (retryCount) 以及这一事实的错误是出现限制错误，还是不基于时间重试之前等待 （以毫秒为单位）。</span><span class="sxs-lookup"><span data-stu-id="ad46a-139">The user can also pass its own object as long as it implements 2 methods: - shouldRetry(err: Error): boolean : indicates whether an operation should be retried based on the error type - nextRetryTimeout(retryCount: number, throttled: boolean): number : returns the time to wait (in milliseconds) before retrying based on the past number of attempts (retryCount) and the fact that the error is a throttling error or not.</span></span>
  package: azure-iothub
- uid: azure-iothub.Client.TransportCtor
  name: TransportCtor
  fullName: TransportCtor
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
references:
- uid: azure-iothub.Client.Callback<MessageAbandoned>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageAbandoned>
    fullName: <MessageAbandoned>
- uid: azure-iothub.Client.Callback<MessageCompleted>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageCompleted>
    fullName: <MessageCompleted>
- uid: azure-iothub.Client.Callback<MessageRejected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageRejected>
    fullName: <MessageRejected>
- uid: azure-iothub.Client.Callback<Connected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <Connected>
    fullName: <Connected>
- uid: azure-iothub.Client.Callback<Disconnected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <Disconnected>
    fullName: <Disconnected>
- uid: azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <
    fullName: <
  - name: ServiceReceiver
    fullName: ServiceReceiver
    uid: azure-iothub.Client.ServiceReceiver
  - name: '>'
    fullName: '>'
- uid: azure-iothub.Client.Callback<MessageEnqueued>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageEnqueued>
    fullName: <MessageEnqueued>
- uid: azure-iothub.DeviceMethodParams
  spec.typeScript:
  - name: DeviceMethodParams
    fullName: DeviceMethodParams
    uid: azure-iothub.DeviceMethodParams
- uid: azure-iothub.Client.Callback<any>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <any>
    fullName: <any>
- uid: azure-iothub.Client.TransportCtor
  spec.typeScript:
  - name: TransportCtor
    fullName: TransportCtor
    uid: azure-iothub.Client.TransportCtor
- uid: azure-iothub.Client
  spec.typeScript:
  - name: Client
    fullName: Client
    uid: azure-iothub.Client
