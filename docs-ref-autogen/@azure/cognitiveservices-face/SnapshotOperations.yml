### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.SnapshotOperations'
    name: SnapshotOperations
    fullName: SnapshotOperations
    children:
      - '@azure/cognitiveservices-face.SnapshotOperations.apply'
      - '@azure/cognitiveservices-face.SnapshotOperations.apply_1'
      - '@azure/cognitiveservices-face.SnapshotOperations.apply_2'
      - '@azure/cognitiveservices-face.SnapshotOperations.deleteMethod'
      - '@azure/cognitiveservices-face.SnapshotOperations.deleteMethod_2'
      - '@azure/cognitiveservices-face.SnapshotOperations.deleteMethod_1'
      - '@azure/cognitiveservices-face.SnapshotOperations.get'
      - '@azure/cognitiveservices-face.SnapshotOperations.get_2'
      - '@azure/cognitiveservices-face.SnapshotOperations.get_1'
      - '@azure/cognitiveservices-face.SnapshotOperations.getOperationStatus'
      - '@azure/cognitiveservices-face.SnapshotOperations.getOperationStatus_2'
      - '@azure/cognitiveservices-face.SnapshotOperations.getOperationStatus_1'
      - '@azure/cognitiveservices-face.SnapshotOperations.list'
      - '@azure/cognitiveservices-face.SnapshotOperations.list_1'
      - '@azure/cognitiveservices-face.SnapshotOperations.list_2'
      - '@azure/cognitiveservices-face.SnapshotOperations.constructor'
      - '@azure/cognitiveservices-face.SnapshotOperations.take'
      - '@azure/cognitiveservices-face.SnapshotOperations.take_1'
      - '@azure/cognitiveservices-face.SnapshotOperations.take_2'
      - '@azure/cognitiveservices-face.SnapshotOperations.update'
      - '@azure/cognitiveservices-face.SnapshotOperations.update_1'
      - '@azure/cognitiveservices-face.SnapshotOperations.update_2'
    langs:
      - typeScript
    type: class
    summary: 表示 SnapshotOperations 类。
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.apply'
    name: 'apply(string, string, Models.SnapshotApplyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      提交一个操作以将快照应用于当前订阅。 对于每个快照，只有订阅中的快照-applyScope 包含 Take 可以应用它。<br />
      快照接口适用于备份和还原其人脸数据从一个人脸订阅到另一个，在同一区域内或跨地区的用户。 工作流包含两个阶段，用户首次调用快照-Take 来创建源对象的副本，并将其存储为快照，然后调用快照-适用于将粘贴到目标订阅的快照。 快照存储在中央位置 （每个 Azure 实例），以便它们可以应用跨帐户和区域。<br />
      应用快照是一个异步操作。 可以从"操作位置"字段中响应标头，用于 OperationStatus-用于跟踪应用快照的进度的 Get 获取操作 id。 将在 OperationStatus-获取响应时的操作状态为"已成功"的"resourceLocation"字段中包含的目标对象 id。<br />
      快照将应用时间取决于快照对象中的人员和人脸条目数。
      它无法为秒，否则的多个的人脸与 1,000,000 人员花费高达 1 小时。<br />
      将自动过期，在快照创建后的 48 小时中清理快照
      - 需要。 因此，在目标订阅需自创建以来的 48 小时内应用快照。<br />
      应用快照将不会阻止任何其他操作针对的目标对象，但是它不建议，因为快照应用过程中无法保证正确性。 快照应用完成后，向目标对象的所有操作可以照常都工作。
      快照还包括训练结果的源对象，这意味着不会不需要重新训练的目标对象调用标识/FindSimilar 之前应用于快照的目标订阅。<br />
      一个快照可以应用多次并行，尽管目前仅 CreateNew 应用模式支持，这意味着如果目标订阅已包含的相同的类型和使用相同的 objectId 对象应用操作将失败。 若要避免此类冲突的请求正文中，用户可以指定"objectId"。<br />
      * 免费层订阅配额：100 应用每个月的操作。
      * S0 层订阅配额：100 应用每日的操作。
    syntax:
      content: 'function apply(snapshotId: string, objectId: string, options?: Models.SnapshotApplyOptionalParams)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 引用特定快照的 id。
        - id: objectId
          type:
            - string
          description: 用户指定要从快照创建的目标对象 id。
        - id: options
          type:
            - Models.SnapshotApplyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SnapshotApplyResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.apply_1'
    name: 'apply(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function apply(snapshotId: string, objectId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 引用特定快照的 id。
        - id: objectId
          type:
            - string
          description: 用户指定要从快照创建的目标对象 id。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<Models.SnapshotApplyResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.apply_2'
    name: 'apply(string, string, SnapshotApplyOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function apply(snapshotId: string, objectId: string, options: SnapshotApplyOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 引用特定快照的 id。
        - id: objectId
          type:
            - string
          description: 用户指定要从快照创建的目标对象 id。
        - id: options
          type:
            - '@azure/cognitiveservices-face.SnapshotApplyOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<Models.SnapshotApplyResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 删除根据 snapshotId 的现有快照。 此外将删除所有对象数据和快照中的信息。 仅源订阅者已快照可删除的快照。 如果用户不会删除与此 API 的快照，快照将仍会自动删除在创建后的 48 小时内。
    syntax:
      content: 'function deleteMethod(snapshotId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 引用特定快照的 id。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.deleteMethod_2'
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(snapshotId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 引用特定快照的 id。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(snapshotId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 引用特定快照的 id。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.get'
    name: 'get(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 检索有关快照的信息。 快照仅可以访问源订阅者已，并且目标订阅中 applyScope 中包含快照的执行。
    syntax:
      content: 'function get(snapshotId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 引用特定快照的 id。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SnapshotGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.get_2'
    name: 'get(string, RequestOptionsBase, ServiceCallback<Snapshot>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(snapshotId: string, options: RequestOptionsBase, callback: ServiceCallback<Snapshot>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 引用特定快照的 id。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Snapshot>
          description: |
            回调
      return:
        type:
          - Promise<Models.SnapshotGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.get_1'
    name: 'get(string, ServiceCallback<Snapshot>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(snapshotId: string, callback: ServiceCallback<Snapshot>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 引用特定快照的 id。
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Snapshot>
          description: |
            回调
      return:
        type:
          - Promise<Models.SnapshotGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.getOperationStatus'
    name: 'getOperationStatus(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 检索应用 take/快照操作的状态。
    syntax:
      content: 'function getOperationStatus(operationId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: operationId
          type:
            - string
          description: 引用特定 take/应用快照操作的 id。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SnapshotGetOperationStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.getOperationStatus_2'
    name: 'getOperationStatus(string, RequestOptionsBase, ServiceCallback<OperationStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getOperationStatus(operationId: string, options: RequestOptionsBase, callback: ServiceCallback<OperationStatus>)'
      parameters:
        - id: operationId
          type:
            - string
          description: 引用特定 take/应用快照操作的 id。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.OperationStatus>
          description: |
            回调
      return:
        type:
          - Promise<Models.SnapshotGetOperationStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.getOperationStatus_1'
    name: 'getOperationStatus(string, ServiceCallback<OperationStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getOperationStatus(operationId: string, callback: ServiceCallback<OperationStatus>)'
      parameters:
        - id: operationId
          type:
            - string
          description: 引用特定 take/应用快照操作的 id。
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.OperationStatus>
          description: |
            回调
      return:
        type:
          - Promise<Models.SnapshotGetOperationStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.list'
    name: list(Models.SnapshotListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 列出所有可访问快照的相关信息，包括由用户执行的快照或快照应用于用户 （订阅 id 包含在快照中 applyScope-需要）。
    syntax:
      content: 'function list(options?: Models.SnapshotListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.SnapshotListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SnapshotListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.list_1'
    name: 'list(ServiceCallback<Snapshot[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<Snapshot[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Snapshot[]>'
          description: |
            回调
      return:
        type:
          - Promise<Models.SnapshotListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.list_2'
    name: 'list(SnapshotListOptionalParams, ServiceCallback<Snapshot[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: SnapshotListOptionalParams, callback: ServiceCallback<Snapshot[]>)'
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-face.SnapshotListOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Snapshot[]>'
          description: |
            回调
      return:
        type:
          - Promise<Models.SnapshotListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.constructor'
    name: SnapshotOperations(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: 创建 SnapshotOperations。
    syntax:
      content: 'new SnapshotOperations(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            对服务客户端的引用。
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.take'
    name: 'take(Models.SnapshotObjectType, string, string[], Models.SnapshotTakeOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      提交一个操作以使用用户指定快照类型时，源对象 id 执行人脸列表、 大型人脸列表、 人员组或大型用户组的快照，应用的范围和可选的用户数据。<br />
      快照接口适用于备份和还原其人脸数据从一个人脸订阅到另一个，在同一区域内或跨地区的用户。 工作流包含两个阶段，用户首次调用快照-Take 来创建源对象的副本，并将其存储为快照，然后调用快照-适用于将粘贴到目标订阅的快照。 快照存储在中央位置 （每个 Azure 实例），以便它们可以应用跨帐户和区域。<br />
      创建快照是一个异步操作。 可以从"操作位置"字段中响应标头，用于 OperationStatus-用于跟踪创建快照的进度的 Get 获取操作 id。 将在 OperationStatus-获取响应时的操作状态为"已成功"的"resourceLocation"字段中包含的快照 id。<br />
      快照生成时间取决于源对象中的人员和人脸条目数。 它可能是以秒为单位，或最多为 1,000,000 多个的人脸的人员的几个小时。<br />
      将自动过期，在快照创建后的 48 小时中清理快照
      - 需要。 用户可以删除快照使用快照-删除本身之前过期。<br />
      创建某个对象的快照不会阻止对对象的任何其他操作。 可以像往常一样进行所有只读操作 （Get/列表和标识/FindSimilar/验证）。 对于所有可写操作，包括添加/更新/删除源对象或其人员/人脸和训练，它们是未被阻止，但不是建议，因为可写的更新可能不会反映在快照期间其采用。 快照生成完成后，所有读取和写入操作可以照常工作。 快照还将包括训练结果的源对象，这意味着不会不需要重新训练的目标对象调用标识/FindSimilar 之前应用于快照的目标订阅。<br />
      * 免费层订阅配额：每月 100 个 take 操作。
      * S0 层订阅配额：每天 100 个 take 操作。
    syntax:
      content: 'function take(type: Models.SnapshotObjectType, objectId: string, applyScope: string[], options?: Models.SnapshotTakeOptionalParams)'
      parameters:
        - id: type
          type:
            - Models.SnapshotObjectType
          description: '用户指定的源对象类型才能从快照。 目前支持 FaceList、 person Group、 大型人脸列表和大型人物组。 可能的值包括：''FaceList'', ''LargeFaceList'', ''LargePersonGroup'', ''PersonGroup'''
        - id: objectId
          type:
            - string
          description: 用户指定的源对象 id，才能从快照。
        - id: applyScope
          type:
            - 'string[]'
          description: 用户指定的目标人脸的快照的订阅 id 的数组。 对于每个快照，只有订阅中的快照-applyScope 包含 Take 可以应用它。
        - id: options
          type:
            - Models.SnapshotTakeOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.SnapshotTakeResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.take_1'
    name: 'take(Models.SnapshotObjectType, string, string[], ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function take(type: Models.SnapshotObjectType, objectId: string, applyScope: string[], callback: ServiceCallback<void>)'
      parameters:
        - id: type
          type:
            - Models.SnapshotObjectType
          description: '用户指定的源对象类型才能从快照。 目前支持 FaceList、 person Group、 大型人脸列表和大型人物组。 可能的值包括：''FaceList'', ''LargeFaceList'', ''LargePersonGroup'', ''PersonGroup'''
        - id: objectId
          type:
            - string
          description: 用户指定的源对象 id，才能从快照。
        - id: applyScope
          type:
            - 'string[]'
          description: 用户指定的目标人脸的快照的订阅 id 的数组。 对于每个快照，只有订阅中的快照-applyScope 包含 Take 可以应用它。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<Models.SnapshotTakeResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.take_2'
    name: 'take(Models.SnapshotObjectType, string, string[], SnapshotTakeOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function take(type: Models.SnapshotObjectType, objectId: string, applyScope: string[], options: SnapshotTakeOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: type
          type:
            - Models.SnapshotObjectType
          description: '用户指定的源对象类型才能从快照。 目前支持 FaceList、 person Group、 大型人脸列表和大型人物组。 可能的值包括：''FaceList'', ''LargeFaceList'', ''LargePersonGroup'', ''PersonGroup'''
        - id: objectId
          type:
            - string
          description: 用户指定的源对象 id，才能从快照。
        - id: applyScope
          type:
            - 'string[]'
          description: 用户指定的目标人脸的快照的订阅 id 的数组。 对于每个快照，只有订阅中的快照-applyScope 包含 Take 可以应用它。
        - id: options
          type:
            - '@azure/cognitiveservices-face.SnapshotTakeOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<Models.SnapshotTakeResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.update'
    name: 'update(string, Models.SnapshotUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 更新的快照的信息。 仅源订阅者已在快照可以更新快照。
    syntax:
      content: 'function update(snapshotId: string, options?: Models.SnapshotUpdateOptionalParams)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 引用特定快照的 id。
        - id: options
          type:
            - Models.SnapshotUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.update_1'
    name: 'update(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(snapshotId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 引用特定快照的 id。
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations.update_2'
    name: 'update(string, SnapshotUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(snapshotId: string, options: SnapshotUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: snapshotId
          type:
            - string
          description: 引用特定快照的 id。
        - id: options
          type:
            - '@azure/cognitiveservices-face.SnapshotUpdateOptionalParams'
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            回调
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: '@azure/cognitiveservices-face.SnapshotApplyOptionalParams'
    name: SnapshotApplyOptionalParams
    spec.typeScript:
      - name: SnapshotApplyOptionalParams
        fullName: SnapshotApplyOptionalParams
        uid: '@azure/cognitiveservices-face.SnapshotApplyOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.Snapshot>
    name: Snapshot>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Snapshot
        fullName: Snapshot
        uid: '@azure/cognitiveservices-face.Snapshot'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-face.OperationStatus>
    name: OperationStatus>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OperationStatus
        fullName: OperationStatus
        uid: '@azure/cognitiveservices-face.OperationStatus'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.Snapshot[]>'
    name: 'Snapshot[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Snapshot
        fullName: Snapshot
        uid: '@azure/cognitiveservices-face.Snapshot'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.SnapshotListOptionalParams'
    name: SnapshotListOptionalParams
    spec.typeScript:
      - name: SnapshotListOptionalParams
        fullName: SnapshotListOptionalParams
        uid: '@azure/cognitiveservices-face.SnapshotListOptionalParams'
  - uid: '@azure/cognitiveservices-face.SnapshotTakeOptionalParams'
    name: SnapshotTakeOptionalParams
    spec.typeScript:
      - name: SnapshotTakeOptionalParams
        fullName: SnapshotTakeOptionalParams
        uid: '@azure/cognitiveservices-face.SnapshotTakeOptionalParams'
  - uid: '@azure/cognitiveservices-face.SnapshotUpdateOptionalParams'
    name: SnapshotUpdateOptionalParams
    spec.typeScript:
      - name: SnapshotUpdateOptionalParams
        fullName: SnapshotUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.SnapshotUpdateOptionalParams'