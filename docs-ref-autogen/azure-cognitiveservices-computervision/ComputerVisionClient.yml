### YamlMime:UniversalReference
ms.openlocfilehash: f7bb0a77329788feb31835819b61ccba9c59535e
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 12/13/2018
ms.locfileid: "52026122"
items:
- uid: azure-cognitiveservices-computervision.ComputerVisionClient
  name: ComputerVisionClient
  fullName: ComputerVisionClient
  children:
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.constructor
  - azure-cognitiveservices-computervision.ComputerVisionClient.credentials
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.endpoint
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResultWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModels
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModels_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModels_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModelsWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageWithHttpOperationResponse
  langs:
  - typeScript
  type: class
  summary: ''
  extends:
    name: ServiceClient
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage
  name: analyzeImage(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-101">此操作将提取一组丰富的基于图像内容的视觉特征。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-101">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="3b1d3-102">支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-102">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="3b1d3-103">在你的请求，是一个可选参数，以便您可以选择要返回的特征。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-103">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="3b1d3-104">默认情况下，在响应中返回映像类别。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-104">By default, image categories are returned in the response.</span></span>
  syntax:
    content: 'function analyzeImage(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-105">可公开访问的图像的 URL</span><span class="sxs-lookup"><span data-stu-id="3b1d3-105">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2
  name: analyzeImage(string, Object, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-106">此操作将提取一组丰富的基于图像内容的视觉特征。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-106">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="3b1d3-107">支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-107">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="3b1d3-108">在你的请求，是一个可选参数，以便您可以选择要返回的特征。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-108">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="3b1d3-109">默认情况下，在响应中返回映像类别。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-109">By default, image categories are returned in the response.</span></span>
  syntax:
    content: 'function analyzeImage(url: string, options: Object, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1
  name: analyzeImage(string, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-110">此操作将提取一组丰富的基于图像内容的视觉特征。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-110">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="3b1d3-111">支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-111">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="3b1d3-112">在你的请求，是一个可选参数，以便您可以选择要返回的特征。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-112">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="3b1d3-113">默认情况下，在响应中返回映像类别。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-113">By default, image categories are returned in the response.</span></span>
  syntax:
    content: 'function analyzeImage(url: string, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain
  name: analyzeImageByDomain(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-114">此操作通过应用特定于域的模型来识别图像中的内容。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-114">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="3b1d3-115">可以使用 /models GET 请求检索到的计算机视觉 API 支持的特定于域的模型的列表。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-115">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="3b1d3-116">目前，该 API 只提供了单一的特定于域的模型： 名人。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-116">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="3b1d3-117">支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-117">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="3b1d3-118">成功响应将以 JSON 格式返回。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-118">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="3b1d3-119">如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-119">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-120">要识别的特定于域的内容。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-120">The domain-specific content to recognize.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-121">可公开访问的图像的 URL</span><span class="sxs-lookup"><span data-stu-id="3b1d3-121">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2
  name: analyzeImageByDomain(string, string, Object, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-122">此操作通过应用特定于域的模型来识别图像中的内容。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-122">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="3b1d3-123">可以使用 /models GET 请求检索到的计算机视觉 API 支持的特定于域的模型的列表。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-123">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="3b1d3-124">目前，该 API 只提供了单一的特定于域的模型： 名人。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-124">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="3b1d3-125">支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-125">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="3b1d3-126">成功响应将以 JSON 格式返回。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-126">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="3b1d3-127">如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-127">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options: Object, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1
  name: analyzeImageByDomain(string, string, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-128">此操作通过应用特定于域的模型来识别图像中的内容。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-128">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="3b1d3-129">可以使用 /models GET 请求检索到的计算机视觉 API 支持的特定于域的模型的列表。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-129">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="3b1d3-130">目前，该 API 只提供了单一的特定于域的模型： 名人。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-130">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="3b1d3-131">支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-131">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="3b1d3-132">成功响应将以 JSON 格式返回。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-132">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="3b1d3-133">如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-133">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream
  name: analyzeImageByDomainInStream(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-134">此操作通过应用特定于域的模型来识别图像中的内容。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-134">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="3b1d3-135">可以使用 /models GET 请求检索到的计算机视觉 API 支持的特定于域的模型的列表。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-135">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="3b1d3-136">目前，该 API 只提供了单一的特定于域的模型： 名人。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-136">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="3b1d3-137">支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-137">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="3b1d3-138">成功响应将以 JSON 格式返回。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-138">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="3b1d3-139">如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-139">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-140">要识别的特定于域的内容。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-140">The domain-specific content to recognize.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3b1d3-141">图像流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-141">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2
  name: analyzeImageByDomainInStream(string, stream.Readable, Object, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-142">此操作通过应用特定于域的模型来识别图像中的内容。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-142">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="3b1d3-143">可以使用 /models GET 请求检索到的计算机视觉 API 支持的特定于域的模型的列表。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-143">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="3b1d3-144">目前，该 API 只提供了单一的特定于域的模型： 名人。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-144">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="3b1d3-145">支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-145">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="3b1d3-146">成功响应将以 JSON 格式返回。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-146">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="3b1d3-147">如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-147">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options: Object, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1
  name: analyzeImageByDomainInStream(string, stream.Readable, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-148">此操作通过应用特定于域的模型来识别图像中的内容。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-148">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="3b1d3-149">可以使用 /models GET 请求检索到的计算机视觉 API 支持的特定于域的模型的列表。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-149">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="3b1d3-150">目前，该 API 只提供了单一的特定于域的模型： 名人。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-150">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="3b1d3-151">支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-151">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="3b1d3-152">成功响应将以 JSON 格式返回。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-152">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="3b1d3-153">如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-153">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  name: analyzeImageByDomainInStreamWithHttpOperationResponse(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-154">此操作通过应用特定于域的模型来识别图像中的内容。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-154">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="3b1d3-155">可以使用 /models GET 请求检索到的计算机视觉 API 支持的特定于域的模型的列表。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-155">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="3b1d3-156">目前，该 API 只提供了单一的特定于域的模型： 名人。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-156">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="3b1d3-157">支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-157">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="3b1d3-158">成功响应将以 JSON 格式返回。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-158">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="3b1d3-159">如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-159">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStreamWithHttpOperationResponse(model: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-160">要识别的特定于域的内容。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-160">The domain-specific content to recognize.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3b1d3-161">图像流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-161">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainWithHttpOperationResponse
  name: analyzeImageByDomainWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-162">此操作通过应用特定于域的模型来识别图像中的内容。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-162">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="3b1d3-163">可以使用 /models GET 请求检索到的计算机视觉 API 支持的特定于域的模型的列表。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-163">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="3b1d3-164">目前，该 API 只提供了单一的特定于域的模型： 名人。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-164">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="3b1d3-165">支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-165">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="3b1d3-166">成功响应将以 JSON 格式返回。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-166">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="3b1d3-167">如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-167">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainWithHttpOperationResponse(model: string, url: string, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-168">要识别的特定于域的内容。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-168">The domain-specific content to recognize.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-169">可公开访问的图像的 URL</span><span class="sxs-lookup"><span data-stu-id="3b1d3-169">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream
  name: analyzeImageInStream(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-170">此操作将提取一组丰富的基于图像内容的视觉特征。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-170">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3b1d3-171">图像流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-171">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2
  name: analyzeImageInStream(stream.Readable, Object, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-172">此操作将提取一组丰富的基于图像内容的视觉特征。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-172">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1
  name: analyzeImageInStream(stream.Readable, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-173">此操作将提取一组丰富的基于图像内容的视觉特征。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-173">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStreamWithHttpOperationResponse
  name: analyzeImageInStreamWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-174">此操作将提取一组丰富的基于图像内容的视觉特征。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-174">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3b1d3-175">图像流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-175">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageWithHttpOperationResponse
  name: analyzeImageWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-176">此操作将提取一组丰富的基于图像内容的视觉特征。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-176">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="3b1d3-177">支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-177">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="3b1d3-178">在你的请求，是一个可选参数，以便您可以选择要返回的特征。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-178">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="3b1d3-179">默认情况下，在响应中返回映像类别。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-179">By default, image categories are returned in the response.</span></span>
  syntax:
    content: 'function analyzeImageWithHttpOperationResponse(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-180">可公开访问的图像的 URL</span><span class="sxs-lookup"><span data-stu-id="3b1d3-180">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.constructor
  name: ComputerVisionClient(ServiceClientCredentials, string, ServiceClientOptions)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new ComputerVisionClient(credentials: ServiceClientCredentials, endpoint: string, options?: ServiceClientOptions)'
    parameters:
    - id: credentials
      type:
      - ServiceClientCredentials
      description: >
        <span data-ttu-id="3b1d3-181">唯一地标识客户端订阅的订阅凭据。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-181">Subscription credentials which uniquely identify client subscription.</span></span>
    - id: endpoint
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-182">受支持的认知服务终结点</span><span class="sxs-lookup"><span data-stu-id="3b1d3-182">Supported Cognitive Services endpoints</span></span>
    - id: options
      type:
      - ServiceClientOptions
      description: ''
      optional: true
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.credentials
  name: credentials
  fullName: credentials
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'credentials: ServiceClientCredentials'
    return:
      type:
      - ServiceClientCredentials
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage
  name: describeImage(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-183">此操作中使用完整的句子的人类可读语言生成的图像的说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-183">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="3b1d3-184">描述基于内容的标记，也会返回由该操作的集合。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-184">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="3b1d3-185">可以为每个映像生成多个说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-185">More than one description can be generated for each image.</span></span>  <span data-ttu-id="3b1d3-186">按其置信度得分排序说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-186">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="3b1d3-187">所有说明都是英文。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-187">All descriptions are in English.</span></span> <span data-ttu-id="3b1d3-188">支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。成功的响应将以 json 格式返回。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-188">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3b1d3-189">如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-189">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImage(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-190">可公开访问的图像的 URL</span><span class="sxs-lookup"><span data-stu-id="3b1d3-190">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_2
  name: describeImage(string, Object, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-191">此操作中使用完整的句子的人类可读语言生成的图像的说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-191">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="3b1d3-192">描述基于内容的标记，也会返回由该操作的集合。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-192">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="3b1d3-193">可以为每个映像生成多个说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-193">More than one description can be generated for each image.</span></span>  <span data-ttu-id="3b1d3-194">按其置信度得分排序说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-194">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="3b1d3-195">所有说明都是英文。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-195">All descriptions are in English.</span></span> <span data-ttu-id="3b1d3-196">支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。成功的响应将以 json 格式返回。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-196">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3b1d3-197">如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-197">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImage(url: string, options: Object, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_1
  name: describeImage(string, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-198">此操作中使用完整的句子的人类可读语言生成的图像的说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-198">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="3b1d3-199">描述基于内容的标记，也会返回由该操作的集合。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-199">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="3b1d3-200">可以为每个映像生成多个说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-200">More than one description can be generated for each image.</span></span>  <span data-ttu-id="3b1d3-201">按其置信度得分排序说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-201">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="3b1d3-202">所有说明都是英文。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-202">All descriptions are in English.</span></span> <span data-ttu-id="3b1d3-203">支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。成功的响应将以 json 格式返回。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-203">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3b1d3-204">如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-204">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImage(url: string, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream
  name: describeImageInStream(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-205">此操作中使用完整的句子的人类可读语言生成的图像的说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-205">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="3b1d3-206">描述基于内容的标记，也会返回由该操作的集合。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-206">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="3b1d3-207">可以为每个映像生成多个说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-207">More than one description can be generated for each image.</span></span>  <span data-ttu-id="3b1d3-208">按其置信度得分排序说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-208">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="3b1d3-209">所有说明都是英文。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-209">All descriptions are in English.</span></span> <span data-ttu-id="3b1d3-210">支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。成功的响应将以 json 格式返回。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-210">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3b1d3-211">如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-211">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3b1d3-212">图像流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-212">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2
  name: describeImageInStream(stream.Readable, Object, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-213">此操作中使用完整的句子的人类可读语言生成的图像的说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-213">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="3b1d3-214">描述基于内容的标记，也会返回由该操作的集合。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-214">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="3b1d3-215">可以为每个映像生成多个说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-215">More than one description can be generated for each image.</span></span>  <span data-ttu-id="3b1d3-216">按其置信度得分排序说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-216">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="3b1d3-217">所有说明都是英文。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-217">All descriptions are in English.</span></span> <span data-ttu-id="3b1d3-218">支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。成功的响应将以 json 格式返回。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-218">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3b1d3-219">如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-219">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1
  name: describeImageInStream(stream.Readable, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-220">此操作中使用完整的句子的人类可读语言生成的图像的说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-220">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="3b1d3-221">描述基于内容的标记，也会返回由该操作的集合。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-221">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="3b1d3-222">可以为每个映像生成多个说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-222">More than one description can be generated for each image.</span></span>  <span data-ttu-id="3b1d3-223">按其置信度得分排序说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-223">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="3b1d3-224">所有说明都是英文。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-224">All descriptions are in English.</span></span> <span data-ttu-id="3b1d3-225">支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。成功的响应将以 json 格式返回。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-225">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3b1d3-226">如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-226">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStreamWithHttpOperationResponse
  name: describeImageInStreamWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-227">此操作中使用完整的句子的人类可读语言生成的图像的说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-227">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="3b1d3-228">描述基于内容的标记，也会返回由该操作的集合。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-228">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="3b1d3-229">可以为每个映像生成多个说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-229">More than one description can be generated for each image.</span></span>  <span data-ttu-id="3b1d3-230">按其置信度得分排序说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-230">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="3b1d3-231">所有说明都是英文。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-231">All descriptions are in English.</span></span> <span data-ttu-id="3b1d3-232">支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。成功的响应将以 json 格式返回。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-232">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3b1d3-233">如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-233">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3b1d3-234">图像流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-234">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageWithHttpOperationResponse
  name: describeImageWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-235">此操作中使用完整的句子的人类可读语言生成的图像的说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-235">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="3b1d3-236">描述基于内容的标记，也会返回由该操作的集合。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-236">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="3b1d3-237">可以为每个映像生成多个说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-237">More than one description can be generated for each image.</span></span>  <span data-ttu-id="3b1d3-238">按其置信度得分排序说明。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-238">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="3b1d3-239">所有说明都是英文。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-239">All descriptions are in English.</span></span> <span data-ttu-id="3b1d3-240">支持两个输入的法-（1） 上传图像或 （2） 指定图像 URL。成功的响应将以 json 格式返回。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-240">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3b1d3-241">如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-241">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function describeImageWithHttpOperationResponse(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-242">可公开访问的图像的 URL</span><span class="sxs-lookup"><span data-stu-id="3b1d3-242">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.endpoint
  name: endpoint
  fullName: endpoint
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'endpoint: string'
    return:
      type:
      - string
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail
  name: generateThumbnail(number, number, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-243">此操作将生成缩略图使用用户指定的宽度和高度。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-243">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="3b1d3-244">默认情况下，服务会分析图像，标识的兴趣区域 (ROI)，并生成基于投资回报率的智能裁剪坐标。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-244">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="3b1d3-245">指定不同于输入图像纵横比时，可帮助智能裁剪。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-245">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="3b1d3-246">成功的响应包含缩略图二进制文件。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-246">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="3b1d3-247">如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-247">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="3b1d3-248">缩略图的宽度。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-248">Width of the thumbnail.</span></span> <span data-ttu-id="3b1d3-249">它必须介于 1 到 1024年之间。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-249">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="3b1d3-250">推荐的最小为 50。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-250">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="3b1d3-251">缩略图的高度。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-251">Height of the thumbnail.</span></span> <span data-ttu-id="3b1d3-252">该值必须介于 1 和</span><span class="sxs-lookup"><span data-stu-id="3b1d3-252">It must be between 1 and</span></span>

        1024. <span data-ttu-id="3b1d3-253">推荐的最小为 50。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-253">Recommended minimum of 50.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-254">可公开访问的图像的 URL</span><span class="sxs-lookup"><span data-stu-id="3b1d3-254">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2
  name: generateThumbnail(number, number, string, Object, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-255">此操作将生成缩略图使用用户指定的宽度和高度。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-255">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="3b1d3-256">默认情况下，服务会分析图像，标识的兴趣区域 (ROI)，并生成基于投资回报率的智能裁剪坐标。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-256">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="3b1d3-257">指定不同于输入图像纵横比时，可帮助智能裁剪。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-257">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="3b1d3-258">成功的响应包含缩略图二进制文件。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-258">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="3b1d3-259">如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-259">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options: Object, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1
  name: generateThumbnail(number, number, string, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-260">此操作将生成缩略图使用用户指定的宽度和高度。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-260">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="3b1d3-261">默认情况下，服务会分析图像，标识的兴趣区域 (ROI)，并生成基于投资回报率的智能裁剪坐标。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-261">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="3b1d3-262">指定不同于输入图像纵横比时，可帮助智能裁剪。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-262">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="3b1d3-263">成功的响应包含缩略图二进制文件。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-263">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="3b1d3-264">如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-264">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream
  name: generateThumbnailInStream(number, number, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-265">此操作将生成缩略图使用用户指定的宽度和高度。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-265">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="3b1d3-266">默认情况下，服务会分析图像，标识的兴趣区域 (ROI)，并生成基于投资回报率的智能裁剪坐标。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-266">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="3b1d3-267">指定不同于输入图像纵横比时，可帮助智能裁剪。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-267">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="3b1d3-268">成功的响应包含缩略图二进制文件。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-268">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="3b1d3-269">如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-269">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="3b1d3-270">缩略图的宽度。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-270">Width of the thumbnail.</span></span> <span data-ttu-id="3b1d3-271">它必须介于 1 到 1024年之间。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-271">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="3b1d3-272">推荐的最小为 50。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-272">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="3b1d3-273">缩略图的高度。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-273">Height of the thumbnail.</span></span> <span data-ttu-id="3b1d3-274">该值必须介于 1 和</span><span class="sxs-lookup"><span data-stu-id="3b1d3-274">It must be between 1 and</span></span>

        1024. <span data-ttu-id="3b1d3-275">推荐的最小为 50。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-275">Recommended minimum of 50.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3b1d3-276">图像流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-276">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2
  name: generateThumbnailInStream(number, number, stream.Readable, Object, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-277">此操作将生成缩略图使用用户指定的宽度和高度。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-277">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="3b1d3-278">默认情况下，服务会分析图像，标识的兴趣区域 (ROI)，并生成基于投资回报率的智能裁剪坐标。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-278">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="3b1d3-279">指定不同于输入图像纵横比时，可帮助智能裁剪。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-279">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="3b1d3-280">成功的响应包含缩略图二进制文件。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-280">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="3b1d3-281">如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-281">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options: Object, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1
  name: generateThumbnailInStream(number, number, stream.Readable, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-282">此操作将生成缩略图使用用户指定的宽度和高度。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-282">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="3b1d3-283">默认情况下，服务会分析图像，标识的兴趣区域 (ROI)，并生成基于投资回报率的智能裁剪坐标。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-283">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="3b1d3-284">指定不同于输入图像纵横比时，可帮助智能裁剪。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-284">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="3b1d3-285">成功的响应包含缩略图二进制文件。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-285">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="3b1d3-286">如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-286">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStreamWithHttpOperationResponse
  name: generateThumbnailInStreamWithHttpOperationResponse(number, number, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-287">此操作将生成缩略图使用用户指定的宽度和高度。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-287">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="3b1d3-288">默认情况下，服务会分析图像，标识的兴趣区域 (ROI)，并生成基于投资回报率的智能裁剪坐标。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-288">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="3b1d3-289">指定不同于输入图像纵横比时，可帮助智能裁剪。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-289">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="3b1d3-290">成功的响应包含缩略图二进制文件。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-290">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="3b1d3-291">如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-291">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStreamWithHttpOperationResponse(width: number, height: number, image: stream.Readable, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="3b1d3-292">缩略图的宽度。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-292">Width of the thumbnail.</span></span> <span data-ttu-id="3b1d3-293">它必须介于 1 到 1024年之间。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-293">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="3b1d3-294">推荐的最小为 50。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-294">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="3b1d3-295">缩略图的高度。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-295">Height of the thumbnail.</span></span> <span data-ttu-id="3b1d3-296">该值必须介于 1 和</span><span class="sxs-lookup"><span data-stu-id="3b1d3-296">It must be between 1 and</span></span>

        1024. <span data-ttu-id="3b1d3-297">推荐的最小为 50。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-297">Recommended minimum of 50.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3b1d3-298">图像流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-298">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailWithHttpOperationResponse
  name: generateThumbnailWithHttpOperationResponse(number, number, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-299">此操作将生成缩略图使用用户指定的宽度和高度。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-299">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="3b1d3-300">默认情况下，服务会分析图像，标识的兴趣区域 (ROI)，并生成基于投资回报率的智能裁剪坐标。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-300">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="3b1d3-301">指定不同于输入图像纵横比时，可帮助智能裁剪。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-301">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="3b1d3-302">成功的响应包含缩略图二进制文件。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-302">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="3b1d3-303">如果请求失败，则响应包含错误代码和消息，以帮助确定问题所在。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-303">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailWithHttpOperationResponse(width: number, height: number, url: string, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="3b1d3-304">缩略图的宽度。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-304">Width of the thumbnail.</span></span> <span data-ttu-id="3b1d3-305">它必须介于 1 到 1024年之间。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-305">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="3b1d3-306">推荐的最小为 50。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-306">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="3b1d3-307">缩略图的高度。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-307">Height of the thumbnail.</span></span> <span data-ttu-id="3b1d3-308">该值必须介于 1 和</span><span class="sxs-lookup"><span data-stu-id="3b1d3-308">It must be between 1 and</span></span>

        1024. <span data-ttu-id="3b1d3-309">推荐的最小为 50。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-309">Recommended minimum of 50.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-310">可公开访问的图像的 URL</span><span class="sxs-lookup"><span data-stu-id="3b1d3-310">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult
  name: getTextOperationResult(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-311">此接口用于获取文本操作结果。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-311">This interface is used for getting text operation result.</span></span> <span data-ttu-id="3b1d3-312">此接口的 URL 应检索从识别文本接口返回的操作位置字段中。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-312">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResult(operationId: string, options?: Object)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-313">识别文本在响应中返回的文本操作 id</span><span class="sxs-lookup"><span data-stu-id="3b1d3-313">Id of the text operation returned in the response of the 'Recognize Text'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2
  name: getTextOperationResult(string, Object, ServiceCallback<TextOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-314">此接口用于获取文本操作结果。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-314">This interface is used for getting text operation result.</span></span> <span data-ttu-id="3b1d3-315">此接口的 URL 应检索从识别文本接口返回的操作位置字段中。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-315">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResult(operationId: string, options: Object, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1
  name: getTextOperationResult(string, ServiceCallback<TextOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-316">此接口用于获取文本操作结果。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-316">This interface is used for getting text operation result.</span></span> <span data-ttu-id="3b1d3-317">此接口的 URL 应检索从识别文本接口返回的操作位置字段中。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-317">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResult(operationId: string, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResultWithHttpOperationResponse
  name: getTextOperationResultWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-318">此接口用于获取文本操作结果。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-318">This interface is used for getting text operation result.</span></span> <span data-ttu-id="3b1d3-319">此接口的 URL 应检索从识别文本接口返回的操作位置字段中。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-319">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResultWithHttpOperationResponse(operationId: string, options?: Object)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-320">识别文本在响应中返回的文本操作 id</span><span class="sxs-lookup"><span data-stu-id="3b1d3-320">Id of the text operation returned in the response of the 'Recognize Text'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels
  name: listModels(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="3b1d3-321">此操作将返回的计算机视觉 API 支持的特定于域的模型的列表。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-321">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="3b1d3-322">目前，API 仅支持一个特定于域的模型： 名人识别器。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-322">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="3b1d3-323">成功响应将以 JSON 格式返回。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-323">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3b1d3-324">如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-324">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModels(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels_2
  name: listModels(Object, ServiceCallback<ListModelsResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="3b1d3-325">此操作将返回的计算机视觉 API 支持的特定于域的模型的列表。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-325">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="3b1d3-326">目前，API 仅支持一个特定于域的模型： 名人识别器。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-326">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="3b1d3-327">成功响应将以 JSON 格式返回。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-327">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3b1d3-328">如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-328">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModels(options: Object, callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels_1
  name: listModels(ServiceCallback<ListModelsResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="3b1d3-329">此操作将返回的计算机视觉 API 支持的特定于域的模型的列表。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-329">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="3b1d3-330">目前，API 仅支持一个特定于域的模型： 名人识别器。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-330">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="3b1d3-331">成功响应将以 JSON 格式返回。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-331">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3b1d3-332">如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-332">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModels(callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModelsWithHttpOperationResponse
  name: listModelsWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="3b1d3-333">此操作将返回的计算机视觉 API 支持的特定于域的模型的列表。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-333">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="3b1d3-334">目前，API 仅支持一个特定于域的模型： 名人识别器。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-334">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="3b1d3-335">成功响应将以 JSON 格式返回。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-335">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="3b1d3-336">如果请求失败，响应将包含错误代码和消息，以帮助了解出现的问题。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-336">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModelsWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText
  name: recognizePrintedText(boolean, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-337">光学字符识别 (OCR) 检测图像中的印刷体的文本，并将所识别的字符提取到机器可用的字符流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-337">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="3b1d3-338">成功后，将返回的 OCR 结果。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-338">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="3b1d3-339">如果失败，将返回一条错误消息以及错误代码。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-339">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="3b1d3-340">错误代码可以是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage 或 InternalServerError 之一。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-340">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="3b1d3-341">是否在图像中检测文本方向。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-341">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="3b1d3-342">DetectOrientation = true OCR 服务尝试以检测图像方向并更正它进一步处理前 (例如如果颠倒的)。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-342">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-343">可公开访问的图像的 URL</span><span class="sxs-lookup"><span data-stu-id="3b1d3-343">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2
  name: recognizePrintedText(boolean, string, Object, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-344">光学字符识别 (OCR) 检测图像中的印刷体的文本，并将所识别的字符提取到机器可用的字符流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-344">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="3b1d3-345">成功后，将返回的 OCR 结果。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-345">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="3b1d3-346">如果失败，将返回一条错误消息以及错误代码。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-346">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="3b1d3-347">错误代码可以是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage 或 InternalServerError 之一。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-347">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options: Object, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1
  name: recognizePrintedText(boolean, string, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-348">光学字符识别 (OCR) 检测图像中的印刷体的文本，并将所识别的字符提取到机器可用的字符流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-348">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="3b1d3-349">成功后，将返回的 OCR 结果。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-349">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="3b1d3-350">如果失败，将返回一条错误消息以及错误代码。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-350">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="3b1d3-351">错误代码可以是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage 或 InternalServerError 之一。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-351">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream
  name: recognizePrintedTextInStream(boolean, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-352">光学字符识别 (OCR) 检测图像中的印刷体的文本，并将所识别的字符提取到机器可用的字符流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-352">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="3b1d3-353">成功后，将返回的 OCR 结果。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-353">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="3b1d3-354">如果失败，将返回一条错误消息以及错误代码。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-354">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="3b1d3-355">错误代码可以是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage 或 InternalServerError 之一。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-355">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="3b1d3-356">是否在图像中检测文本方向。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-356">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="3b1d3-357">DetectOrientation = true OCR 服务尝试以检测图像方向并更正它进一步处理前 (例如如果颠倒的)。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-357">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3b1d3-358">图像流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-358">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2
  name: recognizePrintedTextInStream(boolean, stream.Readable, Object, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-359">光学字符识别 (OCR) 检测图像中的印刷体的文本，并将所识别的字符提取到机器可用的字符流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-359">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="3b1d3-360">成功后，将返回的 OCR 结果。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-360">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="3b1d3-361">如果失败，将返回一条错误消息以及错误代码。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-361">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="3b1d3-362">错误代码可以是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage 或 InternalServerError 之一。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-362">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options: Object, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1
  name: recognizePrintedTextInStream(boolean, stream.Readable, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-363">光学字符识别 (OCR) 检测图像中的印刷体的文本，并将所识别的字符提取到机器可用的字符流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-363">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="3b1d3-364">成功后，将返回的 OCR 结果。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-364">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="3b1d3-365">如果失败，将返回一条错误消息以及错误代码。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-365">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="3b1d3-366">错误代码可以是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage 或 InternalServerError 之一。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-366">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStreamWithHttpOperationResponse
  name: recognizePrintedTextInStreamWithHttpOperationResponse(boolean, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-367">光学字符识别 (OCR) 检测图像中的印刷体的文本，并将所识别的字符提取到机器可用的字符流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-367">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="3b1d3-368">成功后，将返回的 OCR 结果。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-368">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="3b1d3-369">如果失败，将返回一条错误消息以及错误代码。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-369">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="3b1d3-370">错误代码可以是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage 或 InternalServerError 之一。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-370">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStreamWithHttpOperationResponse(detectOrientation: boolean, image: stream.Readable, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="3b1d3-371">是否在图像中检测文本方向。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-371">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="3b1d3-372">DetectOrientation = true OCR 服务尝试以检测图像方向并更正它进一步处理前 (例如如果颠倒的)。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-372">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3b1d3-373">图像流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-373">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextWithHttpOperationResponse
  name: recognizePrintedTextWithHttpOperationResponse(boolean, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="3b1d3-374">光学字符识别 (OCR) 检测图像中的印刷体的文本，并将所识别的字符提取到机器可用的字符流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-374">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="3b1d3-375">成功后，将返回的 OCR 结果。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-375">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="3b1d3-376">如果失败，将返回一条错误消息以及错误代码。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-376">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="3b1d3-377">错误代码可以是 InvalidImageUrl、 InvalidImageFormat、 InvalidImageSize、 NotSupportedImage、 NotSupportedLanguage 或 InternalServerError 之一。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-377">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextWithHttpOperationResponse(detectOrientation: boolean, url: string, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="3b1d3-378">是否在图像中检测文本方向。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-378">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="3b1d3-379">DetectOrientation = true OCR 服务尝试以检测图像方向并更正它进一步处理前 (例如如果颠倒的)。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-379">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-380">可公开访问的图像的 URL</span><span class="sxs-lookup"><span data-stu-id="3b1d3-380">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText
  name: recognizeText(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-381">识别文本操作。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-381">Recognize Text operation.</span></span> <span data-ttu-id="3b1d3-382">当使用识别文本接口时，响应将包含一个名为操作位置字段。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-382">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="3b1d3-383">操作位置字段包含必须用于您获取识别的文本操作结果的操作的 URL。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-383">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeText(url: string, mode: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-384">可公开访问的图像的 URL</span><span class="sxs-lookup"><span data-stu-id="3b1d3-384">Publicly reachable URL of an image</span></span>
    - id: mode
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-385">要识别的文本的类型。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-385">Type of text to recognize.</span></span> <span data-ttu-id="3b1d3-386">可能的值包括：手写，打印</span><span class="sxs-lookup"><span data-stu-id="3b1d3-386">Possible values include: 'Handwritten', 'Printed'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_2
  name: recognizeText(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-387">识别文本操作。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-387">Recognize Text operation.</span></span> <span data-ttu-id="3b1d3-388">当使用识别文本接口时，响应将包含一个名为操作位置字段。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-388">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="3b1d3-389">操作位置字段包含必须用于您获取识别的文本操作结果的操作的 URL。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-389">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeText(url: string, mode: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_1
  name: recognizeText(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-390">识别文本操作。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-390">Recognize Text operation.</span></span> <span data-ttu-id="3b1d3-391">当使用识别文本接口时，响应将包含一个名为操作位置字段。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-391">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="3b1d3-392">操作位置字段包含必须用于您获取识别的文本操作结果的操作的 URL。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-392">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeText(url: string, mode: string, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream
  name: recognizeTextInStream(stream.Readable, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-393">识别文本操作。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-393">Recognize Text operation.</span></span> <span data-ttu-id="3b1d3-394">当使用识别文本接口时，响应将包含一个名为操作位置字段。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-394">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="3b1d3-395">操作位置字段包含必须用于您获取识别的文本操作结果的操作的 URL。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-395">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, mode: string, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3b1d3-396">图像流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-396">An image stream.</span></span>
    - id: mode
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-397">要识别的文本的类型。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-397">Type of text to recognize.</span></span> <span data-ttu-id="3b1d3-398">可能的值包括：手写，打印</span><span class="sxs-lookup"><span data-stu-id="3b1d3-398">Possible values include: 'Handwritten', 'Printed'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2
  name: recognizeTextInStream(stream.Readable, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-399">识别文本操作。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-399">Recognize Text operation.</span></span> <span data-ttu-id="3b1d3-400">当使用识别文本接口时，响应将包含一个名为操作位置字段。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-400">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="3b1d3-401">操作位置字段包含必须用于您获取识别的文本操作结果的操作的 URL。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-401">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, mode: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1
  name: recognizeTextInStream(stream.Readable, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-402">识别文本操作。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-402">Recognize Text operation.</span></span> <span data-ttu-id="3b1d3-403">当使用识别文本接口时，响应将包含一个名为操作位置字段。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-403">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="3b1d3-404">操作位置字段包含必须用于您获取识别的文本操作结果的操作的 URL。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-404">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, mode: string, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStreamWithHttpOperationResponse
  name: recognizeTextInStreamWithHttpOperationResponse(stream.Readable, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-405">识别文本操作。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-405">Recognize Text operation.</span></span> <span data-ttu-id="3b1d3-406">当使用识别文本接口时，响应将包含一个名为操作位置字段。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-406">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="3b1d3-407">操作位置字段包含必须用于您获取识别的文本操作结果的操作的 URL。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-407">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStreamWithHttpOperationResponse(image: stream.Readable, mode: string, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3b1d3-408">图像流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-408">An image stream.</span></span>
    - id: mode
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-409">要识别的文本的类型。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-409">Type of text to recognize.</span></span> <span data-ttu-id="3b1d3-410">可能的值包括：手写，打印</span><span class="sxs-lookup"><span data-stu-id="3b1d3-410">Possible values include: 'Handwritten', 'Printed'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextWithHttpOperationResponse
  name: recognizeTextWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-411">识别文本操作。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-411">Recognize Text operation.</span></span> <span data-ttu-id="3b1d3-412">当使用识别文本接口时，响应将包含一个名为操作位置字段。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-412">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="3b1d3-413">操作位置字段包含必须用于您获取识别的文本操作结果的操作的 URL。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-413">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextWithHttpOperationResponse(url: string, mode: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-414">可公开访问的图像的 URL</span><span class="sxs-lookup"><span data-stu-id="3b1d3-414">Publicly reachable URL of an image</span></span>
    - id: mode
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-415">要识别的文本的类型。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-415">Type of text to recognize.</span></span> <span data-ttu-id="3b1d3-416">可能的值包括：手写，打印</span><span class="sxs-lookup"><span data-stu-id="3b1d3-416">Possible values include: 'Handwritten', 'Printed'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage
  name: tagImage(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-417">此操作将生成的单词或与提供的图像内容相关的标记的列表。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-417">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="3b1d3-418">计算机视觉 API 可以返回标记基于对象，生活终级、 风景或在图像中发现的操作。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-418">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="3b1d3-419">与不同的类别，标记不按组织根据层次结构分类的系统，但对应于图像内容。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-419">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="3b1d3-420">标记可能包含提示以避免多义性，或者提供上下文，例如标记 cello 可能伴随提示乐器。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-420">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="3b1d3-421">所有标记都是英文。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-421">All tags are in English.</span></span>
  syntax:
    content: 'function tagImage(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-422">可公开访问的图像的 URL</span><span class="sxs-lookup"><span data-stu-id="3b1d3-422">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_2
  name: tagImage(string, Object, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-423">此操作将生成的单词或与提供的图像内容相关的标记的列表。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-423">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="3b1d3-424">计算机视觉 API 可以返回标记基于对象，生活终级、 风景或在图像中发现的操作。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-424">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="3b1d3-425">与不同的类别，标记不按组织根据层次结构分类的系统，但对应于图像内容。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-425">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="3b1d3-426">标记可能包含提示以避免多义性，或者提供上下文，例如标记 cello 可能伴随提示乐器。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-426">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="3b1d3-427">所有标记都是英文。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-427">All tags are in English.</span></span>
  syntax:
    content: 'function tagImage(url: string, options: Object, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_1
  name: tagImage(string, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-428">此操作将生成的单词或与提供的图像内容相关的标记的列表。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-428">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="3b1d3-429">计算机视觉 API 可以返回标记基于对象，生活终级、 风景或在图像中发现的操作。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-429">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="3b1d3-430">与不同的类别，标记不按组织根据层次结构分类的系统，但对应于图像内容。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-430">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="3b1d3-431">标记可能包含提示以避免多义性，或者提供上下文，例如标记 cello 可能伴随提示乐器。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-431">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="3b1d3-432">所有标记都是英文。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-432">All tags are in English.</span></span>
  syntax:
    content: 'function tagImage(url: string, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream
  name: tagImageInStream(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-433">此操作将生成的单词或与提供的图像内容相关的标记的列表。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-433">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="3b1d3-434">计算机视觉 API 可以返回标记基于对象，生活终级、 风景或在图像中发现的操作。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-434">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="3b1d3-435">与不同的类别，标记不按组织根据层次结构分类的系统，但对应于图像内容。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-435">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="3b1d3-436">标记可能包含提示以避免多义性，或者提供上下文，例如标记 cello 可能伴随提示乐器。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-436">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="3b1d3-437">所有标记都是英文。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-437">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3b1d3-438">图像流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-438">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2
  name: tagImageInStream(stream.Readable, Object, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-439">此操作将生成的单词或与提供的图像内容相关的标记的列表。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-439">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="3b1d3-440">计算机视觉 API 可以返回标记基于对象，生活终级、 风景或在图像中发现的操作。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-440">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="3b1d3-441">与不同的类别，标记不按组织根据层次结构分类的系统，但对应于图像内容。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-441">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="3b1d3-442">标记可能包含提示以避免多义性，或者提供上下文，例如标记 cello 可能伴随提示乐器。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-442">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="3b1d3-443">所有标记都是英文。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-443">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1
  name: tagImageInStream(stream.Readable, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-444">此操作将生成的单词或与提供的图像内容相关的标记的列表。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-444">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="3b1d3-445">计算机视觉 API 可以返回标记基于对象，生活终级、 风景或在图像中发现的操作。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-445">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="3b1d3-446">与不同的类别，标记不按组织根据层次结构分类的系统，但对应于图像内容。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-446">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="3b1d3-447">标记可能包含提示以避免多义性，或者提供上下文，例如标记 cello 可能伴随提示乐器。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-447">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="3b1d3-448">所有标记都是英文。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-448">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStreamWithHttpOperationResponse
  name: tagImageInStreamWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-449">此操作将生成的单词或与提供的图像内容相关的标记的列表。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-449">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="3b1d3-450">计算机视觉 API 可以返回标记基于对象，生活终级、 风景或在图像中发现的操作。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-450">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="3b1d3-451">与不同的类别，标记不按组织根据层次结构分类的系统，但对应于图像内容。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-451">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="3b1d3-452">标记可能包含提示以避免多义性，或者提供上下文，例如标记 cello 可能伴随提示乐器。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-452">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="3b1d3-453">所有标记都是英文。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-453">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="3b1d3-454">图像流。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-454">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageWithHttpOperationResponse
  name: tagImageWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3b1d3-455">此操作将生成的单词或与提供的图像内容相关的标记的列表。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-455">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="3b1d3-456">计算机视觉 API 可以返回标记基于对象，生活终级、 风景或在图像中发现的操作。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-456">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="3b1d3-457">与不同的类别，标记不按组织根据层次结构分类的系统，但对应于图像内容。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-457">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="3b1d3-458">标记可能包含提示以避免多义性，或者提供上下文，例如标记 cello 可能伴随提示乐器。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-458">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="3b1d3-459">所有标记都是英文。</span><span class="sxs-lookup"><span data-stu-id="3b1d3-459">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageWithHttpOperationResponse(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="3b1d3-460">可公开访问的图像的 URL</span><span class="sxs-lookup"><span data-stu-id="3b1d3-460">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
references:
- uid: Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  name: ImageAnalysis>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
  name: ImageAnalysis>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-computervision.DomainModelResults>
  name: DomainModelResults>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
  name: DomainModelResults>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  name: DomainModelResults>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  name: ImageAnalysis>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ImageDescription>
  name: ImageDescription>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
  name: ImageDescription>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  name: ImageDescription>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TextOperationResult>
  name: TextOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
  name: TextOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  name: TextOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ListModelsResult>
  name: ListModelsResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
  name: ListModelsResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  name: ListModelsResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.OcrResult>
  name: OcrResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
  name: OcrResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  name: OcrResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TagResult>
  name: TagResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TagResult>
  name: TagResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  name: TagResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>>'
    fullName: '>>'
