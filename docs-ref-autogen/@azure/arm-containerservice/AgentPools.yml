### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-containerservice.AgentPools'
    name: AgentPools
    fullName: AgentPools
    children:
      - '@azure/arm-containerservice.AgentPools.constructor'
      - '@azure/arm-containerservice.AgentPools.beginCreateOrUpdate'
      - '@azure/arm-containerservice.AgentPools.beginDeleteMethod'
      - '@azure/arm-containerservice.AgentPools.createOrUpdate'
      - '@azure/arm-containerservice.AgentPools.deleteMethod'
      - '@azure/arm-containerservice.AgentPools.get'
      - '@azure/arm-containerservice.AgentPools.get_2'
      - '@azure/arm-containerservice.AgentPools.get_1'
      - '@azure/arm-containerservice.AgentPools.list'
      - '@azure/arm-containerservice.AgentPools.list_2'
      - '@azure/arm-containerservice.AgentPools.list_1'
      - '@azure/arm-containerservice.AgentPools.listNext'
      - '@azure/arm-containerservice.AgentPools.listNext_2'
      - '@azure/arm-containerservice.AgentPools.listNext_1'
    langs:
      - typeScript
    type: class
    summary: 表示 AgentPools 类。
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPools.constructor'
    name: AgentPools(ContainerServiceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: 创建 AgentPools。
    syntax:
      content: 'new AgentPools(client: ContainerServiceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-containerservice.ContainerServiceClientContext'
          description: |
            对服务客户端的引用。
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPools.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, string, AgentPool, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 创建或更新指定的托管群集中的代理池。
    syntax:
      content: 'function beginCreateOrUpdate(resourceGroupName: string, managedClusterName: string, agentPoolName: string, parameters: AgentPool, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: managedClusterName
          type:
            - string
          description: 托管的群集资源的名称。
        - id: agentPoolName
          type:
            - string
          description: 代理池的名称。
        - id: parameters
          type:
            - '@azure/arm-containerservice.AgentPool'
          description: 创建或更新代理池操作提供参数。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPools.beginDeleteMethod'
    name: 'beginDeleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 删除指定的托管群集中的代理池。
    syntax:
      content: 'function beginDeleteMethod(resourceGroupName: string, managedClusterName: string, agentPoolName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: managedClusterName
          type:
            - string
          description: 托管的群集资源的名称。
        - id: agentPoolName
          type:
            - string
          description: 代理池的名称。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPools.createOrUpdate'
    name: 'createOrUpdate(string, string, string, AgentPool, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 创建或更新指定的托管群集中的代理池。
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, managedClusterName: string, agentPoolName: string, parameters: AgentPool, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: managedClusterName
          type:
            - string
          description: 托管的群集资源的名称。
        - id: agentPoolName
          type:
            - string
          description: 代理池的名称。
        - id: parameters
          type:
            - '@azure/arm-containerservice.AgentPool'
          description: 创建或更新代理池操作提供参数。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AgentPoolsCreateOrUpdateResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPools.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 删除指定的托管群集中的代理池。
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, managedClusterName: string, agentPoolName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: managedClusterName
          type:
            - string
          description: 托管的群集资源的名称。
        - id: agentPoolName
          type:
            - string
          description: 代理池的名称。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPools.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 获取由托管的群集和资源组的代理池的详细信息。
    syntax:
      content: 'function get(resourceGroupName: string, managedClusterName: string, agentPoolName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: managedClusterName
          type:
            - string
          description: 托管的群集资源的名称。
        - id: agentPoolName
          type:
            - string
          description: 代理池的名称。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AgentPoolsGetResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPools.get_2'
    name: 'get(string, string, string, RequestOptionsBase, ServiceCallback<AgentPool>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, managedClusterName: string, agentPoolName: string, options: RequestOptionsBase, callback: ServiceCallback<AgentPool>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: managedClusterName
          type:
            - string
          description: 托管的群集资源的名称。
        - id: agentPoolName
          type:
            - string
          description: 代理池的名称。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.AgentPool>
          description: |
            回调
      return:
        type:
          - Promise<Models.AgentPoolsGetResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPools.get_1'
    name: 'get(string, string, string, ServiceCallback<AgentPool>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, managedClusterName: string, agentPoolName: string, callback: ServiceCallback<AgentPool>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: managedClusterName
          type:
            - string
          description: 托管的群集资源的名称。
        - id: agentPoolName
          type:
            - string
          description: 代理池的名称。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.AgentPool>
          description: |
            回调
      return:
        type:
          - Promise<Models.AgentPoolsGetResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPools.list'
    name: 'list(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 获取指定的托管群集中的代理池的列表。 该操作返回的每个代理池的属性。
    syntax:
      content: 'function list(resourceGroupName: string, managedClusterName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: managedClusterName
          type:
            - string
          description: 托管的群集资源的名称。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AgentPoolsListResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPools.list_2'
    name: 'list(string, string, RequestOptionsBase, ServiceCallback<AgentPoolListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(resourceGroupName: string, managedClusterName: string, options: RequestOptionsBase, callback: ServiceCallback<AgentPoolListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: managedClusterName
          type:
            - string
          description: 托管的群集资源的名称。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.AgentPoolListResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.AgentPoolsListResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPools.list_1'
    name: 'list(string, string, ServiceCallback<AgentPoolListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(resourceGroupName: string, managedClusterName: string, callback: ServiceCallback<AgentPoolListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: 资源组的名称。
        - id: managedClusterName
          type:
            - string
          description: 托管的群集资源的名称。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.AgentPoolListResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.AgentPoolsListResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPools.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 获取指定的托管群集中的代理池的列表。 该操作返回的每个代理池的属性。
    syntax:
      content: 'function listNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 从上一个成功调用 List 操作 NextLink。
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.AgentPoolsListNextResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPools.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<AgentPoolListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<AgentPoolListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 从上一个成功调用 List 操作 NextLink。
        - id: options
          type:
            - RequestOptionsBase
          description: 可选参数
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.AgentPoolListResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.AgentPoolsListNextResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.AgentPools.listNext_1'
    name: 'listNext(string, ServiceCallback<AgentPoolListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, callback: ServiceCallback<AgentPoolListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: 从上一个成功调用 List 操作 NextLink。
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerservice.AgentPoolListResult>
          description: |
            回调
      return:
        type:
          - Promise<Models.AgentPoolsListNextResponse>
    package: '@azure/arm-containerservice'
references:
  - uid: '@azure/arm-containerservice.ContainerServiceClientContext'
    name: ContainerServiceClientContext
    spec.typeScript:
      - name: ContainerServiceClientContext
        fullName: ContainerServiceClientContext
        uid: '@azure/arm-containerservice.ContainerServiceClientContext'
  - uid: '@azure/arm-containerservice.AgentPool'
    name: AgentPool
    spec.typeScript:
      - name: AgentPool
        fullName: AgentPool
        uid: '@azure/arm-containerservice.AgentPool'
  - uid: ServiceCallback<@azure/arm-containerservice.AgentPool>
    name: AgentPool>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AgentPool
        fullName: AgentPool
        uid: '@azure/arm-containerservice.AgentPool'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-containerservice.AgentPoolListResult>
    name: AgentPoolListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: AgentPoolListResult
        fullName: AgentPoolListResult
        uid: '@azure/arm-containerservice.AgentPoolListResult'
      - name: '>'
        fullName: '>'