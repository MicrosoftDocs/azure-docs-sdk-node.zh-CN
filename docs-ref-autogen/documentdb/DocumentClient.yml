### YamlMime:UniversalReference
ms.openlocfilehash: 99d34b9f67f4793f59a448d80cf88796f9b44ae1
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: zh-CN
ms.lasthandoff: 08/13/2018
ms.locfileid: "40049600"
items:
- uid: documentdb.DocumentClient
  id: documentdb.DocumentClient
  name: DocumentClient
  summary: >-
    提供了 Azure Cosmos DB 数据库帐户的客户端逻辑表示形式。

    此客户端用于配置和执行 Azure Cosmos DB 数据库服务中的请求。
  fullName: documentdb.DocumentClient
  type: Class
  children:
  - documentdb.DocumentClient.#ctor
  - documentdb.DocumentClient#getWriteEndpoint
  - documentdb.DocumentClient#getReadEndpoint
  - documentdb.DocumentClient#createDatabase
  - documentdb.DocumentClient#createCollection
  - documentdb.DocumentClient#createDocument
  - documentdb.DocumentClient#createAttachment
  - documentdb.DocumentClient#createUser
  - documentdb.DocumentClient#createPermission
  - documentdb.DocumentClient#createTrigger
  - documentdb.DocumentClient#createUserDefinedFunction
  - documentdb.DocumentClient#createStoredProcedure
  - documentdb.DocumentClient#createAttachmentAndUploadMedia
  - documentdb.DocumentClient#readDatabase
  - documentdb.DocumentClient#readCollection
  - documentdb.DocumentClient#readDocument
  - documentdb.DocumentClient#readAttachment
  - documentdb.DocumentClient#readUser
  - documentdb.DocumentClient#readPermission
  - documentdb.DocumentClient#readTrigger
  - documentdb.DocumentClient#readUserDefinedFunction
  - documentdb.DocumentClient#readStoredProcedure
  - documentdb.DocumentClient#readConflict
  - documentdb.DocumentClient#readDatabases
  - documentdb.DocumentClient#readCollections
  - documentdb.DocumentClient#readDocuments
  - documentdb.DocumentClient#readPartitionKeyRanges
  - documentdb.DocumentClient#readAttachments
  - documentdb.DocumentClient#readUsers
  - documentdb.DocumentClient#readPermissions
  - documentdb.DocumentClient#readTriggers
  - documentdb.DocumentClient#readUserDefinedFunctions
  - documentdb.DocumentClient#readStoredProcedures
  - documentdb.DocumentClient#readConflicts
  - documentdb.DocumentClient#queryDatabases
  - documentdb.DocumentClient#queryCollections
  - documentdb.DocumentClient#queryDocuments
  - documentdb.DocumentClient#queryPartitionKeyRanges
  - documentdb.DocumentClient#queryAttachments
  - documentdb.DocumentClient#queryUsers
  - documentdb.DocumentClient#queryPermissions
  - documentdb.DocumentClient#queryTriggers
  - documentdb.DocumentClient#queryUserDefinedFunctions
  - documentdb.DocumentClient#queryStoredProcedures
  - documentdb.DocumentClient#queryConflicts
  - documentdb.DocumentClient#deleteDatabase
  - documentdb.DocumentClient#deleteCollection
  - documentdb.DocumentClient#deleteDocument
  - documentdb.DocumentClient#deleteAttachment
  - documentdb.DocumentClient#deleteUser
  - documentdb.DocumentClient#deletePermission
  - documentdb.DocumentClient#deleteTrigger
  - documentdb.DocumentClient#deleteUserDefinedFunction
  - documentdb.DocumentClient#deleteStoredProcedure
  - documentdb.DocumentClient#deleteConflict
  - documentdb.DocumentClient#replaceCollection
  - documentdb.DocumentClient#replaceDocument
  - documentdb.DocumentClient#replaceAttachment
  - documentdb.DocumentClient#replaceUser
  - documentdb.DocumentClient#replacePermission
  - documentdb.DocumentClient#replaceTrigger
  - documentdb.DocumentClient#replaceUserDefinedFunction
  - documentdb.DocumentClient#replaceStoredProcedure
  - documentdb.DocumentClient#upsertDocument
  - documentdb.DocumentClient#upsertAttachment
  - documentdb.DocumentClient#upsertUser
  - documentdb.DocumentClient#upsertPermission
  - documentdb.DocumentClient#upsertTrigger
  - documentdb.DocumentClient#upsertUserDefinedFunction
  - documentdb.DocumentClient#upsertStoredProcedure
  - documentdb.DocumentClient#upsertAttachmentAndUploadMedia
  - documentdb.DocumentClient#readMedia
  - documentdb.DocumentClient#updateMedia
  - documentdb.DocumentClient#executeStoredProcedure
  - documentdb.DocumentClient#replaceOffer
  - documentdb.DocumentClient#readOffer
  - documentdb.DocumentClient#readOffers
  - documentdb.DocumentClient#queryOffers
  - documentdb.DocumentClient#getDatabaseAccount
  - documentdb.DocumentClient#getSessionToken
  langs:
  - js
- id: documentdb.DocumentClient.#ctor
  uid: documentdb.DocumentClient.#ctor
  parent: documentdb.DocumentClient
  name: DocumentClient(urlConnection, auth, connectionPolicy, consistencyLevel)
  fullName: documentdb.DocumentClient.DocumentClient(urlConnection, auth, connectionPolicy, consistencyLevel)
  summary: >-
    提供了 Azure Cosmos DB 数据库帐户的客户端逻辑表示形式。

    此客户端用于配置和执行 Azure Cosmos DB 数据库服务中的请求。
  type: Constructor
  syntax:
    parameters:
    - id: urlConnection
      type:
      - string
      description: 要用于创建客户端的服务终结点。
    - id: auth
      type:
      - object
      description: 一个对象，用于请求进行身份验证，并且必须包含一个选项
    - id: auth.masterKey
      type:
      - string
      description: 要用于创建客户端授权主密钥。
      optional: true
    - id: auth.resourceTokens
      type:
      - Object
      description: 一个包含资源令牌的对象。 对象的键为资源 Id，值为资源令牌。
      optional: true
    - id: auth.permissionFeed
      type:
      - Array
      description: 一个数组<xref:Permission>对象。
      optional: true
    - id: connectionPolicy
      type:
      - object
      description: 实例<xref:ConnectionPolicy>类。 此参数是可选的如果省略，则使用默认 connectionPolicy。
      optional: true
    - id: consistencyLevel
      type:
      - string
      description: 一个表示的一致性级别的可选参数。 可能需要的任何值<xref:ConsistencyLevel>。
      optional: true
    content: new DocumentClient(urlConnection, auth, connectionPolicy, consistencyLevel)
  langs:
  - js
- uid: documentdb.DocumentClient#getWriteEndpoint
  id: documentdb.DocumentClient#getWriteEndpoint
  parent: documentdb.DocumentClient
  name: getWriteEndpoint(callback)
  summary: 获取异地复制的数据库帐户的当前写入终结点。
  fullName: documentdb.DocumentClient.getWriteEndpoint(callback)
  type: Function
  syntax:
    parameters:
    - id: callback
      type:
      - function
      description: 回调函数采用 endpoint(string) 作为自变量。
    content: function getWriteEndpoint(callback)
  langs:
  - js
- uid: documentdb.DocumentClient#getReadEndpoint
  id: documentdb.DocumentClient#getReadEndpoint
  parent: documentdb.DocumentClient
  name: getReadEndpoint(callback)
  summary: 获取 curent 读取异地复制的数据库帐户的终结点。
  fullName: documentdb.DocumentClient.getReadEndpoint(callback)
  type: Function
  syntax:
    parameters:
    - id: callback
      type:
      - function
      description: 回调函数采用 endpoint(string) 作为自变量。
    content: function getReadEndpoint(callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createDatabase
  id: documentdb.DocumentClient#createDatabase
  parent: documentdb.DocumentClient
  name: createDatabase(body, options, callback)
  summary: >-
    发送请求用于创建数据库。

    <p>
     数据库管理用户、 权限和一组的集合。  <br>
     每个 Azure Cosmos DB 数据库帐户是能够支持多个独立的命名数据库，使用的数据库的数据的逻辑容器。 <br>
     每个数据库包含一个或多个集合，其中每个又包含一个或多个文档。 由于数据库是一种管理资源，Service Master Key 将要求才能访问和成功完成使用用户 Api 的任何操作。 <br>
    </p>
  fullName: documentdb.DocumentClient.createDatabase(body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: body
      type:
      - Object
      description: 表示要创建的数据库的 json 对象。
    - id: body.id
      type:
      - string
      description: 数据库的 id。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function createDatabase(body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createCollection
  id: documentdb.DocumentClient#createCollection
  parent: documentdb.DocumentClient
  name: createCollection(databaseLink, body, options, callback)
  summary: >-
    创建一个集合。

    <p>

    集合是一个命名的文档的逻辑容器。 <br>

    数据库可能包含零个或多个命名的集合，每个集合包含零个或多个 JSON 文档。 <br>

    是架构自由，集合中的文档不需要共享相同的结构或字段。 <br>

    因为集合是应用程序的资源，他们可以被授权使用主密钥或资源键。 <br>

    </p>
  fullName: documentdb.DocumentClient.createCollection(databaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: 自链接的数据库。
    - id: body
      type:
      - object
      description: 表示集合中的正文。
    - id: body.id
      type:
      - string
      description: 集合的 id。
    - id: body.indexingPolicy
      type:
      - documentdb.IndexingPolicy
      description: 与集合关联的索引策略。
    - id: body.defaultTtl
      type:
      - number
      description: 默认生存时间以秒为单位的集合中的文档。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function createCollection(databaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createDocument
  id: documentdb.DocumentClient#createDocument
  parent: documentdb.DocumentClient
  name: createDocument(documentsFeedOrDatabaseLink, body, options, callback)
  summary: >-
    创建一个文档。

    <p>

    没有用于 JSON 文档集架构。 它们可能包含任意数量的自定义属性以及可选的附件列表。 <br>

    文档是一种应用程序资源，可以使用主密钥或资源键对其授权

    </p>
  fullName: documentdb.DocumentClient.createDocument(documentsFeedOrDatabaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentsFeedOrDatabaseLink
      type:
      - string
      description: 如果使用的分区解析程序的数据库链接的集合链接
    - id: body
      type:
      - object
      description: 表示文档的正文。 可以包含任意数量的用户定义的属性。
    - id: body.id
      type:
      - string
      description: 文档的 id 必须是唯一的每个文档。
      optional: true
    - id: body.ttl
      type:
      - number
      description: 以秒为单位的文档的生存时间。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: options.disableAutomaticIdGeneration
      type:
      - boolean
      description: 禁用自动 id 生成。 如果在正文中缺少 id，此选项是 true，则将返回错误。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function createDocument(documentsFeedOrDatabaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createAttachment
  id: documentdb.DocumentClient#createAttachment
  parent: documentdb.DocumentClient
  name: createAttachment(documentLink, body, options, callback)
  summary: >-
    创建附件的文档对象。

    <p>

    每个文档可能包含零个或多个附件。 附件可以是任何 MIME 类型的文本、 图像、 二进制数据。 <br>

    这些外部存储在 Azure Blob 存储中。 删除父文档时，会自动删除附件。

    </P>
  fullName: documentdb.DocumentClient.createAttachment(documentLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: 自链接的文档。
    - id: body
      type:
      - Object
      description: 元数据定义赞媒体，contentType 附件媒体。 作为元数据的一部分，它可以包含任何其他属性。
    - id: body.contentType
      type:
      - string
      description: 附件的 MIME contentType。
    - id: body.media
      type:
      - string
      description: 附件内容与关联的媒体链接。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function createAttachment(documentLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createUser
  id: documentdb.DocumentClient#createUser
  parent: documentdb.DocumentClient
  name: createUser(databaseLink, body, options, callback)
  summary: 创建数据库用户。
  fullName: documentdb.DocumentClient.createUser(databaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: 自链接的数据库。
    - id: body
      type:
      - object
      description: 表示用户的正文。
    - id: body.id
      type:
      - string
      description: 用户的 id。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function createUser(databaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createPermission
  id: documentdb.DocumentClient#createPermission
  parent: documentdb.DocumentClient
  name: createPermission(userLink, body, options, callback)
  summary: >-
    创建一个权限。

    <p> 权限表示每个用户访问特定资源，例如文档或集合的权限。  </p>
  fullName: documentdb.DocumentClient.createPermission(userLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: 自链接的用户。
    - id: body
      type:
      - object
      description: 表示权限的主体。
    - id: body.id
      type:
      - string
      description: 权限的 id
    - id: body.permissionMode
      type:
      - string
      description: 此模式，必须是权限的值为 <xref:documentdb.PermissionMode>
    - id: body.resource
      type:
      - string
      description: 权限将应用于资源的链接。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function createPermission(userLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createTrigger
  id: documentdb.DocumentClient#createTrigger
  parent: documentdb.DocumentClient
  name: createTrigger(collectionLink, trigger, options, callback)
  summary: >-
    创建一个触发器。

    <p>

    Azure Cosmos DB 支持 pre 和 post 上执行的 JavaScript 中定义的触发器创建、 更新和删除。 <br>

    有关其他详细信息，请参阅服务器端 JavaScript API 文档。

    </p>
  fullName: documentdb.DocumentClient.createTrigger(collectionLink, trigger, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: 自链接的集合。
    - id: trigger
      type:
      - object
      description: 表示在触发器的正文。
    - id: trigger.id
      type:
      - string
      description: 触发器的 id。
    - id: trigger.triggerType
      type:
      - string
      description: 该触发器的类型应为的值之一<xref:documentdb.TriggerType>。
    - id: trigger.triggerOperation
      type:
      - string
      description: 触发器操作，应为的值之一<xref:documentdb.TriggerOperation>。
    - id: trigger.serverScript
      type:
      - function
      description: 在触发器的正文，它可以被传递为字符串化过。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function createTrigger(collectionLink, trigger, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createUserDefinedFunction
  id: documentdb.DocumentClient#createUserDefinedFunction
  parent: documentdb.DocumentClient
  name: createUserDefinedFunction(collectionLink, udf, options, callback)
  summary: >-
    创建 UserDefinedFunction。

    <p>

    Azure Cosmos DB 支持 JavaScript Udf 可用于查询、 存储的过程和触发器内。 <br>

    有关其他详细信息，请参阅服务器端 JavaScript API 文档。

    </p>
  fullName: documentdb.DocumentClient.createUserDefinedFunction(collectionLink, udf, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: 自链接的集合。
    - id: udf
      type:
      - object
      description: 表示 userDefinedFunction 的正文。
    - id: udf.id
      type:
      - string
      description: Udf 的 id。
    - id: udf.userDefinedFunctionType
      type:
      - string
      description: Udf 的类型，它应为的值之一 <xref:documentdb.UserDefinedFunctionType>
    - id: udf.serverScript
      type:
      - function
      description: 表示正文的 udf，可以传递为字符串化过。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function createUserDefinedFunction(collectionLink, udf, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createStoredProcedure
  id: documentdb.DocumentClient#createStoredProcedure
  parent: documentdb.DocumentClient
  name: createStoredProcedure(collectionLink, sproc, options, callback)
  summary: >-
    创建 StoredProcedure。

    <p>

    Azure Cosmos DB 允许在存储层中，针对文档集合直接执行存储的过程。 脚本 <br>

    获取主存储分区上的指定集合的 ACID 事务下执行。 有关其他详细信息， <br>

    请参阅服务器端 JavaScript API 文档。

    </p>
  fullName: documentdb.DocumentClient.createStoredProcedure(collectionLink, sproc, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: 自链接的集合。
    - id: sproc
      type:
      - object
      description: 表示存储过程的正文。
    - id: sproc.id
      type:
      - string
      description: 存储过程的 id。
    - id: sproc.serverScript
      type:
      - function
      description: 存储过程的正文，它可以传递为字符串化过。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function createStoredProcedure(collectionLink, sproc, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createAttachmentAndUploadMedia
  id: documentdb.DocumentClient#createAttachmentAndUploadMedia
  parent: documentdb.DocumentClient
  name: createAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  summary: 创建附件的文档对象。
  fullName: documentdb.DocumentClient.createAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: 自链接的文档。
    - id: readableStream
      type:
      - documentdb.stream.Readable
      description: 表示本身，需要上传的媒体流。
    - id: options
      type:
      - documentdb.MediaOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function createAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readDatabase
  id: documentdb.DocumentClient#readDatabase
  parent: documentdb.DocumentClient
  name: readDatabase(databaseLink, options, callback)
  summary: 读取数据库。
  fullName: documentdb.DocumentClient.readDatabase(databaseLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: 自链接的数据库。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function readDatabase(databaseLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readCollection
  id: documentdb.DocumentClient#readCollection
  parent: documentdb.DocumentClient
  name: readCollection(collectionLink, options, callback)
  summary: 读取集合。
  fullName: documentdb.DocumentClient.readCollection(collectionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: 自链接的集合。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function readCollection(collectionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readDocument
  id: documentdb.DocumentClient#readDocument
  parent: documentdb.DocumentClient
  name: readDocument(documentLink, options, callback)
  summary: 读取文档。
  fullName: documentdb.DocumentClient.readDocument(documentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: 自链接的文档。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function readDocument(documentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readAttachment
  id: documentdb.DocumentClient#readAttachment
  parent: documentdb.DocumentClient
  name: readAttachment(attachmentLink, options, callback)
  summary: 读取附件对象。
  fullName: documentdb.DocumentClient.readAttachment(attachmentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: attachmentLink
      type:
      - string
      description: 自链接的附件。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function readAttachment(attachmentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readUser
  id: documentdb.DocumentClient#readUser
  parent: documentdb.DocumentClient
  name: readUser(userLink, options, callback)
  summary: 读取用户。
  fullName: documentdb.DocumentClient.readUser(userLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: 自链接的用户。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function readUser(userLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readPermission
  id: documentdb.DocumentClient#readPermission
  parent: documentdb.DocumentClient
  name: readPermission(permissionLink, options, callback)
  summary: 读取权限。
  fullName: documentdb.DocumentClient.readPermission(permissionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: permissionLink
      type:
      - string
      description: 自链接的权限。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function readPermission(permissionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readTrigger
  id: documentdb.DocumentClient#readTrigger
  parent: documentdb.DocumentClient
  name: readTrigger(triggerLink, options, callback)
  summary: 读取触发器对象。
  fullName: documentdb.DocumentClient.readTrigger(triggerLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: triggerLink
      type:
      - string
      description: 自链接的触发器。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function readTrigger(triggerLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readUserDefinedFunction
  id: documentdb.DocumentClient#readUserDefinedFunction
  parent: documentdb.DocumentClient
  name: readUserDefinedFunction(udfLink, options, callback)
  summary: 读取 udf 对象。
  fullName: documentdb.DocumentClient.readUserDefinedFunction(udfLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: udfLink
      type:
      - string
      description: 用户的自助链接定义的函数。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function readUserDefinedFunction(udfLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readStoredProcedure
  id: documentdb.DocumentClient#readStoredProcedure
  parent: documentdb.DocumentClient
  name: readStoredProcedure(sprocLink, options, callback)
  summary: 读取 StoredProcedure 对象。
  fullName: documentdb.DocumentClient.readStoredProcedure(sprocLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: 自链接的存储过程。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function readStoredProcedure(sprocLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readConflict
  id: documentdb.DocumentClient#readConflict
  parent: documentdb.DocumentClient
  name: readConflict(conflictLink, options, callback)
  summary: 读取冲突。
  fullName: documentdb.DocumentClient.readConflict(conflictLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: conflictLink
      type:
      - string
      description: 自链接的冲突。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function readConflict(conflictLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readDatabases
  id: documentdb.DocumentClient#readDatabases
  parent: documentdb.DocumentClient
  name: readDatabases(options)
  summary: 列出所有数据库。
  fullName: documentdb.DocumentClient.readDatabases(options)
  type: Function
  syntax:
    parameters:
    - id: options
      type:
      - documentdb.FeedOptions
      description: 源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function readDatabases(options)
  langs:
  - js
- uid: documentdb.DocumentClient#readCollections
  id: documentdb.DocumentClient#readCollections
  parent: documentdb.DocumentClient
  name: readCollections(databaseLink, options)
  summary: 在此数据库中获取所有集合。
  fullName: documentdb.DocumentClient.readCollections(databaseLink, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: 自链接的数据库。
    - id: options
      type:
      - documentdb.FeedOptions
      description: 源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function readCollections(databaseLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readDocuments
  id: documentdb.DocumentClient#readDocuments
  parent: documentdb.DocumentClient
  name: readDocuments(collectionLink, options)
  summary: 在此集合中获取所有文档。
  fullName: documentdb.DocumentClient.readDocuments(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: 自链接的集合。
    - id: options
      type:
      - documentdb.FeedOptions
      description: 源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function readDocuments(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readPartitionKeyRanges
  id: documentdb.DocumentClient#readPartitionKeyRanges
  parent: documentdb.DocumentClient
  name: readPartitionKeyRanges(collectionLink, options)
  summary: 获取所有分区键范围在此集合中。
  fullName: documentdb.DocumentClient.readPartitionKeyRanges(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: 自链接的集合。
    - id: options
      type:
      - documentdb.FeedOptions
      description: 源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function readPartitionKeyRanges(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readAttachments
  id: documentdb.DocumentClient#readAttachments
  parent: documentdb.DocumentClient
  name: readAttachments(documentLink, options)
  summary: 获取此文档的所有附件。
  fullName: documentdb.DocumentClient.readAttachments(documentLink, options)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: 自链接的文档。
    - id: options
      type:
      - documentdb.FeedOptions
      description: 源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function readAttachments(documentLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readUsers
  id: documentdb.DocumentClient#readUsers
  parent: documentdb.DocumentClient
  name: readUsers(databaseLink, feedOptions)
  summary: 获取在此数据库中的所有用户。
  fullName: documentdb.DocumentClient.readUsers(databaseLink, feedOptions)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: 自链接的数据库。
    - id: feedOptions
      type:
      - documentdb.FeedOptions
      description: 源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function readUsers(databaseLink, feedOptions)
  langs:
  - js
- uid: documentdb.DocumentClient#readPermissions
  id: documentdb.DocumentClient#readPermissions
  parent: documentdb.DocumentClient
  name: readPermissions(userLink, feedOptions)
  summary: 获取此用户的所有权限。
  fullName: documentdb.DocumentClient.readPermissions(userLink, feedOptions)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: 自链接的用户。
    - id: feedOptions
      type:
      - documentdb.FeedOptions
      description: 源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function readPermissions(userLink, feedOptions)
  langs:
  - js
- uid: documentdb.DocumentClient#readTriggers
  id: documentdb.DocumentClient#readTriggers
  parent: documentdb.DocumentClient
  name: readTriggers(collectionLink, options)
  summary: 获取此集合中的所有触发器。
  fullName: documentdb.DocumentClient.readTriggers(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: 自链接的集合。
    - id: options
      type:
      - documentdb.FeedOptions
      description: 源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function readTriggers(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readUserDefinedFunctions
  id: documentdb.DocumentClient#readUserDefinedFunctions
  parent: documentdb.DocumentClient
  name: readUserDefinedFunctions(collectionLink, options)
  summary: 在此集合中获取所有 UserDefinedFunctions。
  fullName: documentdb.DocumentClient.readUserDefinedFunctions(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: 自链接的集合。
    - id: options
      type:
      - documentdb.FeedOptions
      description: 源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function readUserDefinedFunctions(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readStoredProcedures
  id: documentdb.DocumentClient#readStoredProcedures
  parent: documentdb.DocumentClient
  name: readStoredProcedures(collectionLink, options)
  summary: 在此集合中获取所有 StoredProcedures。
  fullName: documentdb.DocumentClient.readStoredProcedures(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: 自链接的集合。
    - id: options
      type:
      - documentdb.FeedOptions
      description: 源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function readStoredProcedures(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readConflicts
  id: documentdb.DocumentClient#readConflicts
  parent: documentdb.DocumentClient
  name: readConflicts(collectionLink, options)
  summary: 在此集合中获取所有冲突。
  fullName: documentdb.DocumentClient.readConflicts(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: 自链接的集合。
    - id: options
      type:
      - documentdb.FeedOptions
      description: 源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function readConflicts(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryDatabases
  id: documentdb.DocumentClient#queryDatabases
  parent: documentdb.DocumentClient
  name: queryDatabases(query, options)
  summary: 列出满足查询条件的所有数据库。
  fullName: documentdb.DocumentClient.queryDatabases(query, options)
  type: Function
  syntax:
    parameters:
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL 查询。
    - id: options
      type:
      - documentdb.FeedOptions
      description: 源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function queryDatabases(query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryCollections
  id: documentdb.DocumentClient#queryCollections
  parent: documentdb.DocumentClient
  name: queryCollections(databaseLink, query, options)
  summary: 查询数据库的集合。
  fullName: documentdb.DocumentClient.queryCollections(databaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: 自链接的数据库。
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL 查询。
    - id: options
      type:
      - documentdb.FeedOptions
      description: 表示源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function queryCollections(databaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryDocuments
  id: documentdb.DocumentClient#queryDocuments
  parent: documentdb.DocumentClient
  name: queryDocuments(documentsFeedOrDatabaseLink, query, options)
  summary: 找不到文档中查询。
  fullName: documentdb.DocumentClient.queryDocuments(documentsFeedOrDatabaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: documentsFeedOrDatabaseLink
      type:
      - string
      description: 如果使用的分区解析程序的数据库链接的集合链接
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL 查询。
    - id: options
      type:
      - documentdb.FeedOptions
      description: 表示源的选项。
      optional: true
    - id: options.partitionKey
      type:
      - object
      description: 可选的分区键与分区解析程序一起使用
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function queryDocuments(documentsFeedOrDatabaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryPartitionKeyRanges
  id: documentdb.DocumentClient#queryPartitionKeyRanges
  parent: documentdb.DocumentClient
  name: queryPartitionKeyRanges(databaseLink, query, options)
  summary: 查询分区键范围
  fullName: documentdb.DocumentClient.queryPartitionKeyRanges(databaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: 自链接的数据库。
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL 查询。
    - id: options
      type:
      - documentdb.FeedOptions
      description: 表示源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function queryPartitionKeyRanges(databaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryAttachments
  id: documentdb.DocumentClient#queryAttachments
  parent: documentdb.DocumentClient
  name: queryAttachments(documentLink, query, options)
  summary: 查询文档附件。
  fullName: documentdb.DocumentClient.queryAttachments(documentLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: 自链接的文档。
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL 查询。
    - id: options
      type:
      - documentdb.FeedOptions
      description: 表示源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function queryAttachments(documentLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryUsers
  id: documentdb.DocumentClient#queryUsers
  parent: documentdb.DocumentClient
  name: queryUsers(databaseLink, query, options)
  summary: 查询数据库中的用户。
  fullName: documentdb.DocumentClient.queryUsers(databaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: 自链接的数据库。
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL 查询。
    - id: options
      type:
      - documentdb.FeedOptions
      description: 表示源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function queryUsers(databaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryPermissions
  id: documentdb.DocumentClient#queryPermissions
  parent: documentdb.DocumentClient
  name: queryPermissions(userLink, query, options)
  summary: 查询用户的权限。
  fullName: documentdb.DocumentClient.queryPermissions(userLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: 自链接的用户。
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL 查询。
    - id: options
      type:
      - documentdb.FeedOptions
      description: 表示源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function queryPermissions(userLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryTriggers
  id: documentdb.DocumentClient#queryTriggers
  parent: documentdb.DocumentClient
  name: queryTriggers(collectionLink, query, options)
  summary: 查询找不到触发器。
  fullName: documentdb.DocumentClient.queryTriggers(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: 自链接的集合。
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL 查询。
    - id: options
      type:
      - documentdb.FeedOptions
      description: 表示源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function queryTriggers(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryUserDefinedFunctions
  id: documentdb.DocumentClient#queryUserDefinedFunctions
  parent: documentdb.DocumentClient
  name: queryUserDefinedFunctions(collectionLink, query, options)
  summary: 查询用户定义的函数的集合。
  fullName: documentdb.DocumentClient.queryUserDefinedFunctions(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: 自链接的集合。
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL 查询。
    - id: options
      type:
      - documentdb.FeedOptions
      description: 表示源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function queryUserDefinedFunctions(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryStoredProcedures
  id: documentdb.DocumentClient#queryStoredProcedures
  parent: documentdb.DocumentClient
  name: queryStoredProcedures(collectionLink, query, options)
  summary: 查询集合 storedProcedures。
  fullName: documentdb.DocumentClient.queryStoredProcedures(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: 自链接的集合。
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL 查询。
    - id: options
      type:
      - documentdb.FeedOptions
      description: 表示源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function queryStoredProcedures(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryConflicts
  id: documentdb.DocumentClient#queryConflicts
  parent: documentdb.DocumentClient
  name: queryConflicts(collectionLink, query, options)
  summary: 查询找不到冲突。
  fullName: documentdb.DocumentClient.queryConflicts(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: 自链接的集合。
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL 查询。
    - id: options
      type:
      - documentdb.FeedOptions
      description: 表示源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function queryConflicts(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteDatabase
  id: documentdb.DocumentClient#deleteDatabase
  parent: documentdb.DocumentClient
  name: deleteDatabase(databaseLink, options, callback)
  summary: 删除数据库对象。
  fullName: documentdb.DocumentClient.deleteDatabase(databaseLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: 自链接的数据库。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function deleteDatabase(databaseLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteCollection
  id: documentdb.DocumentClient#deleteCollection
  parent: documentdb.DocumentClient
  name: deleteCollection(collectionLink, options, callback)
  summary: 删除的集合对象。
  fullName: documentdb.DocumentClient.deleteCollection(collectionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: 自链接的集合。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function deleteCollection(collectionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteDocument
  id: documentdb.DocumentClient#deleteDocument
  parent: documentdb.DocumentClient
  name: deleteDocument(documentLink, options, callback)
  summary: 删除文档对象。
  fullName: documentdb.DocumentClient.deleteDocument(documentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: 自链接的文档。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function deleteDocument(documentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteAttachment
  id: documentdb.DocumentClient#deleteAttachment
  parent: documentdb.DocumentClient
  name: deleteAttachment(attachmentLink, options, callback)
  summary: 删除附件对象。
  fullName: documentdb.DocumentClient.deleteAttachment(attachmentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: attachmentLink
      type:
      - string
      description: 自链接的附件。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function deleteAttachment(attachmentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteUser
  id: documentdb.DocumentClient#deleteUser
  parent: documentdb.DocumentClient
  name: deleteUser(userLink, options, callback)
  summary: 删除用户对象。
  fullName: documentdb.DocumentClient.deleteUser(userLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: 自链接的用户。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function deleteUser(userLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deletePermission
  id: documentdb.DocumentClient#deletePermission
  parent: documentdb.DocumentClient
  name: deletePermission(permissionLink, options, callback)
  summary: 删除权限对象。
  fullName: documentdb.DocumentClient.deletePermission(permissionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: permissionLink
      type:
      - string
      description: 自链接的权限。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function deletePermission(permissionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteTrigger
  id: documentdb.DocumentClient#deleteTrigger
  parent: documentdb.DocumentClient
  name: deleteTrigger(triggerLink, options, callback)
  summary: 删除触发器对象。
  fullName: documentdb.DocumentClient.deleteTrigger(triggerLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: triggerLink
      type:
      - string
      description: 自链接的触发器。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function deleteTrigger(triggerLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteUserDefinedFunction
  id: documentdb.DocumentClient#deleteUserDefinedFunction
  parent: documentdb.DocumentClient
  name: deleteUserDefinedFunction(udfLink, options, callback)
  summary: 删除该 UserDefinedFunction 对象。
  fullName: documentdb.DocumentClient.deleteUserDefinedFunction(udfLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: udfLink
      type:
      - string
      description: 用户的自助链接定义的函数。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function deleteUserDefinedFunction(udfLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteStoredProcedure
  id: documentdb.DocumentClient#deleteStoredProcedure
  parent: documentdb.DocumentClient
  name: deleteStoredProcedure(sprocLink, options, callback)
  summary: 删除 StoredProcedure 对象。
  fullName: documentdb.DocumentClient.deleteStoredProcedure(sprocLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: 自链接的存储过程。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function deleteStoredProcedure(sprocLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteConflict
  id: documentdb.DocumentClient#deleteConflict
  parent: documentdb.DocumentClient
  name: deleteConflict(conflictLink, options, callback)
  summary: 删除冲突对象。
  fullName: documentdb.DocumentClient.deleteConflict(conflictLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: conflictLink
      type:
      - string
      description: 自链接的冲突。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function deleteConflict(conflictLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceCollection
  id: documentdb.DocumentClient#replaceCollection
  parent: documentdb.DocumentClient
  name: replaceCollection(collectionLink, collection, options, callback)
  summary: 替换文档集合。
  fullName: documentdb.DocumentClient.replaceCollection(collectionLink, collection, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: 自链接的文档集合。
    - id: collection
      type:
      - object
      description: 表示新的文档集合正文。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function replaceCollection(collectionLink, collection, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceDocument
  id: documentdb.DocumentClient#replaceDocument
  parent: documentdb.DocumentClient
  name: replaceDocument(documentLink, document, options, callback)
  summary: 将为文档对象。
  fullName: documentdb.DocumentClient.replaceDocument(documentLink, document, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: 自链接的文档。
    - id: document
      type:
      - object
      description: 表示新的文档正文。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function replaceDocument(documentLink, document, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceAttachment
  id: documentdb.DocumentClient#replaceAttachment
  parent: documentdb.DocumentClient
  name: replaceAttachment(attachmentLink, attachment, options, callback)
  summary: 替换附件对象。
  fullName: documentdb.DocumentClient.replaceAttachment(attachmentLink, attachment, options, callback)
  type: Function
  syntax:
    parameters:
    - id: attachmentLink
      type:
      - string
      description: 自链接的附件。
    - id: attachment
      type:
      - object
      description: 表示新附件正文。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function replaceAttachment(attachmentLink, attachment, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceUser
  id: documentdb.DocumentClient#replaceUser
  parent: documentdb.DocumentClient
  name: replaceUser(userLink, user, options, callback)
  summary: 将为用户对象。
  fullName: documentdb.DocumentClient.replaceUser(userLink, user, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: 自链接的用户。
    - id: user
      type:
      - object
      description: 表示新的用户主体。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function replaceUser(userLink, user, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replacePermission
  id: documentdb.DocumentClient#replacePermission
  parent: documentdb.DocumentClient
  name: replacePermission(permissionLink, permission, options, callback)
  summary: 将权限对象。
  fullName: documentdb.DocumentClient.replacePermission(permissionLink, permission, options, callback)
  type: Function
  syntax:
    parameters:
    - id: permissionLink
      type:
      - string
      description: 自链接的权限。
    - id: permission
      type:
      - object
      description: 表示新权限正文。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function replacePermission(permissionLink, permission, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceTrigger
  id: documentdb.DocumentClient#replaceTrigger
  parent: documentdb.DocumentClient
  name: replaceTrigger(triggerLink, trigger, options, callback)
  summary: 替换触发器的对象。
  fullName: documentdb.DocumentClient.replaceTrigger(triggerLink, trigger, options, callback)
  type: Function
  syntax:
    parameters:
    - id: triggerLink
      type:
      - string
      description: 自链接的触发器。
    - id: trigger
      type:
      - object
      description: 表示新的触发器主体。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function replaceTrigger(triggerLink, trigger, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceUserDefinedFunction
  id: documentdb.DocumentClient#replaceUserDefinedFunction
  parent: documentdb.DocumentClient
  name: replaceUserDefinedFunction(udfLink, udf, options, callback)
  summary: 将为该 UserDefinedFunction 对象。
  fullName: documentdb.DocumentClient.replaceUserDefinedFunction(udfLink, udf, options, callback)
  type: Function
  syntax:
    parameters:
    - id: udfLink
      type:
      - string
      description: 用户的自助链接定义的函数。
    - id: udf
      type:
      - object
      description: 表示新的 udf 正文。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function replaceUserDefinedFunction(udfLink, udf, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceStoredProcedure
  id: documentdb.DocumentClient#replaceStoredProcedure
  parent: documentdb.DocumentClient
  name: replaceStoredProcedure(sprocLink, sproc, options, callback)
  summary: 将为 StoredProcedure 对象。
  fullName: documentdb.DocumentClient.replaceStoredProcedure(sprocLink, sproc, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: 自链接的存储过程。
    - id: sproc
      type:
      - object
      description: 表示新的存储过程主体。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function replaceStoredProcedure(sprocLink, sproc, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertDocument
  id: documentdb.DocumentClient#upsertDocument
  parent: documentdb.DocumentClient
  name: upsertDocument(documentsFeedOrDatabaseLink, body, options, callback)
  summary: >-
    更新插入文档中。

    <p>

    没有用于 JSON 文档集架构。 它们可能包含任意数量的自定义属性以及可选的附件列表。 <br>

    文档是一种应用程序资源，可以使用主密钥或资源键对其授权

    </p>
  fullName: documentdb.DocumentClient.upsertDocument(documentsFeedOrDatabaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentsFeedOrDatabaseLink
      type:
      - string
      description: 如果使用的分区解析程序的数据库链接的集合链接
    - id: body
      type:
      - object
      description: 表示文档的正文。 可以包含任意数量的用户定义的属性。
    - id: body.id
      type:
      - string
      description: 文档的 id 必须是唯一的每个文档。
      optional: true
    - id: body.ttl
      type:
      - number
      description: 以秒为单位的文档的生存时间。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: options.disableAutomaticIdGeneration
      type:
      - boolean
      description: 禁用自动 id 生成。 如果在正文中缺少 id，此选项是 true，则将返回错误。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function upsertDocument(documentsFeedOrDatabaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertAttachment
  id: documentdb.DocumentClient#upsertAttachment
  parent: documentdb.DocumentClient
  name: upsertAttachment(documentLink, body, options, callback)
  summary: >-
    Upsert 附件的文档对象。

    <p>

    每个文档可能包含零个或多个附件。 附件可以是任何 MIME 类型的文本、 图像、 二进制数据。 <br>

    这些外部存储在 Azure Blob 存储中。 删除父文档时，会自动删除附件。

    </P>
  fullName: documentdb.DocumentClient.upsertAttachment(documentLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: 自链接的文档。
    - id: body
      type:
      - Object
      description: 元数据定义赞媒体，contentType 附件媒体。 作为元数据的一部分，它可以包含任何其他属性。
    - id: body.contentType
      type:
      - string
      description: 附件的 MIME contentType。
    - id: body.media
      type:
      - string
      description: 附件内容与关联的媒体链接。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function upsertAttachment(documentLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertUser
  id: documentdb.DocumentClient#upsertUser
  parent: documentdb.DocumentClient
  name: upsertUser(databaseLink, body, options, callback)
  summary: Upsert 的数据库用户。
  fullName: documentdb.DocumentClient.upsertUser(databaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: 自链接的数据库。
    - id: body
      type:
      - object
      description: 表示用户的正文。
    - id: body.id
      type:
      - string
      description: 用户的 id。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function upsertUser(databaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertPermission
  id: documentdb.DocumentClient#upsertPermission
  parent: documentdb.DocumentClient
  name: upsertPermission(userLink, body, options, callback)
  summary: >-
    Upsert 权限。

    <p> 权限表示每个用户访问特定资源，例如文档或集合的权限。  </p>
  fullName: documentdb.DocumentClient.upsertPermission(userLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: 自链接的用户。
    - id: body
      type:
      - object
      description: 表示权限的主体。
    - id: body.id
      type:
      - string
      description: 权限的 id
    - id: body.permissionMode
      type:
      - string
      description: 此模式，必须是权限的值为 <xref:documentdb.PermissionMode>
    - id: body.resource
      type:
      - string
      description: 权限将应用于资源的链接。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function upsertPermission(userLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertTrigger
  id: documentdb.DocumentClient#upsertTrigger
  parent: documentdb.DocumentClient
  name: upsertTrigger(collectionLink, trigger, options, callback)
  summary: >-
    更新插入触发器。

    <p>

    Azure Cosmos DB 支持 pre 和 post 上执行的 JavaScript 中定义的触发器创建、 更新和删除。 <br>

    有关其他详细信息，请参阅服务器端 JavaScript API 文档。

    </p>
  fullName: documentdb.DocumentClient.upsertTrigger(collectionLink, trigger, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: 自链接的集合。
    - id: trigger
      type:
      - object
      description: 表示在触发器的正文。
    - id: trigger.id
      type:
      - string
      description: 触发器的 id。
    - id: trigger.triggerType
      type:
      - string
      description: 该触发器的类型应为的值之一<xref:documentdb.TriggerType>。
    - id: trigger.triggerOperation
      type:
      - string
      description: 触发器操作，应为的值之一<xref:documentdb.TriggerOperation>。
    - id: trigger.serverScript
      type:
      - function
      description: 在触发器的正文，它可以被传递为字符串化过。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function upsertTrigger(collectionLink, trigger, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertUserDefinedFunction
  id: documentdb.DocumentClient#upsertUserDefinedFunction
  parent: documentdb.DocumentClient
  name: upsertUserDefinedFunction(collectionLink, udf, options, callback)
  summary: >-
    Upsert UserDefinedFunction。

    <p>

    Azure Cosmos DB 支持 JavaScript Udf 可用于查询、 存储的过程和触发器内。 <br>

    有关其他详细信息，请参阅服务器端 JavaScript API 文档。

    </p>
  fullName: documentdb.DocumentClient.upsertUserDefinedFunction(collectionLink, udf, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: 自链接的集合。
    - id: udf
      type:
      - object
      description: 表示 userDefinedFunction 的正文。
    - id: udf.id
      type:
      - string
      description: Udf 的 id。
    - id: udf.userDefinedFunctionType
      type:
      - string
      description: Udf 的类型，它应为的值之一 <xref:documentdb.UserDefinedFunctionType>
    - id: udf.serverScript
      type:
      - function
      description: 表示正文的 udf，可以传递为字符串化过。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function upsertUserDefinedFunction(collectionLink, udf, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertStoredProcedure
  id: documentdb.DocumentClient#upsertStoredProcedure
  parent: documentdb.DocumentClient
  name: upsertStoredProcedure(collectionLink, sproc, options, callback)
  summary: >-
    Upsert StoredProcedure。

    <p>

    Azure Cosmos DB 允许在存储层中，针对文档集合直接执行存储的过程。 脚本 <br>

    获取主存储分区上的指定集合的 ACID 事务下执行。 有关其他详细信息， <br>

    请参阅服务器端 JavaScript API 文档。

    </p>
  fullName: documentdb.DocumentClient.upsertStoredProcedure(collectionLink, sproc, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: 自链接的集合。
    - id: sproc
      type:
      - object
      description: 表示存储过程的正文。
    - id: sproc.id
      type:
      - string
      description: 存储过程的 id。
    - id: sproc.serverScript
      type:
      - function
      description: 存储过程的正文，它可以传递为字符串化过。
    - id: options
      type:
      - documentdb.RequestOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function upsertStoredProcedure(collectionLink, sproc, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertAttachmentAndUploadMedia
  id: documentdb.DocumentClient#upsertAttachmentAndUploadMedia
  parent: documentdb.DocumentClient
  name: upsertAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  summary: Upsert 附件的文档对象。
  fullName: documentdb.DocumentClient.upsertAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: 自链接的文档。
    - id: readableStream
      type:
      - documentdb.stream.Readable
      description: 表示本身，需要上传的媒体流。
    - id: options
      type:
      - documentdb.MediaOptions
      description: 在请求选项。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function upsertAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readMedia
  id: documentdb.DocumentClient#readMedia
  parent: documentdb.DocumentClient
  name: readMedia(mediaLink, callback)
  summary: 读取的媒体的附件对象。
  fullName: documentdb.DocumentClient.readMedia(mediaLink, callback)
  type: Function
  syntax:
    parameters:
    - id: mediaLink
      type:
      - string
      description: 附件中的媒体的媒体链接。
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 请求回调，结果参数可以是一个缓冲区或根据的值流<xref:documentdb.MediaReadMode>。
    content: function readMedia(mediaLink, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#updateMedia
  id: documentdb.DocumentClient#updateMedia
  parent: documentdb.DocumentClient
  name: updateMedia(mediaLink, readableStream, options, callback)
  summary: 更新媒体的附件
  fullName: documentdb.DocumentClient.updateMedia(mediaLink, readableStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: mediaLink
      type:
      - string
      description: 附件中的媒体的媒体链接。
    - id: readableStream
      type:
      - documentdb.stream.Readable
      description: 表示本身，需要上传的媒体流。
    - id: options
      type:
      - documentdb.MediaOptions
      description: 媒体的选项
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function updateMedia(mediaLink, readableStream, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#executeStoredProcedure
  id: documentdb.DocumentClient#executeStoredProcedure
  parent: documentdb.DocumentClient
  name: executeStoredProcedure(sprocLink, params, options, callback)
  summary: 执行 StoredProcedure 对象表示的对象具有的分区键。
  fullName: documentdb.DocumentClient.executeStoredProcedure(sprocLink, params, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: 自链接的存储过程。
    - id: params
      type:
      - Array
      description: 表示存储过程的参数。
      optional: true
    - id: options
      type:
      - Object
      description: 分区键
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function executeStoredProcedure(sprocLink, params, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceOffer
  id: documentdb.DocumentClient#replaceOffer
  parent: documentdb.DocumentClient
  name: replaceOffer(offerLink, offer, callback)
  summary: 替换产品/服务对象。
  fullName: documentdb.DocumentClient.replaceOffer(offerLink, offer, callback)
  type: Function
  syntax:
    parameters:
    - id: offerLink
      type:
      - string
      description: 自链接的产品/服务。
    - id: offer
      type:
      - object
      description: 表示新的产品/服务主体。
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function replaceOffer(offerLink, offer, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readOffer
  id: documentdb.DocumentClient#readOffer
  parent: documentdb.DocumentClient
  name: readOffer(offerLink, callback)
  summary: 读取产品/服务。
  fullName: documentdb.DocumentClient.readOffer(offerLink, callback)
  type: Function
  syntax:
    parameters:
    - id: offerLink
      type:
      - string
      description: 自链接的产品/服务。
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。
    content: function readOffer(offerLink, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readOffers
  id: documentdb.DocumentClient#readOffers
  parent: documentdb.DocumentClient
  name: readOffers(options)
  summary: 列出所有产品/服务。
  fullName: documentdb.DocumentClient.readOffers(options)
  type: Function
  syntax:
    parameters:
    - id: options
      type:
      - documentdb.FeedOptions
      description: 源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function readOffers(options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryOffers
  id: documentdb.DocumentClient#queryOffers
  parent: documentdb.DocumentClient
  name: queryOffers(query, options)
  summary: 列出了满足查询条件的所有产品/服务。
  fullName: documentdb.DocumentClient.queryOffers(query, options)
  type: Function
  syntax:
    parameters:
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: SQL 查询。
    - id: options
      type:
      - documentdb.FeedOptions
      description: 源的选项。
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- QueryIterator 来处理读取源的实例。'
    content: function queryOffers(query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#getDatabaseAccount
  id: documentdb.DocumentClient#getDatabaseAccount
  parent: documentdb.DocumentClient
  name: getDatabaseAccount(callback)
  summary: 获取数据库帐户信息。
  fullName: documentdb.DocumentClient.getDatabaseAccount(callback)
  type: Function
  syntax:
    parameters:
    - id: options.urlConnection
      type:
      - string
      description: 其数据库帐户需要检索终结点 url。 如果不存在，当前客户端的 url 将使用。
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: 用于请求的回调。 回调的第二个参数的类型将为<xref:documentdb.DatabaseAccount>。
    content: function getDatabaseAccount(callback)
  langs:
  - js
- uid: documentdb.DocumentClient#getSessionToken
  id: documentdb.DocumentClient#getSessionToken
  parent: documentdb.DocumentClient
  name: getSessionToken(collectionLink)
  summary: 获取给定 collectionLink SessionToken
  fullName: documentdb.DocumentClient.getSessionToken(collectionLink)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      description: 会话令牌需要为其集合的链接
    content: function getSessionToken(collectionLink)
  langs:
  - js
references:
- uid: documentdb.QueryIterator
  name: QueryIterator
  fullName: documentdb.QueryIterator
  isExternal: false
