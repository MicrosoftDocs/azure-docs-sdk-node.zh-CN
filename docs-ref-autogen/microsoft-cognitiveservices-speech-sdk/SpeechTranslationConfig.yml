### YamlMime:UniversalReference
items:
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
    name: SpeechTranslationConfig
    fullName: SpeechTranslationConfig
    children:
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.addTargetLanguage
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.authorizationToken
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.close
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.endpointId
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.fromAuthorizationToken
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.fromEndpoint
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.fromSubscription
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.getProperty
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.outputFormat
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setProperty
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setProxy
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setProxy_1
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.speechRecognitionLanguage
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.targetLanguages
      - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.voiceName
    langs:
      - typeScript
    type: class
    summary: 语音翻译配置。
    extends:
      name: microsoft-cognitiveservices-speech-sdk.SpeechConfig
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.addTargetLanguage
    name: addTargetLanguage(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: 添加要转换为 （文本） 目标语言。
    syntax:
      content: 'function addTargetLanguage(value: string)'
      parameters:
        - id: value
          type:
            - string
          description: |
            例如 DE-DE 的语言
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.authorizationToken
    name: authorizationToken
    fullName: authorizationToken
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      获取/设置授权令牌。
      请注意:调用方需要确保授权令牌的有效期。 授权令牌过期之前，调用方需要通过调用此资源库与新的有效令牌刷新。
    syntax:
      content: 'public authorizationToken: string'
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.close
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: 释放关联的资源。
    syntax:
      content: function close()
      parameters: []
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.endpointId
    name: endpointId
    fullName: endpointId
    children: []
    langs:
      - typeScript
    type: property
    summary: 获取/设置用于语音识别的自定义的语音模型的终结点 ID。
    syntax:
      content: 'public endpointId: string'
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.fromAuthorizationToken
    name: 'fromAuthorizationToken(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      返回表示通过授权令牌和服务区域 SpeechTranslationConfig 静态实例。
      请注意:调用方需要确保授权令牌的有效期。 授权令牌过期之前，调用方需要通过设置新的有效令牌属性 authorizationToken 刷新。 否则，此 SpeechTranslationConfig 实例创建的所有识别器将识别过程中会遇到错误。
      复制配置值时创建新的识别器时，新的令牌值不会应用到已创建的识别器。
      对于以前创建的识别器，需要设置相应的识别器来刷新令牌的授权令牌。 否则，识别程序将识别过程中会遇到错误。
    syntax:
      content: 'static function fromAuthorizationToken(authorizationToken: string, region: string)'
      parameters:
        - id: authorizationToken
          type:
            - string
          description: 授权令牌。
        - id: region
          type:
            - string
          description: '区域名称 (请参阅<a href="https://aka.ms/csspeech/region">区域页</a>)。'
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.fromEndpoint
    name: 'fromEndpoint(URL, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      使用指定的终结点和订阅密钥创建语音翻译配置的实例。
      此方法仅用于使用非标准的服务终结点或参数的用户。
      请注意:终结点 URL 中指定的查询属性不会更改，即使它们设置的任何其他 Api。 例如，如果在 uri 查询参数的形式定义语言"语言 = DE-DE"，并还设置 speechRecognitionLanguage 属性，在 uri 中的语言设置将优先，并且有效的语言为"DE-DE"。
      未指定终结点中的属性可以通过其他 Api 设置 URL。
      请注意:若要使用具有 fromEndpoint 授权令牌，将为空字符串传递给 subscriptionKey 在 fromEndpoint 方法中，并将 authorizationToken = 要使用的授权令牌的创建 SpeechConfig 实例上的"令牌"。
    syntax:
      content: 'static function fromEndpoint(endpoint: URL, subscriptionKey: string)'
      parameters:
        - id: endpoint
          type:
            - URL
          description: 若要连接到服务终结点。
        - id: subscriptionKey
          type:
            - string
          description: 订阅密钥。
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.fromSubscription
    name: 'fromSubscription(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: SpeechTranslationConfig 的静态实例返回通过将传递订阅密钥和服务区域。
    syntax:
      content: 'static function fromSubscription(subscriptionKey: string, region: string)'
      parameters:
        - id: subscriptionKey
          type:
            - string
          description: 订阅密钥。
        - id: region
          type:
            - string
          description: '区域名称 (请参阅<a href="https://aka.ms/csspeech/region">区域页</a>)。'
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.getProperty
    name: 'getProperty(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 返回的任意属性的当前值。
    syntax:
      content: 'function getProperty(name: string, def?: string)'
      parameters:
        - id: name
          type:
            - string
          description: 查询到的属性的名称。
        - id: def
          type:
            - string
          description: 要在不知道该属性的情况下返回的值。
          optional: true
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.outputFormat
    name: outputFormat
    fullName: outputFormat
    children: []
    langs:
      - typeScript
    type: property
    summary: 获取/设置输出格式。
    syntax:
      content: 'public outputFormat: OutputFormat'
      return:
        type:
          - microsoft-cognitiveservices-speech-sdk.OutputFormat
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setProperty
    name: 'setProperty(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 将命名的属性设置为值
    syntax:
      content: 'function setProperty(name: string, value: string)'
      parameters:
        - id: name
          type:
            - string
          description: 属性的名称。
        - id: value
          type:
            - string
          description: |
            值。
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setProxy
    name: 'setProxy(string, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      设置代理配置。
      仅适用于 Node.js 的环境。
      版本 1.4.0 中添加了。
    syntax:
      content: 'function setProxy(proxyHostName: string, proxyPort: number)'
      parameters:
        - id: proxyHostName
          type:
            - string
          description: 代理服务器的主机名。
        - id: proxyPort
          type:
            - number
          description: |
            代理服务器的端口号。
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.setProxy_1
    name: 'setProxy(string, number, string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      设置代理配置。
      仅适用于 Node.js 的环境。
      版本 1.4.0 中添加了。
    syntax:
      content: 'function setProxy(proxyHostName: string, proxyPort: number, proxyUserName: string, proxyPassword: string)'
      parameters:
        - id: proxyHostName
          type:
            - string
          description: '主机名的代理服务器，而无需协议方案 (http://)'
        - id: proxyPort
          type:
            - number
          description: ''
        - id: proxyUserName
          type:
            - string
          description: 代理服务器的用户名。
        - id: proxyPassword
          type:
            - string
          description: |
            代理服务器的密码。
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.speechRecognitionLanguage
    name: speechRecognitionLanguage
    fullName: speechRecognitionLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: 获取/设置语音识别语言。
    syntax:
      content: 'public speechRecognitionLanguage: string'
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.targetLanguages
    name: targetLanguages
    fullName: targetLanguages
    children: []
    langs:
      - typeScript
    type: property
    summary: 获取要转换为 （文本） 目标语言。
    syntax:
      content: 'public targetLanguages: string[]'
      return:
        type:
          - 'string[]'
    package: microsoft-cognitiveservices-speech-sdk
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig.voiceName
    name: voiceName
    fullName: voiceName
    children: []
    langs:
      - typeScript
    type: property
    summary: 获取/设置的语音的已翻译的语言中，启用语音合成输出。
    syntax:
      content: 'public voiceName: string'
      return:
        type:
          - string
    package: microsoft-cognitiveservices-speech-sdk
references:
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig
    name: SpeechConfig
    spec.typeScript:
      - name: SpeechConfig
        fullName: SpeechConfig
        uid: microsoft-cognitiveservices-speech-sdk.SpeechConfig
  - uid: microsoft-cognitiveservices-speech-sdk.OutputFormat
    name: OutputFormat
    spec.typeScript:
      - name: OutputFormat
        fullName: OutputFormat
        uid: microsoft-cognitiveservices-speech-sdk.OutputFormat
  - uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig
    name: SpeechTranslationConfig
    spec.typeScript:
      - name: SpeechTranslationConfig
        fullName: SpeechTranslationConfig
        uid: microsoft-cognitiveservices-speech-sdk.SpeechTranslationConfig