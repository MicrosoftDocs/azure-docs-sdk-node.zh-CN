### YamlMime:UniversalReference
items:
  - uid: azure-iot-device.Client
    name: Client
    fullName: Client
    children:
      - azure-iot-device.Client.abandon_1
      - azure-iot-device.Client.abandon
      - azure-iot-device.Client.constructor
      - azure-iot-device.Client.close_1
      - azure-iot-device.Client.close
      - azure-iot-device.Client.complete_1
      - azure-iot-device.Client.complete
      - azure-iot-device.Client.fromAuthenticationProvider
      - azure-iot-device.Client.fromConnectionString
      - azure-iot-device.Client.fromSharedAccessSignature
      - azure-iot-device.Client.getTwin_1
      - azure-iot-device.Client.getTwin
      - azure-iot-device.Client.onDeviceMethod
      - azure-iot-device.Client.open_1
      - azure-iot-device.Client.open
      - azure-iot-device.Client.reject_1
      - azure-iot-device.Client.reject
      - azure-iot-device.Client.sendEvent_1
      - azure-iot-device.Client.sendEvent
      - azure-iot-device.Client.sendEventBatch_1
      - azure-iot-device.Client.sendEventBatch
      - azure-iot-device.Client.setOptions_1
      - azure-iot-device.Client.setOptions
      - azure-iot-device.Client.setRetryPolicy
      - azure-iot-device.Client.setTransportOptions_1
      - azure-iot-device.Client.setTransportOptions
      - azure-iot-device.Client.updateSharedAccessSignature
      - azure-iot-device.Client.uploadToBlob_1
      - azure-iot-device.Client.uploadToBlob
    langs:
      - typeScript
    type: class
    summary: |
      IoT 中心设备客户端用来与 Azure IoT 中心连接设备。
      SDK 的用户应在调用工厂方法之一[fromConnectionString](xref:azure-iot-device.Client.fromConnectionString)或[fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature)创建 IoT 中心设备客户端。
    extends:
      name: InternalClient
    package: azure-iot-device
  - uid: azure-iot-device.Client.abandon_1
    name: abandon(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function abandon(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageAbandoned>
    package: azure-iot-device
  - uid: azure-iot-device.Client.abandon
    name: 'abandon(Message, Callback<MessageAbandoned>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function abandon(message: Message, abandonCallback: Callback<MessageAbandoned>)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: abandonCallback
          type:
            - Callback<MessageAbandoned>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.Client.constructor
    name: 'Client(DeviceTransport, string, BlobUploadClient)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Client(transport: DeviceTransport, connStr?: string, blobUploadClient?: BlobUploadClient)'
      parameters:
        - id: transport
          type:
            - azure-iot-device.DeviceTransport
          description: '一个对象，实现接口的传输对象，例如，预期[Http](xref:azure-iot-device-http.Http)。'
        - id: connStr
          type:
            - string
          description: 连接字符串 (可选： 如果未提供，必须调用 updateSharedAccessSignature 来直接设置 SharedAccessSignature 令牌)。
          optional: true
        - id: blobUploadClient
          type:
            - BlobUploadClient
          description: |
            一个对象，它能够将流上载到 blob。
          optional: true
    package: azure-iot-device
  - uid: azure-iot-device.Client.close_1
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      关闭传输连接并销毁的客户端资源。
      *注意：客户端调用此方法后不能重复使用对象。*
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<Disconnected>
    package: azure-iot-device
  - uid: azure-iot-device.Client.close
    name: close(Callback<Disconnected>)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      关闭传输连接并销毁的客户端资源。
      *注意：客户端调用此方法后不能重复使用对象。*
    syntax:
      content: 'function close(closeCallback: Callback<Disconnected>)'
      parameters:
        - id: closeCallback
          type:
            - Callback<Disconnected>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.Client.complete_1
    name: complete(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function complete(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageCompleted>
    package: azure-iot-device
  - uid: azure-iot-device.Client.complete
    name: 'complete(Message, Callback<MessageCompleted>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function complete(message: Message, completeCallback: Callback<MessageCompleted>)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: completeCallback
          type:
            - Callback<MessageCompleted>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.Client.fromAuthenticationProvider
    name: 'fromAuthenticationProvider(AuthenticationProvider, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 从给定的身份验证方法，并使用给定的传输类型创建 IoT 中心设备客户端。
    syntax:
      content: 'static function fromAuthenticationProvider(authenticationProvider: AuthenticationProvider, transportCtor: any)'
      parameters:
        - id: authenticationProvider
          type:
            - AuthenticationProvider
          description: 用于获取 IoT 中心的身份验证参数的对象。
        - id: transportCtor
          type:
            - any
          description: |
            传输协议用于连接到 IoT 中心。
      return:
        type:
          - azure-iot-device.Client
    package: azure-iot-device
  - uid: azure-iot-device.Client.fromConnectionString
    name: 'fromConnectionString(string, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 从给定的连接字符串使用给定的传输类型创建 IoT 中心设备客户端。
    syntax:
      content: 'static function fromConnectionString(connStr: string, transportCtor: any)'
      parameters:
        - id: connStr
          type:
            - string
          description: 连接字符串，其中封装一个 IoT 中心的"设备连接"权限。
        - id: transportCtor
          type:
            - any
          description: |
            传输的构造函数。
      return:
        type:
          - azure-iot-device.Client
    package: azure-iot-device
  - uid: azure-iot-device.Client.fromSharedAccessSignature
    name: 'fromSharedAccessSignature(string, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 从给定的共享的访问签名使用给定的传输类型创建 IoT 中心设备客户端。
    syntax:
      content: 'static function fromSharedAccessSignature(sharedAccessSignature: string, transportCtor: any)'
      parameters:
        - id: sharedAccessSignature
          type:
            - string
          description: 共享的访问签名，其中封装一个 IoT 中心的"设备连接"权限。
        - id: transportCtor
          type:
            - any
          description: ''
      return:
        type:
          - azure-iot-device.Client
    package: azure-iot-device
  - uid: azure-iot-device.Client.getTwin_1
    name: getTwin()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getTwin()
      parameters: []
      return:
        type:
          - Promise<azure-iot-device.Twin>
    package: azure-iot-device
  - uid: azure-iot-device.Client.getTwin
    name: getTwin(Callback<Twin>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTwin(done: Callback<Twin>)'
      parameters:
        - id: done
          type:
            - Callback<azure-iot-device.Twin>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.Client.onDeviceMethod
    name: 'onDeviceMethod(string, (request: DeviceMethodRequest, response: DeviceMethodResponse) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 注册一个名为方法的回调`methodName`。
    syntax:
      content: 'function onDeviceMethod(methodName: string, callback: (request: DeviceMethodRequest, response: DeviceMethodResponse) => void)'
      parameters:
        - id: methodName
          type:
            - string
          description: 将处理由回调的方法名称
        - id: callback
          type:
            - '(request: DeviceMethodRequest, response: DeviceMethodResponse) => void'
          description: |
            每次调用该方法的方法请求时应被调用的函数`methodName`收到。
    package: azure-iot-device
  - uid: azure-iot-device.Client.open_1
    name: open()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function open()
      parameters: []
      return:
        type:
          - Promise<Connected>
    package: azure-iot-device
  - uid: azure-iot-device.Client.open
    name: open(Callback<Connected>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function open(openCallback: Callback<Connected>)'
      parameters:
        - id: openCallback
          type:
            - Callback<Connected>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.Client.reject_1
    name: reject(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reject(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageRejected>
    package: azure-iot-device
  - uid: azure-iot-device.Client.reject
    name: 'reject(Message, Callback<MessageRejected>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function reject(message: Message, rejectCallback: Callback<MessageRejected>)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: rejectCallback
          type:
            - Callback<MessageRejected>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.Client.sendEvent_1
    name: sendEvent(Message)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendEvent(message: Message)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
      return:
        type:
          - Promise<MessageEnqueued>
    package: azure-iot-device
  - uid: azure-iot-device.Client.sendEvent
    name: 'sendEvent(Message, Callback<MessageEnqueued>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendEvent(message: Message, sendEventCallback: Callback<MessageEnqueued>)'
      parameters:
        - id: message
          type:
            - Message
          description: ''
        - id: sendEventCallback
          type:
            - Callback<MessageEnqueued>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.Client.sendEventBatch_1
    name: 'sendEventBatch(Message[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendEventBatch(messages: Message[])'
      parameters:
        - id: messages
          type:
            - 'Message[]'
          description: ''
      return:
        type:
          - Promise<MessageEnqueued>
    package: azure-iot-device
  - uid: azure-iot-device.Client.sendEventBatch
    name: 'sendEventBatch(Message[], Callback<MessageEnqueued>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendEventBatch(messages: Message[], sendEventBatchCallback: Callback<MessageEnqueued>)'
      parameters:
        - id: messages
          type:
            - 'Message[]'
          description: ''
        - id: sendEventBatchCallback
          type:
            - Callback<MessageEnqueued>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.Client.setOptions_1
    name: setOptions(DeviceClientOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: 将传递到选项`Client`可用于配置传输的对象。
    syntax:
      content: 'function setOptions(options: DeviceClientOptions)'
      parameters:
        - id: options
          type:
            - azure-iot-device.DeviceClientOptions
          description: ''
      return:
        type:
          - Promise<TransportConfigured>
    package: azure-iot-device
  - uid: azure-iot-device.Client.setOptions
    name: 'setOptions(DeviceClientOptions, Callback<TransportConfigured>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 将传递到选项`Client`可用于配置传输的对象。
    syntax:
      content: 'function setOptions(options: DeviceClientOptions, done: Callback<TransportConfigured>)'
      parameters:
        - id: options
          type:
            - azure-iot-device.DeviceClientOptions
          description: '一个 <xref:DeviceClientOptions> 对象。'
        - id: done
          type:
            - Callback<TransportConfigured>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.Client.setRetryPolicy
    name: setRetryPolicy(RetryPolicy)
    children: []
    type: method
    langs:
      - typeScript
    summary: '设置客户端上的所有操作使用的重试策略。 默认值是[ExponentialBackoffWithJitter](xref:azure-iot-common.ExponentialBackoffWithJitter)。'
    syntax:
      content: 'function setRetryPolicy(policy: RetryPolicy)'
      parameters:
        - id: policy
          type:
            - RetryPolicy
          description: |
            应该用于所有未来的操作重试策略。
    package: azure-iot-device
  - uid: azure-iot-device.Client.setTransportOptions_1
    name: setTransportOptions(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setTransportOptions(options: any)'
      parameters:
        - id: options
          type:
            - any
          description: ''
      return:
        type:
          - Promise<TransportConfigured>
    package: azure-iot-device
  - uid: azure-iot-device.Client.setTransportOptions
    name: 'setTransportOptions(any, Callback<TransportConfigured>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setTransportOptions(options: any, done: Callback<TransportConfigured>)'
      parameters:
        - id: options
          type:
            - any
          description: ''
        - id: done
          type:
            - Callback<TransportConfigured>
          description: ''
    package: azure-iot-device
  - uid: azure-iot-device.Client.updateSharedAccessSignature
    name: 'updateSharedAccessSignature(string, Callback<SharedAccessSignatureUpdated>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateSharedAccessSignature(sharedAccessSignature: string, updateSasCallback?: Callback<SharedAccessSignatureUpdated>)'
      parameters:
        - id: sharedAccessSignature
          type:
            - string
          description: ''
        - id: updateSasCallback
          type:
            - Callback<SharedAccessSignatureUpdated>
          description: ''
          optional: true
    package: azure-iot-device
  - uid: azure-iot-device.Client.uploadToBlob_1
    name: 'uploadToBlob(string, Stream, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '`uploadToBlob`方法将流上载到 blob。'
    syntax:
      content: 'function uploadToBlob(blobName: string, stream: Stream, streamLength: number)'
      parameters:
        - id: blobName
          type:
            - string
          description: ''
        - id: stream
          type:
            - Stream
          description: ''
        - id: streamLength
          type:
            - number
          description: ''
      return:
        type:
          - Promise<void>
    package: azure-iot-device
  - uid: azure-iot-device.Client.uploadToBlob
    name: 'uploadToBlob(string, Stream, number, ErrorCallback)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '`uploadToBlob`方法将流上载到 blob。'
    syntax:
      content: 'function uploadToBlob(blobName: string, stream: Stream, streamLength: number, callback: ErrorCallback)'
      parameters:
        - id: blobName
          type:
            - string
          description: 要用于将使用流的内容创建的 blob 的名称。
        - id: stream
          type:
            - Stream
          description: 应将数据与数据上载到 blob。
        - id: streamLength
          type:
            - number
          description: 数据的大小应上载到 blob。
        - id: callback
          type:
            - ErrorCallback
          description: ''
    package: azure-iot-device
references:
  - uid: azure-iot-device.DeviceTransport
    name: DeviceTransport
    spec.typeScript:
      - name: DeviceTransport
        fullName: DeviceTransport
        uid: azure-iot-device.DeviceTransport
  - uid: Callback<azure-iot-device.Twin>
    name: Twin>
    spec.typeScript:
      - name: Callback<
        fullName: Callback<
      - name: Twin
        fullName: Twin
        uid: azure-iot-device.Twin
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-iot-device.Twin>
    name: Twin>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Twin
        fullName: Twin
        uid: azure-iot-device.Twin
      - name: '>'
        fullName: '>'
  - uid: azure-iot-device.DeviceClientOptions
    name: DeviceClientOptions
    spec.typeScript:
      - name: DeviceClientOptions
        fullName: DeviceClientOptions
        uid: azure-iot-device.DeviceClientOptions
  - uid: azure-iot-device.Client
    name: Client
    spec.typeScript:
      - name: Client
        fullName: Client
        uid: azure-iot-device.Client